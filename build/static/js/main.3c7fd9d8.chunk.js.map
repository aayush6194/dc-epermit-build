{"version":3,"sources":["assets/loader.svg","assets/message3.svg","pages/analytics/vx-demo.tsx","config.ts","style/generator.ts","style/components/card/index.tsx","style/components/heading/index.tsx","style/components/loader/index.tsx","style/components/grid/index.tsx","style/components/button/index.tsx","style/components/avatar/index.tsx","style/animation.ts","style/components/notification/index.tsx","style/components/modal/index.tsx","style/components/text/index.tsx","pages/analytics/data-generator.tsx","pages/analytics/panel.tsx","pages/analytics/index.tsx","style/components/sidebar.tsx","style/components/topnav.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/empty.svg"],"names":["module","exports","tooltipStyles","defaultStyles","background","border","color","formatDate","timeFormat","getDate","d","Date","date","getStockValue","value","bisectDate","bisector","left","withTooltip","width","stock","height","margin","top","right","bottom","showTooltip","hideTooltip","tooltipData","tooltipTop","tooltipLeft","xMax","yMax","dateScale","useMemo","scaleTime","range","domain","extent","stockValueScale","scaleLinear","max","handleTooltip","useCallback","event","x","localPoint","x0","invert","index","d0","d1","valueOf","y","fill","rx","LinearGradient","id","from","to","toOpacity","GridRows","scale","strokeDasharray","stroke","strokeOpacity","pointerEvents","GridColumns","AreaClosed","data","yScale","strokeWidth","curve","curveMonotoneX","Bar","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","AxisBottom","hideTicks","tickStroke","tickLabelProps","fontSize","dx","textAnchor","AxisLeft","axisClassName","dy","Tooltip","style","minWidth","textAlign","transform","gridStyle","cols","customCols","customRows","gridGap","mobileCols","mobileLayout","placeItems","hideOnMobile","fontStyle","darkMode","size","bold","placeSelf","textShadow","sizeStyle","padding","designStyle","shadow","rounded","bg","cursor","elementProps","props","className","onClick","Card","normalBg","children","bgColor","dark","grid","bgReg","selected","hover","elProps","styled","div","h1","styleProps","fontProps","glow","keyframes","img","Grid","Layout","Item","gridRowStart","gridColumnStart","Button","onSubmit","disabled","loading","primaryColor","txtColor","Bt","button","ImgBox","Avatar","url","src","large","medium","borderWidth","maxHeight","slideIn","Containter","createPopup","type","position","containerId","hasContainer","document","getElementById","container","createElement","root","setAttribute","classList","add","appendChild","prepend","child","Notification","title","message","visibilityTime","remove","removeChild","textOverflow","aria-hidden","setTimeout","ReactDOM","render","Icon","iconName","Wrapper","Modall","Header","Body","svg","Modal","hideCancel","close","El","React","isValidElement","open","randomCloseGenerator","maxRandomPoint","Text","HeaderLayout","createPoints","Math","floor","random","start_","end_","start","moment","set","end","isBefore","Error","t","diff","points","clone","toString","push","intoHeadings","str","length","charAt","toUpperCase","substring","replace","panelJSON","allImg","api","name","AddPanel","currentPanels","setCurrentPanels","options","useState","panels","setPanels","remainingPanels","filter","item","includes","map","el","unselect","select","ModifyPanel","e","i","defaultValue","onChange","temp","modify","option","Option","DisplayCard","backgroundImage","backgroundSize","fontWeight","dangerouslySetInnerHTML","__html","String","duration","DisplaySelectCard","Group","Number","Panel","addModal","editModal","panel","minHeight","FilterBox","setEndDate","setStartDate","display","borderLeft","gridAutoColumns","borderRadius","startDate","endDate","Analytics","setter","useRef","setRange","setStocks","useEffect","resize","current","clientWidth","clientHeight","window","addEventListener","removeEventListener","maxWidth","ref","Nav","Sidebar","Line","hr","MyNavLink","NavLink","active","MyNavLink2","LeftNav","icon","bool","textDecoration","reduce","acc","TopNav","topNav","MiniNav","TopNavBar","user","logout","gridTemplateColumns","App","paddingLeft","paddingTop","boxSizing","path","Boolean","location","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.3c7fd9d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.5a306b20.svg\";","module.exports = __webpack_public_path__ + \"static/media/message3.10cb2302.svg\";","import React, { useMemo, useCallback, useState, useEffect } from 'react';\r\nimport { AreaClosed, Line, Bar} from '@vx/shape';\r\nimport { curveMonotoneX } from '@vx/curve';\r\nimport { GridRows, GridColumns } from '@vx/grid';\r\nimport { scaleTime, scaleLinear } from '@vx/scale';\r\nimport { withTooltip, Tooltip, defaultStyles } from '@vx/tooltip';\r\nimport { WithTooltipProvidedProps } from '@vx/tooltip/lib/enhancers/withTooltip';\r\nimport { localPoint } from '@vx/event';\r\nimport { LinearGradient } from '@vx/gradient';\r\nimport { max, extent, bisector } from 'd3-array';\r\nimport { timeFormat } from 'd3-time-format';\r\nimport { primaryColor } from '../../config';\r\nimport { AxisLeft, AxisBottom } from '@vx/axis';\r\n\r\ntype Data = {\r\n  date: string,\r\n  value: number\r\n};\r\n\r\nexport const background =  primaryColor;\r\nexport const background2 = primaryColor;\r\nexport const accentColor = \"lightgray\";\r\nexport const accentColorDark = '#75daad';\r\n\r\nconst tooltipStyles = {\r\n  ...defaultStyles,\r\n  background,\r\n  border: '1px solid white',\r\n  color: 'white',\r\n};\r\n\r\nconst formatDate = timeFormat(\"%b %d, '%y\");\r\nconst getDate = (d: Data) => new Date(d.date);\r\nconst getStockValue = (d: Data) => d.value;\r\nconst bisectDate = bisector<Data, Date>(d => new Date(d.date)).left;\r\n\r\nexport type AreaProps = {\r\n  width: number;\r\n  height: number;\r\n  stock : any;\r\n  margin?: { top: number; right: number; bottom: number; left: number };\r\n};\r\n\r\nexport default withTooltip<AreaProps, Data>(({\r\n    width,\r\n    stock,\r\n    height,\r\n    margin = { top: 0, right: 0, bottom: 0, left: 0 },\r\n    showTooltip,\r\n    hideTooltip,\r\n    tooltipData,\r\n    tooltipTop = 0,\r\n    tooltipLeft = 0,\r\n  }: AreaProps & WithTooltipProvidedProps<Data>) => {\r\n    if (width < 10) return null;\r\n\r\n    const xMax = width - margin.left - margin.right;\r\n    const yMax = height - margin.top - margin.bottom;\r\n\r\n  \r\n\r\n    const dateScale = useMemo(() =>\r\n        scaleTime({\r\n          range: [0, xMax],\r\n          domain: extent(stock, getDate) as [Date, Date],\r\n        }),\r\n      [xMax],\r\n    );\r\n    const stockValueScale = useMemo(() =>\r\n        scaleLinear({\r\n          range: [yMax, 0],\r\n          domain: [0, (max(stock, getStockValue) || 0) + yMax / 3],  \r\n        }),\r\n      [yMax],\r\n    );\r\n\r\n    const handleTooltip = useCallback(\r\n      (event: React.TouchEvent<SVGRectElement> | React.MouseEvent<SVGRectElement>) => {\r\n        const { x } = localPoint(event) || { x: 0 };\r\n        const x0 = dateScale.invert(x);\r\n        const index = bisectDate(stock, x0, 1);\r\n        const d0 = stock[index - 1];\r\n        const d1 = stock[index];\r\n        let d = d0;\r\n        if (d1 && getDate(d1)) {\r\n          d = x0.valueOf() - getDate(d0).valueOf() > getDate(d1).valueOf() - x0.valueOf() ? d1 : d0;\r\n        }\r\n        showTooltip({\r\n          tooltipData: d0,\r\n          tooltipLeft: x,\r\n          tooltipTop: stockValueScale(getStockValue(d)),\r\n        });\r\n      },\r\n      [showTooltip, stockValueScale, dateScale],\r\n    );\r\n    return (\r\n              <div>\r\n        <svg width={width} height={height}>\r\n          <rect\r\n            x={0}\r\n            y={0}\r\n            width={width}\r\n            height={height}\r\n            fill=\"url(#area-background-gradient)\"\r\n            rx={14}\r\n          />\r\n      \r\n          <LinearGradient id=\"area-background-gradient\" from={background} to={background2} />\r\n          <LinearGradient id=\"area-gradient\" from={accentColor} to={accentColor} toOpacity={0.1} />\r\n          <GridRows<number>\r\n            scale={stockValueScale}\r\n            width={xMax}\r\n            strokeDasharray=\"3,3\"\r\n            stroke={accentColor}\r\n            strokeOpacity={0.3}\r\n            pointerEvents=\"none\"\r\n          />\r\n          <GridColumns<Date>\r\n            scale={dateScale}\r\n            height={yMax}\r\n            strokeDasharray=\"3,3\"\r\n            stroke={accentColor}\r\n            strokeOpacity={0.3}\r\n            pointerEvents=\"none\"\r\n          />\r\n          <AreaClosed<Data>\r\n            data={stock}\r\n            x={d => dateScale(getDate(d))}\r\n            y={d => stockValueScale(getStockValue(d))}\r\n            yScale={stockValueScale}\r\n            \r\n            strokeWidth={1}\r\n            stroke=\"url(#area-gradient)\"\r\n            fill=\"url(#area-gradient)\"\r\n            curve={curveMonotoneX}\r\n          />\r\n          <Bar\r\n            x={0}\r\n            y={0}\r\n            width={width}\r\n            height={height}\r\n            fill=\"transparent\"\r\n            rx={14}\r\n           \r\n            onTouchStart={handleTooltip}\r\n            onTouchMove={handleTooltip}\r\n            onMouseMove={handleTooltip}\r\n            onMouseLeave={() => hideTooltip()}\r\n          />\r\n          {tooltipData && (\r\n            <g>\r\n              <Line\r\n                from={{ x: tooltipLeft, y: 0 }}\r\n                to={{ x: tooltipLeft, y: yMax }}\r\n                stroke={accentColorDark}\r\n                strokeWidth={2}\r\n                pointerEvents=\"none\"\r\n                strokeDasharray=\"5,\"\r\n              />\r\n            </g>\r\n          )}\r\n            <AxisBottom\r\n          hideTicks={true}\r\n          scale={dateScale}\r\n          tickStroke={primaryColor}\r\n          stroke={primaryColor}\r\n          tickLabelProps={(value : any, index: any) => ({\r\n            fontSize: 11,\r\n            stroke: \"white\",\r\n            dx: '15px',\r\n            textAnchor: 'end',\r\n          })}\r\n        />\r\n          <AxisLeft\r\n          scale={stockValueScale}\r\n          stroke={primaryColor}\r\n          axisClassName=\"sup\"\r\n          tickStroke={primaryColor}\r\n          tickLabelProps={() => ({\r\n            fill: primaryColor,\r\n            stroke: \"white\",\r\n            fontSize: 15,\r\n            textAnchor: 'start',\r\n            dx: '15px',\r\n            dy: '-2px'\r\n          })}   \r\n      />   \r\n        \r\n        </svg>\r\n        {tooltipData && (\r\n          <div>\r\n            <Tooltip top={tooltipTop - 12} left={tooltipLeft + 12} style={tooltipStyles}>\r\n              {`${getStockValue(tooltipData)}`}\r\n            </Tooltip>\r\n            <Tooltip\r\n\r\n              top={yMax - 14}\r\n              left={tooltipLeft}\r\n              style={{\r\n                ...defaultStyles,\r\n                \r\n                minWidth: 72,\r\n                textAlign: 'center',\r\n                transform: 'translateX(-50%)',\r\n              }}\r\n            >\r\n              {formatDate(getDate(tooltipData))}\r\n            </Tooltip>\r\n          </div>\r\n        )}\r\n        </div>\r\n \r\n    );\r\n  },\r\n);","\r\nexport const mobileWidth =  '860px';\r\nexport const tabletWidth =  '1100px';\r\nexport const primaryColor = '#33B482';    // Lighter Bluish Green\r\nexport const secondaryColor = '#037885'; // Darker Bluish Green\r\nexport const cardColor = '#E8F6F3';      // Greenish White \r\nexport const txtColor = '#037885';       // Darker Bluish Green\r\n\r\nexport const primaryDarkColor = '#8b64b7';\r\nexport const secondaryDarkColor = 'black';\r\nexport const txtColorDark = 'white';\r\nexport const cardColorDark = '#182A2F';\r\n\r\nexport const textOverFlowLimit = 15;","\r\nimport { txtColor, txtColorDark,   mobileWidth } from '../config';\r\n\r\nexport interface GridStyle {\r\n    cols? : number | string | undefined;\r\n    rows? : number | string;\r\n    customCols? : string;\r\n    customRows? : string;\r\n    gridGap? : number | string;\r\n    mobileCols? : string;\r\n    mobileLayout? : boolean;\r\n    placeItems? : string, \r\n    hideOnMobile? : boolean,\r\n};\r\n\r\nexport const gridStyle = ({ cols, customCols, customRows, gridGap, mobileCols, mobileLayout, placeItems, hideOnMobile }: GridStyle)=>`\r\n    display: grid;\r\n    grid-gap: ${gridGap || '1em'} ;\r\n    grid-template-columns: repeat(${cols ? cols : \"1\"}, 1fr);\r\n    ${customCols? `grid-template-columns: ${customCols};`: ``}\r\n    ${customRows? `grid-template-rows: ${customRows};` : ``}\r\n    place-items: center;\r\n    ${placeItems? `place-items: ${placeItems};` : ``}\r\n    @media(max-width: ${mobileWidth}){\r\n        ${hideOnMobile? `display: none; !important` : ''}\r\n        ${mobileLayout !== false?  `grid-template-columns: 1fr;` : ``}\r\n        ${mobileCols? `grid-template-columns: ${mobileCols};` : ``}  \r\n    }\r\n`;\r\n\r\n\r\nexport interface FontStyle {\r\n    size? : number | string | undefined;\r\n    color? : string;\r\n    bold? :boolean;\r\n    textAlign? :  number | string;\r\n    placeSelf? : string,\r\n    textShadow? : string,\r\n};\r\n\r\nexport const fontStyle = ({ color, size, bold, textAlign,  placeSelf, textShadow } : FontStyle | any, darkMode : boolean)=>`\r\n    text-align: ${textAlign || 'center'};\r\n    ${`color : ${darkMode? txtColorDark : color? color : txtColor}`};\r\n    font-size: ${size || '1em'};\r\n    ${textShadow? `text-shadow: 1.2px 1.2px 2px black;` : \"\"}\r\n    font-weight: ${bold ? `bolder` : 'normal'};\r\n    ${placeSelf? `place-self: ${placeSelf};` : ''}\r\n`;\r\n\r\n\r\nexport interface SizeStyle {\r\n    width? : number | string | undefined;\r\n    height? : number | string;\r\n    max? : number | string;\r\n    padding? :  number | string;\r\n    margin? :  number | string,\r\n    minWidth? :  number | string,\r\n};\r\n\r\nexport const sizeStyle = ({width, height, max, padding, margin, minWidth} : any)=>`\r\n    width: ${width || \"auto\"};\r\n    min-width : ${minWidth || \"auto\"};\r\n    height: ${height || \"auto\"};\r\n    margin: ${margin || \"0\"} ;\r\n    padding: ${padding || \"0\"}!important;\r\n    ${!max? `max-width: 1500px;` : ``}\r\n`;\r\n\r\nexport interface DesignStyle {\r\n    shadow? : boolean;\r\n    rounded? : boolean;\r\n    bg? : string;\r\n    background? : string;\r\n    cursor? :  string;\r\n    hideOnMobile? : boolean,\r\n};\r\n\r\nexport const designStyle = ({shadow, rounded, bg, background, hideOnMobile, cursor} : DesignStyle)=>`\r\n    ${shadow? `box-shadow: 0 .25em .5em rgba(0,0,0,.5);` : \"\"}\r\n    pointer : ${cursor? 'cursor': 'default'};\r\n    transition: 200ms ease-out;\r\n    border-radius: ${rounded? '1.2em' : `.5em`};\r\n    border: 0px;\r\n    ${background?  `background: ${background};` : \"\"}\r\n    background-repeat: no-repeat;\r\n    @media(max-width: ${mobileWidth}){\r\n        ${hideOnMobile? `display: none;` : ''}\r\n    }\r\n`;\r\n\r\nexport interface ElementProps {\r\n    className? : string;\r\n    onClick?: ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined;\r\n    style?: React.CSSProperties;\r\n};\r\n\r\n\r\nexport const elementProps = (props: ElementProps | any) => {\r\n    const {style, className, onClick}  = props;\r\n    const property = {...style? { style }: {}, ...className? {className} : {}, ...onClick? {onClick} : {}};\r\n    return property;\r\n}\r\n","import styled from 'styled-components';\r\nimport React from 'react';\r\nimport { primaryColor, txtColor, txtColorDark,  cardColorDark} from '../../../config';\r\nimport { sizeStyle, fontStyle, designStyle, elementProps, gridStyle, SizeStyle } from '../../generator';\r\n\r\n\r\nexport const Card = (props: any) => {\r\n    const { \r\n        border, \r\n        normalBg, \r\n        children,  \r\n        bgColor, \r\n        dark = false,  \r\n        shadow = false,\r\n        invert = false,\r\n        grid, bgReg, selected, hover, \r\n    } = props;\r\n\r\n    const {   \r\n        margin = \"1em .5em\", \r\n        padding = \".8em 1em\",\r\n        minWidth = \"3em\",\r\n        width\r\n    } = props as SizeStyle;\r\n\r\n    const darkMode = dark || false;\r\n    const elProps = elementProps(props);\r\n    \r\n    const Card = styled.div`\r\n        box-shadow: ${selected ? '0 .25em .5em dodgerblue' :  shadow === false? '':  '0 .25em .5em rgba(0,0,0,.5)'};\r\n        ${hover && '&:hover { transform: scale(1.1); }'}\r\n        ${border && `border: ${border} solid;`}\r\n\r\n        ${bgColor &&  `background: ${bgColor}; !important`}\r\n        background: ${darkMode ? cardColorDark : invert ? primaryColor : \"white\"}};\r\n        ${bgReg && `background: ${darkMode ? cardColorDark : `url(${bgReg});`}\r\n        ${!normalBg && `background-size: cover;\r\n                        background-attachment: fixed;`}`}\r\n        ${grid && gridStyle(props)}\r\n        ${sizeStyle({ margin, padding, minWidth, width})}\r\n        ${fontStyle(props, darkMode)}\r\n        ${designStyle(props)}\r\n        color: ${invert ? txtColorDark: darkMode? txtColorDark : txtColor};`;\r\n\r\n    return (<Card {...elProps}>{children}</Card>);\r\n};\r\n\r\n","import styled from 'styled-components';\r\nimport React from 'react';\r\nimport { sizeStyle, fontStyle, FontStyle, SizeStyle, ElementProps } from '../../generator';\r\n\r\n\r\ninterface HeaderProps extends FontStyle, SizeStyle, ElementProps{\r\n    children? : React.ReactNode;\r\n}\r\n\r\nconst HeaderLayout = styled.h1<{ styleProps: SizeStyle, fontProps: FontStyle }>`\r\n${props => sizeStyle(props.styleProps)}\r\n${props=> fontStyle(props.fontProps, false)}`;\r\n\r\nexport const Header = (props: HeaderProps) => {\r\n    const { children, style, className, onClick } = props;\r\n\r\n    const { width, height, max, padding, margin, minWidth } = props;\r\n    const styleProps : SizeStyle = { \r\n        width, \r\n        height, \r\n        max, \r\n        padding, \r\n        margin, \r\n        minWidth \r\n    };\r\n\r\n    const { size, color, bold, textAlign, placeSelf, textShadow } = props;\r\n    const fontProps : FontStyle = {\r\n        size: typeof size === 'number'? (6 - size)/2 + \"rem\": size? size : \"1.5em\",\r\n        color, \r\n        bold, \r\n        textAlign,  \r\n        placeSelf, \r\n        textShadow\r\n    };\r\n\r\n    return (\r\n        <HeaderLayout styleProps={styleProps}  fontProps={fontProps} onClick={onClick} className={className} style={style}> {children} </HeaderLayout>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport mySvg from '../../../assets/loader.svg';\r\nimport styled, {keyframes} from 'styled-components';\r\n\r\nconst LoaderEl = styled.div`\r\n  position: absolute;\r\n  left: calc(50% - 40px);\r\n  top: calc(50% - 40px);\r\n  display: inline-block;`;\r\n\r\nexport const Loader = ():JSX.Element=> (\r\n  <LoaderEl className=\"blue-txt\">\r\n    <img width=\"70\" src={mySvg} alt=\"A Loader\" />\r\n  </LoaderEl>);\r\n\r\n\r\nconst glow = keyframes`\r\n0% { \r\n  transform: scale(0.9);\r\n  filter: drop-shadow(3px 4px 6px teal); \r\n}\r\n100% {\r\n  transform: scale(1);\r\n  filter: drop-shadow(0px 0px 0px white); \r\n}`;\r\n \r\nconst Img = styled.img`\r\nwidth: 200px;\r\nmin-width: 10vw;\r\nmax-width: 60vw;\r\nanimation: ${glow} 800ms ease-out infinite;`;\r\n\r\nexport const Loader2 = ({ logo } : any):JSX.Element=> (\r\n  <div className=\"grid full\">\r\n    <Img src={logo} alt=\"A Loader\" />\r\n  </div>);\r\n\r\nexport default Loader;","import styled from 'styled-components';\r\nimport React from 'react';\r\nimport { sizeStyle, fontStyle, designStyle, elementProps, gridStyle, FontStyle, SizeStyle, ElementProps, GridStyle } from '../../generator';\r\n\r\ninterface GridProps extends FontStyle, SizeStyle, ElementProps, GridStyle{\r\n    children? : React.ReactNode;\r\n    background? : string; \r\n}\r\n\r\nexport const Grid = (props: GridProps) => {\r\n    const { children, background } = props;\r\n    const darkMode = false;\r\n    const elProps = elementProps(props);\r\n     const Layout = styled.div`\r\n        ${background && `background: ${background};`}\r\n        ${gridStyle(props)}\r\n        ${sizeStyle(props)}\r\n        ${fontStyle(props, darkMode)}`;\r\n     return (<Layout {...elProps}>{children}</Layout>);\r\n };\r\n\r\n\r\n\r\n const GridItem = (props: any) => {\r\n    const { children, gridRowStart, gridColumnStart, background, hideOnMobile } = props;\r\n    const darkMode = true;\r\n    const elProps = elementProps(props);\r\n    const Layout = styled.div`\r\n    ${sizeStyle(props)}\r\n     ${gridStyle(props)}   \r\n     ${gridRowStart && `grid-row-start: ${gridRowStart};`}\r\n     ${gridColumnStart && `grid-column-start: ${gridColumnStart};`}\r\n     ${background && `background: ${background};`}\r\n     ${fontStyle(props, darkMode)}\r\n     ${designStyle(props)}`;\r\n    return (<Layout {...elProps}> {children} </Layout>);\r\n};\r\n\r\n\r\nGrid.Item = GridItem;\r\n\r\nexport default Grid;","import styled from 'styled-components';\r\nimport React from 'react';\r\nimport { primaryColor as PC, txtColor as TC} from '../../../config';\r\nimport { sizeStyle, fontStyle, designStyle, elementProps } from '../../generator';\r\nimport '../../main.scss';\r\n\r\nexport const Button = (props: any) => {\r\n    const darkMode = false;\r\n    let { invert, bg, onSubmit, children, padding, minWidth, margin, disabled, loading, primaryColor, txtColor } = props;\r\n\r\n    primaryColor = primaryColor || PC;\r\n\r\n    const { color, size, bold, textAlign,  placeSelf, textShadow } = props;\r\n    const fontProps = { color, size, bold, textAlign,  placeSelf, textShadow };\r\n   \r\n    const Bt = styled.button`\r\n    ${designStyle({ ...props, ...{ cursor: true } })}\r\n    ${sizeStyle({ ...props, ...{ margin: margin || '0.15em', padding: padding || \"0.3em 0.4em\", minWidth: minWidth || '6.5em' } })}\r\n    ${fontStyle(fontProps, darkMode)}\r\n    ${`background:  ${bg || darkMode ? bg || \"white\" : primaryColor};`}\r\n    border: 2px solid ${bg || primaryColor}; \r\n    color : ${bg? \"white\" : color || \"white\"};\r\n    ${!disabled? `&:hover {\r\n        background: ${!invert? color || \"white\" : bg || primaryColor};\r\n        color: ${bg? invert? \"white\": bg: !invert? primaryColor : color || \"white\"};\r\n        box-shadow: 0 0 0 0;\r\n        transform: scale(0.99);\r\n        transition: 350ms ease-out;\r\n    }` : ''}\r\n    &:focus{outline:0;}\r\n    ${invert ?  `background: ${\"white\"}; color: ${primaryColor};` : ''}\r\n    ${bg && `${invert && `background: white; color: ${bg !== 'white' ? bg : primaryColor}`}`}\r\n    ${disabled? `background: #F0F3F4; border-color: #F0F3F4; color: ${\"darkgray\"};`: ''} `;\r\n\r\n    return (<Bt disabled={disabled} onSubmit={onSubmit} {...elementProps(props)}>\r\n        {loading && <>\r\n                        <i className=\"fas fa-spinner spin\"></i> &nbsp;\r\n                    </>}\r\n        {children}</Bt>);\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ImgBox = styled.img`\r\nborder: 2px solid teal;\r\nborder-radius: 50%;\r\nobject-fit: cover;\r\nwidth: 9em;\r\nfilter: drop-shadow(1px 2px 3px #045258);\r\nheight: 9em;`;\r\n\r\n\r\nexport const Avatar = ({ url, src, large, style, medium }: any) => {\r\n    style = {\r\n        ...style, ... large? {\r\n            borderWidth: '4px',\r\n            width: '15em',\r\n            maxHeight: \"90vw\",\r\n            height: '15em'\r\n        } : !medium? {\r\n            width: '3em',\r\n            height: '3em'\r\n        }: {}\r\n    };\r\n  return (<ImgBox src={url || src} style={style} />);\r\n}\r\n\r\nexport default Avatar;","import { keyframes } from 'styled-components';\r\n\r\nexport const opacityAnimation = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n   opacity: 1;\r\n  }\r\n`;\r\nexport const slideIn = keyframes`\r\n    0% { \r\n      transform: translateX(15rem);\r\n    }\r\n    100% {\r\n      transform: translateX(0);\r\n    }`;\r\n\r\nexport const slideInLeft = keyframes`\r\n    0% { \r\n      transform: translateX(-15rem);\r\n    }\r\n    100% {\r\n      transform: translateX(0);\r\n    }`;\r\n\r\nexport const glow = keyframes`\r\n    0% { \r\n      transform: scale(0.9);\r\n      filter: drop-shadow(3px 4px 6px teal); \r\n    }\r\n    100% {\r\n      transform: scale(1);\r\n      filter: drop-shadow(0px 0px 0px white); \r\n    }`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styled from 'styled-components';\r\nimport { sizeStyle, designStyle } from '../../generator';\r\nimport { slideIn } from '../../animation';\r\nimport  '../../main.scss';\r\nimport { Grid } from '../';\r\n\r\ntype Position = 'top-left' | 'top-right' | 'top-center' | 'bottom-left' | 'bottom-right' | 'bottom-center';\r\n\r\ninterface Popup {\r\n    type : 'notification' | 'message' | 'modal',\r\n    position? : Position\r\n}\r\n\r\ninterface Notification {\r\n    title : string;\r\n    message : string;\r\n    position? : Position; \r\n    visibilityTime? : number;\r\n}\r\n\r\ntype NotificationType = \"warning\" | \"success\" | \"error\";\r\n\r\nconst Containter = styled.div`\r\ntransition: 200ms ease-out;\r\nanimation:  ${slideIn} 200ms ease-out;\r\n${sizeStyle({width : \"14rem\", height: \"4rem\", margin: \".5em\", padding: '.6em'})}\r\n${designStyle({shadow: true, background: \"white\"})}`;\r\n\r\n\r\n\r\nexport const createPopup = ({ type, position } : Popup) => {\r\n    const defaultPosition = 'top-right';\r\n    const containerId = type + '-container-' + position || defaultPosition;  \r\n    const hasContainer = document.getElementById(containerId) !== null;\r\n    const container = document.getElementById(containerId) || document.createElement('div');\r\n    const div = document.createElement('div');\r\n    const root = document.getElementById('root');\r\n\r\n    if(!hasContainer){\r\n        container.setAttribute(\"id\", containerId);\r\n        container.classList.add(position || defaultPosition);\r\n        root?.appendChild(container);\r\n    }\r\n    container.prepend(div);\r\n    return {\r\n        container, child : div\r\n    }\r\n}\r\n\r\nconst Notification = (type : NotificationType, { title, message, position, visibilityTime } : Notification) =>{\r\n    const defaultVisibiltyTime = 2500;\r\n    const { container, child } = createPopup({ type: \"notification\", position });\r\n    const remove = () => container.removeChild(child);\r\n\r\n    const Notification = (<Containter id=\"111\">\r\n                            <Grid customCols=\"auto 1fr auto\" textAlign=\"left\">\r\n                                <Icon type={type}/>\r\n                                \r\n                                <div style={{placeSelf: \"stretch\"}} className={type}>\r\n                                    <header style={{textOverflow: \"ellipsis\"}}>{title}</header>\r\n                                    <div style={{textOverflow: \"ellipsis\"}}>{message}</div>\r\n                                </div>\r\n                                <i className=\"fa fa-times\" aria-hidden=\"true\" onClick={remove} style={{ color: \"darkgray\", placeSelf: \"start\"}}></i>\r\n                            </Grid>\r\n                        </Containter>);\r\n    \r\n    setTimeout(()=> remove(), visibilityTime || defaultVisibiltyTime);\r\n    ReactDOM.render(Notification, child);  \r\n}\r\n\r\nconst Icon = ({ type } : { type : NotificationType}) => {\r\n   let iconName: string;\r\n\r\n   switch(type){\r\n        case 'warning':\r\n        iconName =  \"fa fa-exclamation-triangle warning\";\r\n        break;\r\n\r\n        case 'error':\r\n        iconName =  \"fa fa-exclamation-circle error\";\r\n        break;\r\n\r\n        default:\r\n        iconName = \"fa fa-check-circle success\";\r\n\r\n    }\r\n  return <i className={iconName} aria-hidden=\"true\" style={{ placeSelf: \"start\"}}></i>\r\n}\r\n\r\nexport default {\r\n    success : (props : Notification)=> Notification(\"success\", props),\r\n    warning : (props : Notification)=> Notification(\"warning\", props),\r\n    error : (props : Notification)=> Notification(\"error\", props),\r\n};\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styled from 'styled-components';\r\nimport '../../main.scss';\r\nimport { Grid } from '../';\r\nimport { createPopup } from '../notification';\r\nimport Button from '../button';\r\nimport { mobileWidth, primaryColor } from '../../../config';\r\nimport svg from '../../../assets/message3.svg';\r\ntype Position = 'top-left' | 'top-right' | 'top-center' | 'bottom-left' | 'bottom-right' | 'bottom-center';\r\n\r\ninterface ModalProps {\r\n    title: string;\r\n    message: any;\r\n    position?: Position;\r\n    hideCancel?: boolean;\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    position: fixed;\r\n    z-index: 20;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    transition: 200ms ease-out;\r\n    background-color: rgba(0,0,0,0.5);`;\r\n\r\nconst Btn = styled.button`\r\n    background: ${primaryColor};`;\r\n\r\nconst Modall = styled.div`\r\n    margin: 2% auto;\r\n    background: white;\r\n    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\r\n    border-radius: 1em;\r\n    width: 80%;\r\n    display: grid;\r\n    place-items: stretch;\r\n    grid-template-rows: auto 1fr;\r\n    text-align: center;\r\n    font-size: 1.5em;\r\n    padding: 0;\r\n    min-height: 260px;\r\n    max-width: 900px;\r\n    color: black;\r\n    @media(max-width: ${mobileWidth}){\r\n    position: absolute;\r\n    bottom: 90px;\r\n    width: 90vw;\r\n    left: 50%;\r\n    -webkit-transform: translateX(-50%);\r\n    transform: translateX(-50%)\r\n    }`;\r\n\r\n\r\nconst Header = styled.div`\r\n    color: white;\r\n    background-image: linear-gradient( ${primaryColor}, rgba(50, 150, 178, 0.8));\r\n    border-top-right-radius: .75em;\r\n    border-top-left-radius: .75em;\r\n    border: 0;\r\n    margin: 0;\r\n    height: 2.5em;`;\r\n\r\nconst Body = styled.div`\r\n    color: white;\r\n    minHeight: 5em;\r\n    padding: .3em;\r\n    display: grid;\r\n    place-items: center;\r\n    grid-template-rows: 1fr auto;\r\n    font-weight: bolder;\r\n    background-image: linear-gradient(rgba(208, 211, 212 , 0.7), rgba(32, 100, 78 , 0.6)), url(${svg});\r\n    border-bottom-right-radius: .75em;\r\n    border-bottom-left-radius: .75em;\r\n`;\r\n\r\nconst Modal = ({ title, message, hideCancel, position = 'top-center' }: ModalProps) => {\r\n    const { container, child } = createPopup({ type: \"modal\", position });\r\n    const close = () => container.removeChild(child);\r\n\r\n    const El = (<Wrapper>\r\n        <Modall>\r\n                <Header style={{ placeSelf: \"stretch\" }} >\r\n                <Grid customCols=\"1fr auto\" textAlign=\"left\">\r\n                    <header style={{ textOverflow: \"ellipsis\", color: \"white\" }}>{title}</header>\r\n                     <i className=\"fa fa-times\" aria-hidden=\"true\" onClick={close} style={{ color: \"white\", placeSelf: \"center\", padding: \".5em\"}}></i>\r\n                    </Grid>\r\n                </Header>\r\n            <Body>\r\n                {typeof message === 'string' || React.isValidElement(message) ? message : 'Error'}\r\n                {!hideCancel &&\r\n                    <div>\r\n                    <Button shadow onClick={close}>Cancel</Button>\r\n                </div>\r\n                }\r\n            </Body>\r\n        </Modall>\r\n    </Wrapper>);\r\n\r\n    return {\r\n        close,\r\n        open: ()=> {\r\n            container.appendChild(child)\r\n            ReactDOM.render(El, child)}\r\n    }\r\n}\r\n\r\nexport default Modal;","import styled from 'styled-components';\r\nimport React from 'react';\r\nimport { sizeStyle, fontStyle, FontStyle, SizeStyle, ElementProps } from '../../generator';\r\n\r\ninterface TextProps extends FontStyle, SizeStyle, ElementProps{\r\n    children? : React.ReactNode;\r\n}\r\n\r\nexport const Text = (props: TextProps) => {\r\n    const { children, style, className, onClick } = props;\r\n\r\n    const { width, height, max, padding, margin, minWidth } = props;\r\n    const styleProps : SizeStyle = { \r\n        width, \r\n        height, \r\n        max, \r\n        padding, \r\n        margin, \r\n        minWidth \r\n    };\r\n\r\n    const { size, color, bold, textAlign, placeSelf, textShadow } = props;\r\n    const fontProps : FontStyle = {\r\n        size: typeof size === 'number'? (6 - size)/3 + \"rem\": size? size : \"1em\",\r\n        color, \r\n        bold, \r\n        textAlign : textAlign || 'left',  \r\n        placeSelf, \r\n        textShadow\r\n    };\r\n\r\n    const darkMode = false;\r\n    const HeaderLayout = styled.div`\r\n    ${sizeStyle(styleProps)}\r\n    ${fontStyle(fontProps, darkMode)}`;\r\n    return (\r\n        <HeaderLayout  onClick={onClick} className={className} style={style}> {children} </HeaderLayout>\r\n    );\r\n}\r\n\r\nexport default Text;","import moment, {Moment} from 'moment';\r\ntype Data = {\r\n    date: string,\r\n    value: number\r\n  };\r\nconst createPointsFactory = (randomCloseGenerator : any) => {\r\n  return (start_ : Moment, end_: Moment) => {\r\n    let start = moment(start_)\r\n      .set('hours', 0)\r\n      .set('minutes', 0)\r\n      .set('seconds', 0)\r\n      .set('milliseconds', 0);\r\n\r\n    let end = moment(end_)\r\n      .set('hours', 0)\r\n      .set('minutes', 0)\r\n      .set('seconds', 0)\r\n      .set('milliseconds', 0);\r\n    \r\n    if (end.isBefore(start, 'day')) {\r\n      throw new Error('start <= end');\r\n    }\r\n\r\n    let t = end.diff(start, 'day');\r\n\r\n    const points : Data[]= [ {date: start.clone().toString(), value: randomCloseGenerator()} ];\r\n    while (--t >= 0) {\r\n      start = start.add(1, 'day');\r\n      points.push({date: start.clone().toString(), value: randomCloseGenerator()});\r\n    }\r\n    return points;    \r\n  }\r\n}\r\n\r\nconst randomCloseFactory = (maxRandomPoint: number) => () : number => Math.floor(Math.random() * maxRandomPoint) + 200;\r\n\r\n\r\nconst maxClose = 50;\r\nexport const createPoints = createPointsFactory(randomCloseFactory(maxClose));\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport { Card, Grid, Button, Modal, Text } from '../../style/components';\r\nimport CountUp from 'react-countup';\r\nimport allImg from '../../assets/empty.svg';\r\nimport { Select, Radio } from 'antd';\r\nimport { primaryColor } from '../../config';\r\n\r\nconst intoHeadings = (str: string): string => {\r\n  if (!intoHeadings || intoHeadings.length === 0) throw new Error(\"\");\r\n  return str.charAt(0).toUpperCase() + str.substring(1).replace(/([a-z](?=[A-Z]))/g, '$1 ')\r\n}\r\n\r\nconst panelJSON = {\r\n  \"activeGarages\": {\r\n    bg: `linear-gradient(-30deg, #1ecb7d 10%, rgba(30, 203, 180, 0.7) 100%), url(${allImg})`,\r\n    api: ``,\r\n    name: 'Active Garages',\r\n    value: 10\r\n  },\r\n  \"activeAnnouncement\": {\r\n    bg: `linear-gradient(-20deg, #fc6076 0%, rgba(255, 154, 68, 0.7) 100%) ,url(${allImg})`,\r\n    api: ``,\r\n    name: 'activeAnnouncement',\r\n    value: 10\r\n  },\r\n  \"activeEvent\": {\r\n    bg: `linear-gradient(-20deg, #21D4FD 0%, rgba(32, 100, 50, 0.75) 100%), url(${allImg})`,\r\n    api: ``,\r\n    name: 'Active Event',\r\n    value: 10\r\n  },\r\n  \"activeMembers\": {\r\n    bg: `linear-gradient(-50deg, #921ecb 0%, rgba(140, 95, 163, 0.86) 100%), url(${allImg})`,\r\n    api: ``,\r\n    name: 'activeMembers',\r\n    value: 10\r\n  },\r\n  \"currentOccupancy\": {\r\n    bg: `linear-gradient(-50deg, #FF1eDb 0%, rgba(140, 125, 163, 0.86) 100%), url(${allImg})`,\r\n    api: ``,\r\n    name: 'currentOccupancy',\r\n    value: 10\r\n  }\r\n};\r\n\r\ntype PanelItem = 'activeGarages' | 'activeAnnouncement' | 'activeEvent' | 'activeMembers' | 'currentOccupancy';\r\nconst Panel = ({ style }: any) => {\r\n  const [currentPanels, setCurrentPanels] = useState<PanelItem[]>(['activeGarages', 'activeAnnouncement', 'activeEvent'])\r\n\r\n  const closeEditModal = () => editModal?.close();\r\n  const closeAddModal = () => addModal?.close();\r\n\r\n  const addModal = Modal({\r\n    title: \"Add\",\r\n    hideCancel: true,\r\n    message: <AddPanel\r\n      currentPanels={currentPanels}\r\n      close={closeAddModal}\r\n      setCurrentPanels={setCurrentPanels}\r\n      options={['activeGarages', 'activeAnnouncement', 'activeEvent', 'activeMembers', 'currentOccupancy']}\r\n    />\r\n  });\r\n\r\n  const editModal = Modal({\r\n    title: \"Add\",\r\n    hideCancel: true,\r\n    message: <ModifyPanel\r\n      close={closeEditModal}\r\n      currentPanels={currentPanels}\r\n      setCurrentPanels={setCurrentPanels}\r\n      options={['activeGarages', 'activeAnnouncement', 'activeEvent', 'activeMembers', 'currentOccupancy']}\r\n    />\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <i style={{ padding: \".5em\" }} className=\"fa fa-edit right\" onClick={() => editModal.open()}></i>\r\n      <Grid style={style} customCols=\"repeat(5, 1fr)\" gridGap=\"0 1em\" width=\"100%\" placeItems=\"stretch\" mobileCols={\"1fr auto\"}>\r\n        {currentPanels.map((panel: PanelItem) => {\r\n          const { value, name, bg } = panelJSON[panel];\r\n          return (<DisplayCard name={name} value={value} bg={bg} />);\r\n        })}\r\n        {currentPanels.length < 5 && <Card bgColor=\"lightgray\" grid shadow={false}>\r\n          <Button rounded minWidth=\"1.5em\" minHeight=\"1.5em\" onClick={() => { addModal.open() }}>\r\n            <i className=\"fa fa-plus\"></i>\r\n          </Button>\r\n        </Card>}\r\n      </Grid>\r\n    </div>);\r\n}\r\n\r\ninterface PanelEditor {\r\n  currentPanels: PanelItem[];\r\n  setCurrentPanels: any;\r\n  options: PanelItem[];\r\n  close: any;\r\n}\r\n\r\nconst AddPanel = ({ currentPanels, setCurrentPanels, options, close }: PanelEditor) => {\r\n  const NUM_PANELS = 5;\r\n  const [panels, setPanels] = useState<PanelItem[]>([]);\r\n  const remainingPanels = NUM_PANELS - currentPanels.length - panels.length;\r\n  const select = (value: PanelItem) => setPanels([...panels, value]);\r\n  \r\n  const unselect = (value: PanelItem) => setPanels(panels.filter((el: PanelItem) => el !== value))\r\n\r\n  const confirm = () => {\r\n    setCurrentPanels([...currentPanels, ...panels]);\r\n    close();\r\n  }\r\n\r\n  return (<div>\r\n    <Text bold color={primaryColor} textAlign={\"center\"}>Select {remainingPanels} more Panels</Text>\r\n    <Grid cols={5}>\r\n      {options\r\n        .filter((item: PanelItem) => !currentPanels.includes(item))\r\n        .map((item: PanelItem) => {\r\n          const { value, name, bg } = panelJSON[item];\r\n          return (<div onClick={() => panels.includes(item)? unselect(item): select(item)}>\r\n            <DisplaySelectCard name={name} value={value} bg={bg} selected={panels.includes(item)}/>\r\n          </div>);\r\n        })}\r\n    </Grid>\r\n    <Button shadow style={{fontSize: \".76em\"}} onClick={() => confirm()}>Confirm</Button>\r\n    <Button shadow style={{fontSize: \".76em\"}} onClick={() => {\r\n      setPanels(currentPanels)\r\n      close()\r\n    }}>Cancel</Button>\r\n   </div>)\r\n}\r\n\r\nconst ModifyPanel = ({ currentPanels, setCurrentPanels, options, close }: PanelEditor) => {\r\n  const [panels, setPanels] = useState(currentPanels);\r\n\r\n  const modify = (index: number, value: PanelItem) => {\r\n    const temp = [...panels];\r\n    temp[index] = value;\r\n    setPanels(temp)\r\n  }\r\n  const remove = (index: number) => {\r\n    setPanels(panels.filter((el: PanelItem, i: number) => index != i))\r\n  }\r\n\r\n  const confirm = () => {\r\n    setCurrentPanels(panels);\r\n    close();\r\n  }\r\n\r\n  return (<div>\r\n    {panels.map((e: any, i: number) => <>\r\n      <Grid customCols=\"auto 1fr auto\">\r\n        <Text bold>Card {i + 1}</Text>\r\n        <Select defaultValue={e} style={{ width: '100%' }} onChange={(e: PanelItem) => modify(i, e)}>\r\n          {options.map((option: string) => <Select.Option value={option}>\r\n            {intoHeadings(option)}\r\n          </Select.Option>)}\r\n        </Select>\r\n        <i style={{ padding: \".5em\", color: \"red\" }} className=\"fa fa-trash right\" onClick={() => remove(i)}></i>\r\n      </Grid>\r\n    </>)}\r\n\r\n    <Button shadow style={{fontSize: \".76em\"}}  onClick={() => confirm()}>Confirm</Button>\r\n    <Button shadow style={{fontSize: \".76em\"}} onClick={() => {\r\n      setPanels(currentPanels)\r\n      close()\r\n    }}>Cancel</Button>\r\n  </div>)\r\n}\r\n\r\nconst DisplayCard = ({ name, value, bg }: any) => (\r\n  <Card\r\n    shadow\r\n    hover\r\n    color=\"white\"\r\n    style={{ backgroundImage: bg, cursor: \"pointer\", backgroundSize: \"cover\" }}\r\n  >\r\n    <div className=\"txt-center bold\" style={{ fontSize: \".9em\", color: \"white\", fontWeight: \"bold\"}}>\r\n      <span style={{textShadow: \"1px 1px gray\" }} dangerouslySetInnerHTML={{ __html: String(intoHeadings(name)) }} />\r\n    </div>\r\n\r\n    <Number className=\"grid-box bold\" >\r\n      <CountUp duration={2} start={0} end={value} />\r\n    </Number>\r\n  </Card>\r\n);\r\n\r\nconst DisplaySelectCard = ({ name, value, bg, selected }: any) => (\r\n  <Card\r\n    hover\r\n    grid\r\n    color=\"white\"\r\n    style={{ backgroundImage: bg, cursor: \"pointer\", backgroundSize: \"cover\" }}\r\n  >\r\n    <div className=\"txt-center bold\" style={{ fontSize: \".9em\", color: \"white\" }}>\r\n    <Radio.Group value={selected? 1: 0}>\r\n      <Radio value={1}></Radio>\r\n    </Radio.Group>\r\n      <span dangerouslySetInnerHTML={{ __html: String(intoHeadings(name)) }} />\r\n    </div>\r\n    <Number className=\"grid-box bold\" >10</Number>\r\n  </Card>\r\n);\r\n\r\nconst Number = styled.div`\r\n  font-size: 60px;\r\n  color: white;`;\r\n\r\nexport default Panel;","import React, { useRef, useEffect, useState } from 'react';\r\nimport VX from './vx-demo';\r\nimport { Grid } from '../../style/components';\r\nimport { Card, Text, Button, Notification } from '../../style/components';\r\nimport { primaryColor } from '../../config';\r\nimport '../../style/main.scss'\r\nimport { DatePicker, Select } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport moment, { Moment } from 'moment';\r\nimport { createPoints } from './data-generator';\r\nimport Panel from './panel';\r\n\r\nconst Analytics = () => {\r\n  const [ el, setter] = useState({x: 0, y : 0});\r\n  const container = useRef<any>(null); \r\n  const [range, setRange] = useState<any>({\r\n    startDate: moment(\"2010-2-2\", 'YYYY-MM-DD'),\r\n    endDate: moment(\"2010-3-2\", 'YYYY-MM-DD')\r\n  })\r\n  const [stock, setStocks] = useState(createPoints(range.startDate, range.endDate));\r\n  const setEndDate = (date : Moment)=>{\r\n    if(date < range.startDate){\r\n        setRange({\r\n          startDate: date,\r\n          endDate: range.startDate\r\n        })\r\n    } else setRange({...range, endDate : date})\r\n}\r\n\r\nconst setStartDate = (date : Moment)=>{\r\n  if(date > range.endDate){\r\n      setRange({\r\n        startDate: range.endDate,\r\n        endDate: date\r\n      })\r\n  } else setRange({...range,startDate : date})\r\n}\r\n\r\nuseEffect(()=> setStocks(createPoints(range.startDate, range.endDate)), [range]);\r\nconst resize = ()=>{\r\n  const {clientWidth: x, clientHeight: y} =  container.current;\r\n    setter({ x, y});\r\n}\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\nuseEffect(()=> resize, [container?.current?.clientWidth]);\r\nuseEffect(()=>Notification.success({\r\n  title: \"Welcome\",\r\n message: \"New User\"\r\n}), [])\r\nuseEffect(()=>{\r\n  window?.addEventListener(\"resize\", resize);\r\n  return () => window.removeEventListener(\"resize\", resize);\r\n}, []);\r\n\r\n  return (\r\n    <Grid style={{ maxWidth: \"90vw\", minHeight: \"300px\", minWidth: \"40vw\" }}>\r\n      <div>\r\n        <Panel />\r\n        <Card shadow grid customCols={\"1fr auto\"} bgColor={primaryColor}>\r\n          <div style={{ minWidth: \"35vw\", width: \"100%\" }} ref={container} >\r\n            <VX width={el.x} height={300} stock={stock} />\r\n          </div>\r\n          <FilterBox range={range} setEndDate={setEndDate} setStartDate={setStartDate} />\r\n        </Card>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nconst FilterBox = ({ setEndDate, range, setStartDate } : any)=>(\r\n  <div \r\n  style={{\r\n  display: \"grid\", \r\n  height: \"100%\", \r\n  borderLeft: \"1px solid lightgray\",\r\n  gridAutoColumns: \"auto auto auto auto 1fr\", \r\n  padding: \".5em 1em .5em 1.5em\",\r\n  placeItems: \"end start\"}}\r\n  >\r\n    <Text width=\"100%\" color=\"white\" textAlign=\"center\" size={2} bold>Filter</Text>\r\n    <Text color=\"white\" textAlign=\"left\" bold>Select Garage</Text>\r\n    \r\n    <Select\r\n      disabled\r\n      defaultValue={\"Garage A\"}\r\n      style={{ borderRadius: 10, width: \"100%\", placeSelf: \"end\" }}\r\n    />\r\n    <Text color=\"white\" textAlign=\"left\" margin=\".5em 0 0 0\" bold>Start Date</Text>\r\n\r\n    <DatePicker\r\n      style={{ borderRadius: 8}}\r\n      onChange={(e: any) => setStartDate(e)}\r\n      value={range.startDate}\r\n    />\r\n   <Text color=\"white\" bold margin=\".5em 0 0 0\">End Date</Text>\r\n    <DatePicker\r\n      style={{ borderRadius: 8}}\r\n      onChange={(e: any) => setEndDate(e)}\r\n      value={range.endDate}\r\n    />\r\n    <Button shadow bg=\"teal\" margin=\".8em 0 0 0\" style={{placeSelf: \"end stretch\"}}>Generate Data</Button>\r\n  </div> \r\n)\r\n\r\nexport default Analytics;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {Avatar , Grid} from '../../style/components';\r\nimport { mobileWidth, primaryColor } from '../../config';\r\nimport '../main.scss';\r\n\r\nconst Sidebar = () => {\r\n  const  darkMode  = false;\r\n  const navCollasped = false;\r\n  const Line = styled.hr`transform: scaleX(0);`;\r\n  const border = keyframes`from { transform: scaleX(0); } to { transform: scaleX(1);}`;\r\n\r\n  const style = `display: grid;\r\n  text-decoration: underlined;\r\n  place-items: center;\r\n  color: white;\r\n  grid-template-columns: ${navCollasped ? '1fr' : 'auto 1fr'};\r\n  font-size: 1.35em;\r\n  cursor: pointer;\r\n  padding: .8em .4em;\r\n  &:hover{\r\n    color: white;\r\n  }\r\n  @media(max-width: ${mobileWidth}){\r\n    border-left: .3em solid transparent;\r\n    grid-template-columns: 1fr;\r\n    padding-left: .3em;\r\n  }`;\r\n\r\n  const PointerIcon = styled.i`\r\n      cursor: pointer;\r\n      ${!navCollasped && `padding-right: 2em;`}`;\r\n\r\n  const MyNavLink = styled(NavLink) <{ active: string }>`\r\n    ${style}\r\n    &:hover ${Line} {\r\n      animation : ${border} 300ms ease-out;\r\n      transform: scaleX(1);\r\n     }\r\n    filter: drop-shadow(${props => props.active === 'true' ? `8px 8px 6px ${darkMode ? \"dodgerblue\" : \"black\"}` : '0'});\r\n    color: ${props => props.active === 'true' ? \"#39F7FB\" : \"white\"};\r\n    ${props => props.active === 'true' && `\r\n    border-left: .2em solid white; filter: grayscale(30%);`}\r\n    }`;\r\n\r\n  const MyNavLink2 = styled.div<{ active: string }>`\r\n    ${style}\r\n    &:hover ${Line} {\r\n      animation : ${border} 660ms ease-out;\r\n      transform: scaleX(1);\r\n     }\r\n    filter: drop-shadow(${props => props.active === 'true' ? `8px 8px 6px ${darkMode ? \"dodgerblue\" : \"black\"}` : '0'});\r\n    color: ${props => props.active === 'true' ? \"#39F7FB\" : \"white\"};\r\n      ${props => props.active === 'true' &&\r\n      `border-left: .2em solid white; filter: grayscale(80%);`}\r\n    }`;\r\n\r\n  const LeftNav = styled(Nav) <{ background: string }>`\r\n  left: 0;\r\n  color: white;\r\n  ${!navCollasped && `min-width: 10%; font-size: 0.8em;`}\r\n  width:  ${navCollasped ? '6em' : '17em'};\r\n  grid-template-rows: repeat(16, auto);\r\n  align-items: center;\r\n  justify-items: stretch;\r\n  transition: 500ms ease-out;\r\n  background-color: ${primaryColor};\r\n  background-image: url(${props => props.background});\r\n  background-image: linear-gradient(to right top, #0bc062, #00b78b, #00aba7, #009cb4, #0d8cb0);\r\n  background-attachment: fixed;\r\n  @media (max-width: ${mobileWidth}) {\r\n    height: 70px;\r\n     width: 100vw;\r\n     top : inherit; \r\n     bottom: 0;\r\n     grid-template-columns: 1fr 1fr 1fr 1fr;\r\n     grid-template-rows: 1fr;\r\n}`;\r\n\r\n  const Text = styled.div`${navCollasped && 'display: none;'}\r\n  text-align: center;\r\n  justify-self: stretch;\r\n  @media(max-width: ${mobileWidth}){\r\n    text-align: center;\r\n  }`\r\n  const makeStr = (bool: boolean) => String(bool)\r\n  const routes = [\r\n    { to: [\"/\", \"/signup\"], name: \"Analytics\", icon: \"fas fa-chart-bar\" },\r\n    { to: [`/garages`], name: \"Garages\" , icon: \"fas fa-warehouse\"},\r\n    { to: ['/events'], name: \"Events\", icon : \"fa fa-calendar\" },\r\n    { to: ['/annoucement'], name: \"Announcements\" , icon: 'fas fa-bullhorn'},\r\n    { to: ['/profile'], name: \"Profile\" , icon: 'fas fa-user'},\r\n    { to: ['/settings'], name: \"Settings\" , icon: 'fas fa-cog'}\r\n  ];\r\n  return (<div>\r\n    <LeftNav background={\" \"} >\r\n      {<Grid.Item hideOnMobile>\r\n      {navCollasped ?\r\n         <Avatar style = {{placeSelf: \"center\"}} small src={\"https://f0.pngfuel.com/png/136/22/profile-icon-illustration-user-profile-computer-icons-girl-customer-avatar-png-clip-art.png\"} />:\r\n         <>\r\n          <Avatar medium src={\"https://f0.pngfuel.com/png/136/22/profile-icon-illustration-user-profile-computer-icons-girl-customer-avatar-png-clip-art.png\"}/>\r\n          <span className=\"txt-md txt-center grid txt-white\">\r\n            <div className=\"capitalize\"> {\"User\"}</div>\r\n            <div className=\"badge shadow capitalize\">{\"Admin\"}</div>\r\n          </span>\r\n        </>}\r\n      </Grid.Item>}\r\n\r\n      {routes.map(({ to, name , icon}: any) => {\r\n        return (\r\n          <MyNavLink \r\n            style={{textDecoration: \"none\", borderLeft: name=== \"Analytics\"? \".3em solid dodgerblue\": \"\"}}\r\n            to={to[0] || \"/\"}\r\n            active={makeStr(to.reduce((acc: boolean, item: any) => (acc || false), false))}\r\n          >\r\n            <i style={{fontSize: \"1.6em\", padding: \"0 .3em\"}} className={icon}></i>\r\n            <Text>{name}</Text>\r\n            <div style={{ height: \"2px\" }}></div>\r\n            <div style={{ width: \"100%\", height: \"2px\" }} ><Line /></div>\r\n          </MyNavLink>)\r\n      })\r\n      }\r\n      <MyNavLink2 onClick={() =>{}} style={{ gridRowStart: \"16\" }} active={\"false\"}>\r\n        <Text className=\"txt-left\">Logout</Text>\r\n        <div style={{ height: \"2px\" }}></div>\r\n        <div style={{ width: \"100%\", height: \"2px\" }} ><Line /></div>\r\n      </MyNavLink2>\r\n</LeftNav>\r\n  </div>\r\n  )\r\n};\r\n\r\nconst Nav = styled.div`\r\n box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n bottom: 0;\r\n top: 0;\r\n font-size: .8em;\r\n display: grid;\r\n padding: .3em;\r\n position: fixed;\r\n z-index: 10;`;\r\n\r\nexport default Sidebar;","\r\nimport React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport {  Grid,  Avatar} from '../../style/components'\r\nimport {  mobileWidth, primaryColor } from '../../config';\r\n\r\nconst slide = keyframes` from {transform: translateX(22em)} to {transform: translateX(0)}`;\r\nconst TopNavBar = ({ user, logout}: any) => {\r\n\r\n  return (\r\n        <MiniNav>\r\n          <div className=\"capitalize bold txt-md\" style={{ minWidth: \"100px\" }}>\r\n            Analytics\r\n          </div>\r\n          <Grid.Item hideOnMobile={true} style={{ gridColumnStart: 10 }}>\r\n                Search\r\n          </Grid.Item>\r\n          <div className=\"grid\" style={{ gridColumnStart: 19, gridTemplateColumns: \"auto auto auto\" }}>\r\n            <div>\r\n             <i style={{fontSize: \"2.5em\"}} className=\"fa fa-car\"></i>\r\n             <i className=\"fa fa-plus\"></i>\r\n            </div>\r\n\r\n            <div>\r\n             <i style={{fontSize: \"2em\"}} className=\"fa fa-bullhorn\"></i>\r\n             <i className=\"fa fa-plus\"></i>\r\n            </div>\r\n         </div>\r\n\r\n         <div className=\"grid\" style={{ gridColumnStart: 20 }}>\r\n              <Avatar url={\"https://f0.pngfuel.com/png/136/22/profile-icon-illustration-user-profile-computer-icons-girl-customer-avatar-png-clip-art.png\"}/>\r\n         </div>\r\n\r\n        </MiniNav>)\r\n}\r\n\r\n\r\nconst Nav = styled.div`\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n    font-size: .8em; \r\n    display: grid;\r\n    padding: .3em;\r\n    position: fixed;`;\r\n\r\nconst TopNav = styled(Nav)`\r\n    right : 0;\r\n    bottom: 0;\r\n    height: 100vh;\r\n    width: 25em;\r\n    font-size: 15px;\r\n    grid-template-rows: repeat(20, auto);\r\n    background: inherit;  \r\n    top: 0;\r\n    place-items: center;\r\n    z-index: 9;\r\n    @media (max-width: ${mobileWidth}) {\r\n      height: 70px;\r\n      width: 100vw;\r\n      top : inherit;\r\n      top: 0;\r\n      grid-template-columns: 1fr 1fr 1fr;\r\n      grid-template-rows: 1fr;}`;\r\n\r\nconst topNav = `\r\nleft: 0;\r\nwidth: 100vw;\r\nheight: 4em; \r\ncolor: ${primaryColor};\r\nbackground: inherit;\r\npadding-left: 15em;\r\ngrid-template-columns: repeat(20, auto);\r\ngrid-template-rows: 1fr;`;\r\n\r\nconst MiniNav = styled(TopNav)`\r\n  width: 5em;\r\n    ${topNav}\r\n    @media(max-width: ${mobileWidth}){\r\n      padding-left: 0\r\n      grid-template-columns: repeat(5, auto);\r\n    } `;\r\n\r\nexport default TopNavBar;","import React from 'react';\r\nimport { Analytics } from './pages';\r\nimport Sidebar from './style/components/sidebar';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport TopNavBar from './style/components/topnav';\r\nimport './style/main.scss';\r\nimport 'antd/dist/antd.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div \r\n      className=\"App\" \r\n      style={{position: \"absolute\", top: 0, left: 0, padding: 0, margin: 0, paddingLeft: \"15em\", paddingTop: \"4.5em\", background: \"#EEF3F3\", minWidth: \"100vw\", minHeight: \"100vh\", boxSizing: \"border-box\"}}>\r\n      <Router>\r\n        \r\n        <Sidebar />\r\n        <TopNavBar />\r\n        <Switch>\r\n          <Route path=\"/\" render={() => <Analytics />} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/empty.3e935ffe.svg\";"],"sourceRoot":""}