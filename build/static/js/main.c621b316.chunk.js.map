{"version":3,"sources":["assets/announ.svg","assets/email.svg","assets/loader.svg","assets/parkstash_logo.png","assets/message3.svg","assets/empty.svg","assets/parkstash_logo.svg","assets/eventss.svg","assets/login.svg","assets/otp.svg","assets/university.svg","assets/wait.svg","config.ts","style/generator.ts","style/card/index.tsx","style/heading/index.tsx","style/loader/index.tsx","style/grid/index.tsx","style/button/index.tsx","style/avatar/index.tsx","style/placeholder/index.tsx","hooks/pagination.ts","style/list.tsx","style/animation.ts","style/notification/index.tsx","style/modal/index.tsx","style/text/index.tsx","style/switch/index.tsx","style/menu-item/index.tsx","style/badge/index.tsx","style/empty/index.tsx","context/nav-context.tsx","style/sidebar/index.tsx","store/reducer/user.ts","api/header.ts","api/request.ts","api/index.ts","utils/text.tsx","utils/logger.ts","store/actions/user.ts","store/reducer/garage.ts","store/reducer/announcement.ts","store/reducer/index.ts","store/index.ts","utils/time.ts","style/topnav.tsx","hooks/tz.ts","layout.tsx","utils/index.ts","hooks/garage.ts","pages/garage/listings/garage-card.tsx","hooks/places.ts","pages/garage/listings/google-map.tsx","components/label.tsx","pages/garage/listings/garage-form.tsx","pages/garage/listings/garage-add.tsx","pages/garage/listings/garage-edit.tsx","hooks/occupancy-table.ts","pages/garage/listings/index.tsx","components/chart/components/axis.tsx","components/chart/hooks/rect.ts","components/chart/hooks/scale.ts","components/chart/hooks/data.ts","components/chart/utils/color.ts","components/chart/utils/points.ts","components/chart/hooks/tooltip.ts","components/chart/components/tooltip.tsx","components/chart/types.ts","components/chart/components/grid.tsx","components/chart/components/graph/multi-line.tsx","components/chart/components/graph/stacked-area.tsx","components/chart/components/graph/stacked-bar.tsx","components/chart/components/graph/combined.tsx","components/chart/utils/chart.tsx","components/chart/components/graph/index.tsx","components/chart/components/legend-table.tsx","components/chart/hooks/resize.ts","components/chart/components/header.tsx","components/chart/components/loading.tsx","components/chart/index.tsx","components/chart/hooks/chart-type.ts","hooks/timeseries.ts","hooks/metrics.ts","components/filter.tsx","pages/garage/analytics/filter-options.ts","pages/garage/analytics/index.tsx","pages/garage/occupancy-table/columns.tsx","pages/garage/occupancy-table/default-table.ts","pages/garage/occupancy-table/format.ts","pages/garage/occupancy-table/table-form.tsx","pages/garage/occupancy-table/table-item.tsx","pages/garage/occupancy-table/table-list.tsx","pages/garage/occupancy-table/index.tsx","components/score-card/score-card.tsx","pages/garage/header.tsx","pages/garage/abnormality/columns.tsx","pages/garage/abnormality/table.tsx","pages/garage/index.tsx","pages/garage/abnormality/index.tsx","pages/announcement/columns.tsx","pages/announcement/table.tsx","store/actions/announcement.ts","pages/announcement/form.tsx","hooks/widget.ts","components/score-card/score-cards.tsx","hooks/refresh.ts","pages/announcement/index.tsx","pages/citations/filter-options.ts","pages/citations/analytics.tsx","pages/citations/index.tsx","pages/events/listings/columns.tsx","pages/events/listings/table.tsx","pages/events/listings/header.tsx","pages/events/listings/form.tsx","hooks/events.ts","pages/events/listings/index.tsx","components/chart/components/graph/pie-chart.tsx","pages/events/model.ts","utils/pretty_format.ts","hooks/promise_hook.ts","pages/events/analytics/header.tsx","pages/events/index.tsx","pages/events/analytics/index.tsx","pages/events/live/header.tsx","pages/events/live/editor.tsx","pages/events/live/index.tsx","pages/login/user-select/auth.tsx","pages/login/user-select/login.tsx","pages/login/user-select/signup.tsx","pages/login/user-select/forgot-password.tsx","pages/login/user-select/index.tsx","hooks/enterprises.ts","pages/login/enterprise-select/enterprise.tsx","pages/login/user-handle.tsx","pages/login/index.tsx","hooks/control.ts","pages/controls/columns.tsx","pages/controls/index.tsx","pages/overview/index.tsx","App.tsx","serviceWorker.ts","context/components.tsx","providers.tsx","index.tsx"],"names":["module","exports","gradient","gridStyle","cols","customCols","customRows","gridGap","mobileCols","mobileLayout","placeItems","hideOnMobile","fontStyle","darkMode","color","size","bold","textAlign","placeSelf","textShadow","sizeStyle","width","height","padding","max","margin","minWidth","designStyle","shadow","rounded","background","bg","cursor","elementProps","props","style","className","onClick","ref","CardEl","styled","div","grid","hover","bgColor","invert","Card","border","children","selected","elProps","boxShadow","HeaderLayout","h1","styleProps","fontProps","Header","defaultColor","inverted","LoaderEl","Loader","src","mySvg","alt","glow","keyframes","Img","img","Parkstash","logo","Spinner","fontSize","Layout","Grid","GridItemLayout","gridRowStart","gridColumnStart","Item","Bt","button","disabled","noBorder","noHover","Button","onSubmit","loading","tooltip","faIcon","title","type","Normal","ImgBox","Avatar","url","large","medium","borderWidth","maxHeight","Placehold","Loading","Placeholder","number","lines","containerStyle","placeholders","Array","map","_","i","key","usePagination","len","useState","length","setLength","page","setPage","maxPage","Math","ceil","canGoBack","canGoForward","useEffect","needsPagination","actions","forward","backward","List","pagination","error","list","loader","emptyText","empty","text","marginTop","items","filter","gridColumn","el","slideIn","Containter","minHeight","createPopup","position","containerId","hasContainer","document","getElementById","container","createElement","root","setAttribute","classList","add","appendChild","prepend","child","Notification","message","visibilityTime","defaultVisibiltyTime","remove","removeChild","e","console","log","id","textOverflow","aria-hidden","setTimeout","ReactDOM","render","Icon","iconName","Wrapper","Modall","Body","svg","Modal","hideCancel","modal","body","getElementsByTagName","close","unmountComponentAtNode","El","React","isValidElement","open","contains","Text","Switch","active","borderRadius","item","charAt","toUpperCase","substring","toLowerCase","replace","underlined","isString","borderBottom","toString","MI","span","fullWidth","MenuItem","Badge","BadgeEl","Empty","maxWidth","lineHeight","initialState","sidebar","toggleSidebar","collapsed","toggleCollapsed","NavContext","createContext","NavProvider","setState","state","Provider","value","this","Component","Consumer","ActionTypes","Line","hr","MyNavLink","NavLink","LeftNav","Sidebar","useSelector","user","role","enterprise","useContext","location","useLocation","pathname","activeStyle","borderLeft","collapsedHidden","onMouseLeave","onMouseEnter","imageUrl","name","to","icon","bool","gridTemplateColumns","includes","reduce","acc","String","intialState","userState","userStates","UNAUTH","calcUserState","undefined","apps","enterpriseApp","ENTERPISE_SELECT","ENTERPISE_PENDING","APPROVED","setLoggedIn","flag","localStorage","setItem","authHeader","authtoken","getItem","Key","USER","delay","f","Promise","resolve","delayedResponse","response","a","json","res","post","useDelay","fetch","method","headers","JSON","stringify","then","authGet","authPost","route","auth","eid","eId","garage","metricType","header","customPost","enterpriseId","userId","aid","dId","widgets","resource","metrics","tId","table","download","ts","overflow","txt","limit","Sentry","asyncActions","apiCall","dispatch","showError","USER_REQUEST_PENDING","payload","success","Error","USER_REQUEST_SUCCESS","logger","USER_REQUEST_FAILED","formatUser","Boolean","api","getEnterprise","AUTH","token","authToken","enterprisePayload","GET_ENTERPRISE","logout","LOGOUT","garages","loadingAnnouncements","loadingAction","announcements","combineReducers","action","removeItem","LOGIN","SIGNUP","ADD_ENTERPISE","RESET_ERROR","announcement","idToFind","tempAnnouncement","index","cur","ReduxThunk","require","default","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","next","group","info","result","getState","groupEnd","moment","mo","currentTz","getTimezoneFromStore","tzChangeListeners","subscribe","tz","setDefault","forEach","l","defaultInterval","endTime","startTime","clone","set","toISOString","currentMonth","month","yearToDate","getInterval","days","getTimezone","FORMAT_DATETIME","abnormalities","date","MiniNav","TopNavBar","useDispatch","placement","content","zIndex","paddingBottom","marginBottom","format","trigger","count","useTimezone","setTz","listener","newTz","find","push","addTimezoneChangeListener","removeTimezoneChangeListener","window","scrollTo","year","marginRight","Top","noBackground","Bottom","shiftUp","asyncHandler","successMessage","errorMessage","refresh","useGarages","setter","obj","getGarages","API","addGarage","editGarage","GarageCard","address","maxOccupancy","edit","occupancyUpdateSource","occupancy","getTableById","occupancyTableId","abnormality","setTable","occupancyPercent","Number","toFixed","garageOccupancyTable","borderRight","paddingRight","strokeWidth","successPercent","strokeColor","percent","clasName","updatedAt","usePlaces","defaultSearch","found","resultLocation","lat","lng","setError","search","setSearch","searchText","setSearchText","selectResult","resetSearch","getAddress","addr","status","results","formatted_address","geometry","catch","AnyReactComponent","showText","SimpleMap","setGeo","origin","pointerLocation","zoom","pointerMoved","start","selectResultLocation","preventDefault","display","suffix","onChange","target","placeholder","justifySelf","top","bootstrapURLKeys","center","defaultZoom","__","Label","label","marginLeft","sources","defaultValue","GarageInfoForm","tables","useFormik","initialValues","values","submit","handleSubmit","handleChange","setFieldValue","handleBlur","onBlur","checked","min","Group","Option","CreateGarage","setCount","interval","setInterval","clearInterval","GarageMultiStep","step","completed","geo","setGarage","InputComponents","GarageEditor","useOccupanyTable","getTables","garageOccupancyTables","addTable","garageOccupancyTableId","removeTable","editTable","Listings","AddModal","g","EditGarage","XAxis","scale","tickFormat","axisStyleProps","maxTicks","range","tickValues","useMemo","dates","domain","mod","floor","AxisBottom","tickLabelProps","fontWeight","fill","textAnchor","hideTicks","YAxisLeft","ticks","AxisLeft","dx","dy","YAxisRight","AxisRight","defaultAxisStyle","hideAxisLine","tickStroke","tickLength","hideZero","useRect","right","bottom","left","calcRect","innerWidth","innerHeight","xRange","yRange","rect","setRect","useScale","points","yMax","xAxis","getXBandScale","yAxis","scaleLinear","scaleBand","d","Date","getDates","useData","timeSeriesResult","getStackedPoints","stackedPoints","linearMax","timeSeries","reference","numPoints","numResource","stackedPoint","at","totalValue","j","point","displayLabel","isMissing","useCombinedData","timeSeriesResults","combinedPoint","getColor","colors","getKeys","Object","keys","k","points_","setSelected","units","xScale","dateFormatter","useTooltip","reverse","bandStart","bandEnd","bandwidth","getLegend","unit","getUnit","n","toDollar","graphLocal","event","localPoint","x","y","handleTooltip","newSelected","iX","timestamp","legend","showTooltip","tooltipData","tooltipLeft","tooltipTop","Tooltip","tooltipOpen","isSelected","TooltipWithBounds","dangerouslySetInnerHTML","__html","Custom","from","stroke","pointerEvents","strokeDasharray","Charts","yScale","GridRows","strokeOpacity","MultiLine","linePathX","data","r","cx","cy","LinePath","linePathY","defined","StackedArea","noneSelected","getY","AreaStack","datum","y0","y1","stacks","path","stack","opacity","StackedBar","colorScale","scaleOrdinal","BarStack","barStacks","barStack","bars","bar","Combined","y2Scale","points2","keyLine","getLineY","getLineX","getChart","chart","multiLine","stackedArea","stackedBar","combined","DrawArea","chartType","tickFormatY","getYTickFormatter","tickFormatX","getXTickFormatter","tooltipFormatter","getTooltipDateFormatter","useToolTip","hideTooltip","onTouchStart","onTouchMove","onMouseMove","chartProps","transform","inChartLegend","textTransform","shape","labelMargin","SVG","o","Multi","datas","timeSeriesResult2","data1","data2","dataComb","y2Axis","tickFormatYLeft","tickFormatYRight","fixedAlignment","alignmentPeriod","minusOneDay","formatter","d0","subtract","get","defaultFormatter","tableProps","dataSource","columns","dataIndex","useResize","filterWidth","setWidth","useRef","resize","current","clientWidth","addEventListener","removeEventListener","ChartHeader","chartTypes","setChartType","isPercent","queries","link","setLink","csvExportUrl","charts","d100","Chart","metricDataStatus","useChartType","metricDataStatuses","isLoading","curr","hasError","useMetricData","timeseries","setMetricDataStatus","end","shouldSwap","getMetricData","query","all","metricDescriptor","setEndTime","newEndtime","setStartTime","newStartTime","getAlignment","alignment","dayFilter","period","reducer","alignmentReducer","getDefaultTimeframe","timeframes","t1","t2","intoInterval","enteries","timeframe","Filter","toggle","loadingTimeSeries","reset","options","hideTimeSelection","aggregations","resources","custom","setCustom","timeframeLabel","setTimeframeLabel","disabledDate","dividerStyle","gridProps","offset","adjustX","adjustY","handlePresetChange","parse","OptGroup","entry","clearIcon","use12Hours","minuteStep","setMetric","mode","resourceIds","setGarages","parsedValue","setDayFilter","timeSelection","setAlignment","dropdownAlign","showMinute","hours","hour","defaultTimeSeries","crossSeriesReducer","defaultDayFilter","setTimeseries","SET_METRICTYPE","SET_GARAGES","SET_INTERVAL","SET_ALIGNMENT","SET_DAY_FILTER","validateDayFilter","REFRESH","useTimeseries","useReducer","timeSeriesQuery","Analytics","setOpen","setToggle","currentTimeseries","split","chart_","getTime","startHour","hour1","min1","endHour","hour2","min2","pad","digit","abs","to12hours","precision","defaultTable","aTable","temp","OccupancyForm","input","getTitle","getTable","day","getOccupanciesByDay","newIntervals","elements","toArray","getElementsByClassName","sort","b","secondChild","overflowY","bordered","random","TableItem","tableId","select","associatedGarages","onConfirm","TableList","localeProps","garageLoading","float","renderItem","EditModal","OccupancyTable","loadingTables","locale","spinning","indicator","ScoreCard","adjacentLabel","hoverLabel","borderStyle","PercentBar","FlatValue","str","flatValueQuery","leftBorder","applicableResource","setRes","getValue","round","loadValue","flatValue","flatValueResult","getIcon","duration","activeGarages","totalOcc","currentOcc","total","activate","t","record","okButtonProps","cancelButtonProps","okText","cancelText","defaultChecked","activePages","toggler","DIV","states","ACTIVE","ALL","PAST","DEFAULT","Abnormality","detected_on","abnormality_event","ab","Garage","ANALYTICS","activePage","setActivePage","splice","LISTINGS","OCCUPANCY_TABLE","ABNORMALITY","whiteSpace","summary","pageData","Summary","Row","defaultValues","launchAt","expiresAt","Form","setLoading","TextArea","rows","showTime","useWidgets","screen","scoreCards","scoreCardOptions","getWidgets","res2","dashboards","dashboard","metricDescriptors","saveWidgets","removeChart","removeScoreCard","addWidget","editScoreCards","useRefresh","setRefresh","needsRefresh","EXPIRED","Adder","AnnoucementEl","announcementId","currentAnnouncements","paddingTop","revenueTimeSeries","revenueTimeSeriesQuery","countTimeSeries","transactionCountTimeSeriesQuery","AdditionalFilter","selectProps","revenueMetric","countMetric","filterProps","transactionTimeSeriesQuery","Citations","GaragesList","show","setShow","price","staffExpected","staffOccupancy","minutes","events","nowISO","defaultGarage","gridRow","minute","second","useEvents","getEvents","notify","removeEvent","newEvents","addEvent","editEvent","refreshEvent","image","switches","currentEvents","defaultMargin","PieChart","radius","centerY","centerX","rx","pieValue","outerRadius","innerRadius","cornerRadius","padAngle","pie","arcs","getAnalyticsCharts","me","analyticsQueryInterval","backgroundColor","xAxisLabel","yAxisLabel","revenue","transactions","reservations","getLiveCharts","liveQueryInterval","revenueAndTransactions","sumPoints","sum","getStats","epId","revenueQuery","transactionQuery","r1","r2","ts1","normal","dynamic","call","getAnalyticsStats","getLiveStats","getEnterpriseEvents","UTC","e1","reservationOccupancy","garageName","staffs","expStaffs","bindFunctions","bind","e2","selectedEnterpriseEventManager","selectedEnterpriseEvent","listeners","addSelectedEnterpriseChangeListener","fn","removeSelectedEnterpriseChangeListener","selectEnterpriseEvent","eventId","useSelectEnterpriseEvent","E","setE","enterpriseEvent","formatCentsToDollars","usePromise","promise","Pages","enterpriseEvents","eventIds","activeEvent","metricDataParam","Editor","dynamicPricing","chart1","chart2","ms11","ms12","ms21","Events","AuthBox","loginFields","hide","validationSchema","Yup","email","required","authSecret","connect","passwordForgotToggler","authType","errors","touched","signupFields","confirmPassword","oneOf","signup","back","selectEmail","user_email","setEmail","trim","resetPassword","user_password","confirm_password","secret","setSecret","confirmEmail","otp","setOtp","otpImg","isActive","s","UserSelectBox","passwordLoading","setResetFields","finished","changeState","finally","useEnterprises","enterprises","getEnterpises","addEnterprise","wait","UserHandleBox","Login","backgroundPosition","backgroundSize","useControl","enterpriseUsers","getEnterpriseUsers","rejectEnterpriseUser","removeEnterpriseUser","acceptEnterpriseUser","accept","reject","approved","ACCEPTED","PENDING","Controls","loadingUsers","rowKey","Overview","shortName","hideOnLoading","lineChart","App","hostname","match","ComponentsContext","editMode","toggleEditMode","ComponentProvider","GlobalStyle","createGlobalStyle","Main","dsn","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c621b316.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/announ.7c05f84e.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.4be984e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader.5a306b20.svg\";","module.exports = __webpack_public_path__ + \"static/media/parkstash_logo.ab0d6bfb.png\";","module.exports = __webpack_public_path__ + \"static/media/message3.10cb2302.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.3e935ffe.svg\";","module.exports = __webpack_public_path__ + \"static/media/parkstash_logo.ab1ee9fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventss.d3335f65.svg\";","module.exports = __webpack_public_path__ + \"static/media/login.9ab46960.svg\";","module.exports = __webpack_public_path__ + \"static/media/otp.65b29cd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/university.22150a8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/wait.edf991a2.svg\";","export const mobileWidth = \"860px\";\r\nexport const tabletWidth = \"1100px\";\r\n//#224035  #2a4a3e #2a394a #32325D #2a4a41\r\n\r\nexport const primaryColor = \"#33B482\"; // Lighter Bluish Green\r\nexport const secondaryColor = \"#037885\"; // Darker Bluish Green\r\nexport const gradient =\r\n  \"linear-gradient(to left, #00D69E, #00BAA4, #009CA0, #007F90, #1E6378, #2F4858)\";\r\nexport const gradient1 = \"linear-gradient(#00D69E, #00BAA4)\";\r\nexport const gradient2 = \"linear-gradient(#00BAA4, #009CA0, #007F90, #1E6378)\";\r\nexport const cardColor = \"#E8F6F3\";\r\n\r\nexport const primaryTxtColor = \"#32325D\";\r\nexport const secodaryTxtColor = \"#32325D\";\r\nexport const invertedTxtColor = \"#FFFFFF\";\r\nexport const disabledTxtColor = \"#A6ACAF\";\r\n\r\nexport const gray = \"rgba(247, 249, 249, 0.65)\";\r\nexport const primaryDarkColor = \"#8b64b7\";\r\nexport const secondaryDarkColor = \"black\";\r\n\r\nexport const API = \"https://test.findparkstash.com/api\";\r\n//export const API = \"http://localhost:3000/api\";\r\nexport const textOverFlowLimit = 15;\r\n","\r\nimport { primaryTxtColor,   mobileWidth } from '../config';\r\nimport { Ref } from 'react';\r\n\r\nexport interface GridStyle {\r\n    cols? : number | string | undefined;\r\n    rows? : number | string;\r\n    customCols? : string;\r\n    customRows? : string;\r\n    gridGap? : number | string;\r\n    mobileCols? : string;\r\n    mobileLayout? : boolean;\r\n    placeItems? : string, \r\n    hideOnMobile? : boolean,\r\n};\r\n\r\nexport const gridStyle = ({ cols, customCols, customRows, gridGap, mobileCols, mobileLayout, placeItems, hideOnMobile }: GridStyle)=>`\r\n    display: grid;\r\n    grid-gap: ${gridGap || '1em'} ;\r\n    grid-template-columns: repeat(${cols ? cols : \"1\"}, 1fr);\r\n    ${customCols? `grid-template-columns: ${customCols};`: ``}\r\n    ${customRows? `grid-template-rows: ${customRows};` : ``}\r\n    place-items: center;\r\n    ${placeItems? `place-items: ${placeItems};` : ``}\r\n    @media(max-width: ${mobileWidth}){\r\n        ${hideOnMobile? `display: none; !important` : ''}\r\n        ${mobileLayout !== false?  `grid-template-columns: 1fr;` : ``}\r\n        ${mobileCols? `grid-template-columns: ${mobileCols};` : ``}  \r\n    }\r\n`;\r\n\r\n\r\nexport interface FontStyle {\r\n    size? : number | string | undefined;\r\n    color? : string;\r\n    bold? :boolean;\r\n    textAlign? :  number | string;\r\n    placeSelf? : string,\r\n    textShadow? : string,\r\n};\r\n\r\nexport const fontStyle = ({ color, size, bold, textAlign,  placeSelf, textShadow } : FontStyle | any, darkMode : boolean)=>`\r\n    text-align: ${textAlign || 'center'};\r\n    ${`color : ${color || primaryTxtColor}`};\r\n    font-size: ${size || '1em'};\r\n    ${textShadow? `text-shadow: 1.2px 1.2px 2px black;` : \"\"}\r\n    font-weight: ${bold ? `bolder` : 'normal'};\r\n    ${placeSelf? `place-self: ${placeSelf};` : ''}`;\r\n\r\nexport interface SizeStyle {\r\n    width? : number | string | undefined;\r\n    height? : number | string;\r\n    max? : boolean;\r\n    padding? :  number | string;\r\n    margin? :  number | string,\r\n    minWidth? :  number | string,\r\n};\r\n\r\nexport const sizeStyle = ({width, height, max, padding, margin, minWidth} : any)=>`\r\n    width: ${width || \"auto\"};\r\n    min-width : ${minWidth || \"auto\"};\r\n    height: ${height || \"auto\"};\r\n    margin: ${margin || \"0\"} ;\r\n    padding: ${padding || \"0\"};\r\n\r\n`;\r\n\r\nexport interface DesignStyle {\r\n    shadow? : boolean;\r\n    rounded? : boolean;\r\n    bg? : string;\r\n    background? : string;\r\n    cursor? :  string;\r\n    hideOnMobile? : boolean,\r\n};\r\n\r\nexport const designStyle = ({shadow, rounded, bg, background, hideOnMobile, cursor} : DesignStyle)=>`\r\n    ${shadow? `box-shadow: 0 .25em .5em rgba(0,0,0,.5);` : \"\"}\r\n    pointer : ${cursor? 'cursor': 'default'};\r\n    transition: 200ms ease-out;\r\n    border-radius: ${rounded? '1.2em' : `.25em`};\r\n    border: 0px;\r\n    ${background?  `background: ${background};` : \"\"}\r\n    background-repeat: no-repeat;\r\n    @media(max-width: ${mobileWidth}){\r\n        ${hideOnMobile? `display: none;` : ''}\r\n    }\r\n`;\r\n\r\nexport interface ElementProps {\r\n    className? : string;\r\n    onClick?: ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined;\r\n    style?: React.CSSProperties;\r\n    ref? : Ref<any>\r\n};\r\n\r\n\r\nexport const elementProps = (props: ElementProps | any) => {\r\n    const {style, className, onClick, ref}  = props;\r\n    const property = {...style? { style }: {}, ...className? {className} : {}, ...onClick? {onClick} : {}, ...ref? ref: {}};\r\n    return property;\r\n}\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport { primaryColor, primaryTxtColor, invertedTxtColor } from \"../../config\";\r\nimport {\r\n  sizeStyle,\r\n  fontStyle,\r\n  designStyle,\r\n  elementProps,\r\n  gridStyle,\r\n  SizeStyle,\r\n} from \"../generator\";\r\n\r\nconst CardEl = styled.div<{ props: any }>`\r\n  ${(props: any) => `\r\n    ${props.grid ? gridStyle(props) : \"\"}\r\n    ${fontStyle(props, false)}\r\n    ${designStyle(props)}`}\r\n  ${({ hover, bgColor, invert, minWidth, padding, margin, width }: any) => `\r\n  background: ${invert ? primaryColor : bgColor || \"white\"};\r\n    ${sizeStyle({ margin, padding, minWidth, width })}\r\n    ${\r\n      hover &&\r\n      `&:hover { \r\n        transform: scale(1.1); \r\n    }\r\n    `\r\n    }`}\r\n`;\r\n\r\nexport const Card = (props: any) => {\r\n  const {\r\n    border,\r\n    children,\r\n    shadow = false,\r\n    invert = false,\r\n    selected,\r\n  } = props;\r\n\r\n  const {\r\n    margin = \"1em .5em\",\r\n    padding = \".8em 1em\",\r\n    minWidth = \"3em\",\r\n    width,\r\n  } = props as SizeStyle;\r\n\r\n  props = { ...props, ...{ margin, width, padding, minWidth } };\r\n  const elProps = elementProps(props);\r\n\r\n  const style = {\r\n    boxShadow: selected? \"0 .25em .5em dodgerblue\": shadow === false? \"\" : \"0 .25em .5em rgba(0,0,0,.5)\",\r\n    color: invert ? invertedTxtColor : primaryTxtColor,\r\n    border: border ? `${border} solid` : \"\",\r\n  };\r\n\r\n  return (\r\n    <CardEl {...props} style={style} {...elProps}>\r\n      {children}\r\n    </CardEl>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport React from 'react';\r\nimport { sizeStyle, fontStyle, FontStyle, SizeStyle, ElementProps } from '../generator';\r\nimport { primaryTxtColor, invertedTxtColor } from '../../config';\r\n\r\ninterface HeaderProps extends FontStyle, SizeStyle, ElementProps{\r\n    children? : React.ReactNode;\r\n    inverted? : boolean;\r\n}\r\n\r\nconst HeaderLayout = styled.h1<{ styleProps: SizeStyle, fontProps: FontStyle }>`\r\n${props => sizeStyle(props.styleProps)}\r\n${props=> fontStyle(props.fontProps, false)}`;\r\n\r\nexport const Header = (props: HeaderProps) => {\r\n    const { children, style, className, onClick } = props;\r\n\r\n    const { width, height, max, padding, margin, minWidth, inverted } = props;\r\n    const styleProps : SizeStyle = { \r\n        width, \r\n        height, \r\n        max, \r\n        padding, \r\n        margin, \r\n        minWidth \r\n    };\r\n    const defaultColor =  inverted? invertedTxtColor : primaryTxtColor ;\r\n    const { size, color = defaultColor, bold, textAlign, placeSelf, textShadow } = props;\r\n    const fontProps : FontStyle = {\r\n        size: typeof size === 'number'? (6 - size)/2 + \"rem\": size? size : \"1.5em\",\r\n        color, \r\n        bold, \r\n        textAlign,  \r\n        placeSelf, \r\n        textShadow\r\n    };\r\n\r\n    return (\r\n    <HeaderLayout \r\n        styleProps={styleProps}  \r\n        fontProps={fontProps} \r\n        onClick={onClick} \r\n        className={className} \r\n        style={style}\r\n    > \r\n        {children} \r\n    </HeaderLayout>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport mySvg from \"../../assets/loader.svg\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport logo from \"../../assets/parkstash_logo.png\";\r\nconst LoaderEl = styled.div`\r\n  position: absolute;\r\n  left: calc(50% - 70px);\r\n  top: calc(50% - 70px);\r\n  display: inline-block;\r\n`;\r\n\r\nexport const Loader = (): JSX.Element => (\r\n  <LoaderEl className=\"blue-txt\">\r\n    <img width=\"70\" src={mySvg} alt=\"A Loader\" />\r\n  </LoaderEl>\r\n);\r\n\r\nconst glow = keyframes`\r\n0% { \r\n  transform: scale(0.9);\r\n  filter: drop-shadow(3px 4px 6px teal); \r\n}\r\n100% {\r\n  transform: scale(1);\r\n  filter: drop-shadow(0px 0px 0px white); \r\n}`;\r\n\r\nconst Img = styled.img`\r\n  animation: ${glow} 800ms ease-out infinite;\r\n`;\r\n\r\nexport const Loader2 = ({ logo }: any): JSX.Element => (\r\n  <div className=\"grid full\">\r\n    <Img src={logo} alt=\"A Loader\" />\r\n  </div>\r\n);\r\n\r\nLoader.Parkstash = (): JSX.Element => (\r\n  <LoaderEl>\r\n    <Img width=\"70\" src={logo} alt=\"A Loader\" />\r\n  </LoaderEl>\r\n);\r\n\r\nLoader.Spinner = ({ size = 2, color = \"inherit\" }): JSX.Element => {\r\n  const fontSize = (6 - size < 0 ? 1 : 6 - size) / 2 + \"em\";\r\n  return <i className=\"fa fa-spinner spin\" style={{ fontSize, color }}></i>;\r\n};\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport {\r\n  sizeStyle,\r\n  fontStyle,\r\n  designStyle,\r\n  elementProps,\r\n  gridStyle,\r\n  FontStyle,\r\n  SizeStyle,\r\n  ElementProps,\r\n  GridStyle,\r\n} from \"../generator\";\r\n\r\ninterface GridProps extends FontStyle, SizeStyle, ElementProps, GridStyle {\r\n  children?: React.ReactNode;\r\n  background?: string;\r\n  max ?: boolean;\r\n}\r\n\r\nconst Layout = styled.div<{ props: any }>`\r\n  ${(props: any) => `\r\n    ${gridStyle(props)}\r\n    ${sizeStyle(props)}\r\n    ${fontStyle(props, false)}\r\n    ${props.background && `background: ${props.background};`}`}\r\n`;\r\n\r\nexport const Grid = (props: GridProps) => {\r\n  const { children } = props;\r\n  const elProps = elementProps(props);\r\n\r\n  return (\r\n    <Layout {...props} {...elProps}>\r\n      {children}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst GridItemLayout = styled.div<{ props: any }>`\r\n  ${(props : any) => `\r\n     ${sizeStyle(props)}\r\n     ${gridStyle(props)}   \r\n     ${props.gridRowStart && `grid-row-start: ${props.gridRowStart};`}\r\n     ${props.gridColumnStart && `grid-column-start: ${props.gridColumnStart};`}\r\n     ${props.background && `background: ${props.background};`}\r\n     ${fontStyle(props, false)}\r\n     ${designStyle(props)}`}\r\n`;\r\n\r\nconst GridItem = (props: any) => {\r\n  const elProps = elementProps(props);\r\n\r\n  return (\r\n    <GridItemLayout {...props} {...elProps}>\r\n      {\" \"}\r\n      {props.children}{\" \"}\r\n    </GridItemLayout>\r\n  );\r\n};\r\n\r\nGrid.Item = GridItem;\r\n\r\nexport default Grid;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport { primaryColor } from \"../../config\";\r\nimport { sizeStyle, fontStyle } from \"../generator\";\r\nimport { designStyle, elementProps } from \"../generator\";\r\nimport \"../main.scss\";\r\nimport Loader from \"../loader\";\r\nimport { Tooltip } from \"antd\";\r\n\r\nconst Bt = styled.button<{ props: any; fontProps: any }>`\r\n  ${(props: any) => designStyle(props)}\r\n  ${(props) => sizeStyle(props)}\r\n  ${(fontProps) => fontStyle(fontProps, false)}\r\n  ${({ bg, invert, disabled, color, noBorder, noHover }: any) => `\r\n  background:  ${bg || primaryColor};\r\n  border: 2px solid ${noBorder ? 'white' : bg || primaryColor};\r\n  color : ${ bg ? \"white\" : color || \"white\"};\r\n  cursor: pointer;\r\n  box-shadow: 0 3px 1px -2px rgba(0,0,0,0.2), 0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12);\r\n  ${invert ? `background: white; color: ${primaryColor};` : ''}\r\n  ${bg && invert ? `background: white; color: ${bg !== \"white\" ? bg : primaryColor};` : ''}\r\n  ${!disabled ? `\r\n    &:hover {\r\n      ${!noHover ? `\r\n        border-color: ${bg || primaryColor};\r\n        background: ${!invert ? color || \"white\" : bg || primaryColor};\r\n        color: ${bg ? (invert ? \"white\" : bg) : !invert ? primaryColor : color || \"white\"};` : ''}\r\n      box-shadow: 0 0 0 0;\r\n      transform: scale(0.99);\r\n      transition: 350ms ease-out;\r\n  }`\r\n      : \"background: #F0F3F4; border-color: #F0F3F4; color: darkgray;\"\r\n    }\r\n\r\n&:focus{\r\n    outline:0;\r\n}`}`;\r\n\r\nexport const Button = (props: any) => {\r\n  let {\r\n    onSubmit,\r\n    children,\r\n    margin = '0.15em',\r\n    padding = '0.3em 0.4em',\r\n    minWidth = '6.5em',\r\n    disabled,\r\n    loading = false,\r\n    noHover = false,\r\n    tooltip\r\n  } = props;\r\n\r\n\r\n  const { color, size, bold, textAlign, placeSelf, textShadow, noBorder = false, faIcon } = props;\r\n  const fontProps = { color, size, bold, textAlign, placeSelf, textShadow };\r\n\r\n  props = { ...props, ...{ margin, padding, minWidth, noHover } }\r\n\r\n  return (\r\n    <Tooltip title={tooltip}>\r\n    <Bt\r\n      type={props.type || \"submit\"}\r\n      {...props}\r\n      fontProps={fontProps}\r\n      disabled={disabled}\r\n      onSubmit={onSubmit}\r\n      {...elementProps(props)}\r\n    >\r\n      {loading && (\r\n        <>\r\n          <Loader.Spinner size={4} />\r\n          &nbsp;\r\n        </>\r\n      )}\r\n      {faIcon && <i className={faIcon}></i>}\r\n      {children}\r\n    </Bt>\r\n    </Tooltip>\r\n  );\r\n};\r\nButton.Normal = styled.button`\r\n  padding: 0.3rem;\r\n  color: white;\r\n  cursor: pointer;\r\n  background: ${primaryColor};\r\n  border: 0.15em solid ${primaryColor};\r\n  border-radius: 0.25em;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.25), 0 3px 3px rgba(0, 0, 0, 0.22);\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n  ${(props) =>\r\n    !props.disabled\r\n      ? `&:hover {\r\n    background: white;\r\n    color: ${primaryColor};\r\n    box-shadow: 0 0 0 0;\r\n    transform: scale(0.99);\r\n    transition: 350ms ease-out;\r\n}`\r\n      : \"background: #F0F3F4; border-color: #F0F3F4; color: darkgray; box-shadow: 0 0 0 !important;\"}\r\n`;\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ImgBox = styled.img`\r\n    object-fit: cover;\r\n    width: 8em;\r\n    padding: .5em;\r\n    height: 8em;\r\n`;\r\n\r\nexport const Avatar = ({ url, src, large, style, medium, className }: any) => {\r\n    style = {\r\n        ...style, ...large? {\r\n            borderWidth: '4px',\r\n            width: '15em',\r\n            maxHeight: \"90vw\",\r\n            height: '15em'\r\n        } : !medium? {\r\n            width: '3em',\r\n            height: '3em'\r\n        }: {}\r\n    };\r\n  return (<ImgBox className={className} src={url || src} style={style} />);\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst Placehold = styled.div`\r\nbox-sizing: border-box;\r\nmargin: 1em 0;\r\nwidth: 100%;\r\nheight: 9vw;\r\nmin-height: 8em;\r\nbackground-color: #F8F9F9;\r\nbox-shadow: 1px 4px 23px 3px rgba(0,0,0, 0.2);\r\nborder-radius: .25em;\r\npadding: 3vw 4vw;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: space-between;`;\r\n\r\nconst Loading = keyframes`{\r\nfrom {width: 0% }\r\nto {width: 100%;}}`;\r\n\r\nconst Loader = styled.div<{height: number}>`\r\n${props => `height: ${props.height}%;`}\r\nbackground: linear-gradient(90deg, rgba(210,210,210,0.5) 0%, rgba(238,238,238,0.7) 100%);\r\nborder-radius: 10px;\r\nanimation: ${Loading} 0.8s infinite;`\r\n\r\nexport const Placeholder = ({ style, number = 1, lines = 3 , containerStyle }: any) => {\r\n  const placeholders = [... new Array(number)]\r\n    .map((_, i: number) => (\r\n      <Placehold style={style} key={i}>\r\n        {[... new Array(lines)].map((_, i: number) => <Loader key={i} height={55 / (lines)} ></Loader>)}\r\n      </Placehold>))\r\n  if(containerStyle) return <div style={containerStyle}>{placeholders}</div>\r\n  \r\n  return <>{placeholders}</>;\r\n};\r\n\r\nexport default Placeholder;","import  { useState, useEffect } from 'react';\r\nconst usePagination = (len: number, max: number)=> {   \r\n    const [ length, setLength ] = useState(len) \r\n    const [ page, setPage ] = useState(0);    \r\n    const maxPage = Math.ceil(length / max);\r\n    const canGoBack = page > 0;\r\n    const canGoForward = page < (maxPage -1)\r\n    \r\n    const backward = ()=> canGoBack && setPage(page - 1)\r\n    \r\n    const forward = ()=> canGoForward && setPage(page + 1)\r\n\r\n\r\n    useEffect(()=> {\r\n        setLength(len);\r\n        if(page + 1 > len){\r\n            setPage(0)\r\n        }\r\n    }, [len]);\r\n    return {\r\n        page,\r\n        needsPagination: maxPage > 1,\r\n        canGoBack,\r\n        canGoForward,\r\n        actions: {\r\n            forward, backward\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default usePagination;","import React from 'react';\r\nimport { Loader, Empty } from '.';\r\nimport usePagination from '../hooks/pagination';\r\n\r\ninterface List {\r\n    loading?: boolean;\r\n    list: any[];\r\n    loader?: JSX.Element | any;\r\n    emptyText?: string;\r\n    empty?: JSX.Element;\r\n    map?: any;\r\n    error?: boolean;\r\n    pagination?:  { items: number };\r\n}\r\n\r\nconst List = ({\r\n    loading = false,\r\n    error = false,\r\n    pagination,\r\n    list,\r\n    loader = <Loader.Spinner color='inherit' />,\r\n    emptyText = \"No Data\",\r\n    empty = <Empty text={emptyText} color=\"white\" style={{ marginTop: 0 }} />,\r\n    map }: List) => {\r\n\r\n    const { page, canGoBack, canGoForward, actions, needsPagination } = usePagination(list.length, pagination ? pagination.items : 0);\r\n\r\n    if (loading)\r\n        return loader;\r\n    else if (list?.length === 0)\r\n        return empty\r\n\r\n    if (pagination) {\r\n        return <>\r\n            {list\r\n                .filter((_, i) => (pagination?.items * (page + 1) >= (i + 1)) && (i >= (pagination.items * page)))\r\n                .map(map)}\r\n            {needsPagination &&\r\n                <div style={{ placeSelf: 'end', gridColumn: '1/-1', height: '100%' }}>\r\n                    <i\r\n                        onClick={actions.backward}\r\n                        style={{ color: !canGoBack ? 'gray' : '' }}\r\n                        className={'fa fa-chevron-left'}\r\n                    >\r\n                    </i>\r\n                    &nbsp; &nbsp;\r\n                    <i\r\n                        style={{ color: !canGoForward ? 'gray' : '' }}\r\n                        className={'fa fa-chevron-right'}\r\n                        onClick={actions.forward}\r\n                    >\r\n                    </i>\r\n                </div>\r\n            }\r\n        </>;\r\n    }\r\n    return <>{list.map(map ? map : (el) => el)}</>;\r\n}\r\n\r\nexport default List;","import { keyframes } from 'styled-components';\r\n\r\nexport const opacityAnimation = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n   opacity: 1;\r\n  }\r\n`;\r\nexport const slideIn = keyframes`\r\n    0% { \r\n      transform: translateX(15rem);\r\n    }\r\n    100% {\r\n      transform: translateX(0);\r\n    }`;\r\n\r\nexport const slideInLeft = keyframes`\r\n    0% { \r\n      transform: translateX(-15rem);\r\n    }\r\n    100% {\r\n      transform: translateX(0);\r\n    }`;\r\n\r\nexport const glow = keyframes`\r\n    0% { \r\n      transform: scale(0.9);\r\n      filter: drop-shadow(3px 4px 6px teal); \r\n    }\r\n    100% {\r\n      transform: scale(1);\r\n      filter: drop-shadow(0px 0px 0px white); \r\n    }`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styled from 'styled-components';\r\nimport { sizeStyle, designStyle } from '../generator';\r\nimport { slideIn } from '../../style/animation';\r\nimport  '../main.scss';\r\nimport { Grid } from '..';\r\n\r\ntype Position = 'top-left' | 'top-right' | 'top-center' | 'bottom-left' | 'bottom-right' | 'bottom-center';\r\n\r\ninterface Popup {\r\n    type : 'notification' | 'message' | 'modal',\r\n    position? : Position\r\n}\r\n\r\ninterface Notification {\r\n    title : string;\r\n    message : string;\r\n    position? : Position; \r\n    visibilityTime? : number;\r\n}\r\n\r\ntype NotificationType = \"warning\" | \"success\" | \"error\";\r\n\r\nconst Containter = styled.div`\r\ntransition: 200ms ease-out;\r\nanimation:  ${slideIn} 200ms ease-out;\r\n${sizeStyle({width : \"14rem\", minHeight: \"4rem\", margin: \".5em\", padding: '.6em'})}\r\n${designStyle({shadow: true, background: \"white\"})}`;\r\n\r\n\r\n\r\nexport const createPopup = ({ type, position } : Popup) => {\r\n    const defaultPosition = 'top-right';\r\n    const containerId = type + '-container-' + position || defaultPosition;  \r\n    const hasContainer = document.getElementById(containerId) !== null;\r\n    const container = document.getElementById(containerId) || document.createElement('div');\r\n    const div = document.createElement('div');\r\n    const root = document.getElementById('root');\r\n\r\n    if(!hasContainer){\r\n        container.setAttribute(\"id\", containerId);\r\n        container.classList.add(position || defaultPosition);\r\n        root?.appendChild(container);\r\n    }\r\n    container.prepend(div);\r\n    return {\r\n        container, child : div\r\n    }\r\n}\r\n\r\nconst Notification = (type : NotificationType, { title, message, position, visibilityTime } : Notification) =>{\r\n    const defaultVisibiltyTime = type ===  'error'? 4400 : 3300;\r\n    const { container, child } = createPopup({ type: \"notification\", position });\r\n    const remove = () =>{\r\n        try{\r\n        container.removeChild(child);\r\n        } catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const Notification = (<Containter id=\"111\">\r\n                            <Grid customCols=\"auto 1fr\" textAlign=\"left\">\r\n                                <Icon type={type}/>\r\n                                \r\n                                <div style={{placeSelf: \"stretch\"}} className={type}>\r\n                                    <header style={{textOverflow: \"ellipsis\"}}>{title}\r\n                                    <i className=\"fa fa-times right\" aria-hidden=\"true\" onClick={remove} style={{ color: \"darkgray\", placeSelf: \"start\"}}></i></header>\r\n                                    <div style={{textOverflow: \"ellipsis\"}}>{message}</div>\r\n                                </div>\r\n                               \r\n                            </Grid>\r\n                        </Containter>);\r\n    \r\n    setTimeout(()=> remove(), visibilityTime || defaultVisibiltyTime);\r\n    ReactDOM.render(Notification, child);  \r\n}\r\n\r\nconst Icon = ({ type } : { type : NotificationType}) => {\r\n   let iconName: string;\r\n\r\n   switch(type){\r\n        case 'warning':\r\n        iconName =  \"fa fa-exclamation-triangle warning\";\r\n        break;\r\n\r\n        case 'error':\r\n        iconName =  \"fa fa-exclamation-circle error\";\r\n        break;\r\n\r\n        default:\r\n        iconName = \"fa fa-check-circle success\";\r\n\r\n    }\r\n  return <i className={iconName} aria-hidden=\"true\" style={{ placeSelf: \"start\"}}></i>\r\n}\r\n\r\nexport default {\r\n    success : (props : Notification)=> Notification(\"success\", props),\r\n    warning : (props : Notification)=> Notification(\"warning\", props),\r\n    error : (props : Notification)=> Notification(\"error\", props),\r\n};\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styled from 'styled-components';\r\nimport '../main.scss';\r\nimport { Grid } from '../';\r\nimport { createPopup } from '../notification';\r\nimport Button from '../button';\r\nimport { mobileWidth, primaryColor } from '../../config';\r\nimport svg from '../../assets/message3.svg';\r\ntype Position = 'top-left' | 'top-right' | 'top-center' | 'bottom-left' | 'bottom-right' | 'bottom-center';\r\n\r\ninterface ModalProps {\r\n    title: string;\r\n    message?: string | JSX.Element;\r\n    className?: string;\r\n    position?: Position;\r\n    modal? : JSX.Element;\r\n    hideCancel?: boolean;\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    position: fixed;\r\n    z-index: 20;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    transition: 200ms ease-out;\r\n    background-color: rgba(0,0,0,0.5);`;\r\n\r\nconst Modall = styled.div`\r\n    margin: 2% auto;\r\n    background: white;\r\n    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\r\n    border-radius: 1em;\r\n    width: 80%;\r\n    display: grid;\r\n    place-items: stretch;\r\n    grid-template-rows: auto 1fr;\r\n    text-align: center;\r\n    font-size: 1.2em;\r\n    padding: 0;\r\n    min-height: 260px;\r\n    max-width: 900px;\r\n    color: black;\r\n    @media(max-width: ${mobileWidth}){\r\n    position: absolute;\r\n    bottom: 90px;\r\n    width: 90vw;\r\n    left: 50%;\r\n    -webkit-transform: translateX(-50%);\r\n    transform: translateX(-50%)\r\n    }`;\r\n\r\n\r\nconst Header = styled.div`\r\n    color: white;\r\n    background-image: linear-gradient( ${primaryColor}, rgba(50, 150, 178, 0.8));\r\n    border-top-right-radius: .75em;\r\n    border-top-left-radius: .75em;\r\n    border: 0;\r\n    margin: 0;\r\n    height: 2.5em;`;\r\n\r\nconst Body = styled.div`\r\n    color: white;\r\n    minHeight: 5em;\r\n    padding: .0em;\r\n    display: grid;\r\n    place-items: center;\r\n    grid-template-rows: 1fr auto;\r\n    font-weight: bolder;\r\n    background-image: linear-gradient(rgba(208, 211, 212 , 0.7), rgba(32, 100, 78 , 0.6)), url(${svg});\r\n    border-bottom-right-radius: .75em;\r\n    border-bottom-left-radius: .75em;\r\n`;\r\n\r\nconst Modal = ({ title, message, hideCancel, position = 'top-center', className, modal }: ModalProps) => {\r\n    const { container, child } = createPopup({ type: \"modal\", position });\r\n    const body = document.getElementsByTagName('body')[0]\r\n    const close = () =>{ \r\n        try{\r\n            body?.classList.remove('noscroll')\r\n            container.removeChild(child);\r\n            ReactDOM.unmountComponentAtNode(child);\r\n        } catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const El = (<Wrapper>\r\n        {modal? \r\n        modal :\r\n        <Modall className={\"appear \"+ className}>\r\n                <Header style={{ placeSelf: \"stretch\" }} >\r\n                <Grid customCols=\"1fr auto\" textAlign=\"left\">\r\n                    <header style={{ textOverflow: \"ellipsis\", color: \"white\" }}>{title}</header>\r\n                     <i className=\"fa fa-times\" aria-hidden=\"true\" onClick={close} style={{ color: \"white\", placeSelf: \"center\", padding: \".5em\"}}></i>\r\n                    </Grid>\r\n                </Header>\r\n            <Body>\r\n                {typeof message === 'string' || React.isValidElement(message) ? message : 'Error'}\r\n                {!hideCancel &&\r\n                    <div>\r\n                    <Button shadow onClick={close}>Cancel</Button>\r\n                </div>\r\n                }\r\n            </Body>\r\n        </Modall>\r\n        }\r\n    </Wrapper>);\r\n\r\n    return {\r\n        close,\r\n        open: ()=> {\r\n            if(!container.contains(child))\r\n                container.appendChild(child);\r\n            ReactDOM.render(El, child);\r\n            body?.classList.add('noscroll')\r\n        }\r\n    }\r\n}\r\n\r\nexport default Modal;","import styled from 'styled-components';\r\nimport React from 'react';\r\nimport { sizeStyle, fontStyle, FontStyle, SizeStyle, ElementProps } from '../generator';\r\nimport { primaryTxtColor } from '../../config';\r\n\r\ninterface TextProps extends FontStyle, SizeStyle, ElementProps{\r\n    children? : React.ReactNode;\r\n}\r\n\r\nconst HeaderLayout = styled.div<{styleProps: any, fontProps: any}>`\r\n${styleProps => sizeStyle(styleProps)}\r\n${fontProps =>fontStyle(fontProps, false)}`;\r\n\r\nexport const Text = (props: TextProps) => {\r\n    const { children, style, className, onClick } = props;\r\n\r\n    const { width, height, max, padding, margin, minWidth } = props;\r\n    const styleProps : SizeStyle = { \r\n        width, \r\n        height, \r\n        max, \r\n        padding, \r\n        margin, \r\n        minWidth \r\n    };\r\n\r\n    const { size, color = primaryTxtColor, bold, textAlign, placeSelf, textShadow } = props;\r\n    const fontProps : FontStyle = {\r\n        size: typeof size === 'number'? (6 - size)/3 + \"rem\": size? size : \"1em\",\r\n        color, \r\n        bold, \r\n        textAlign : textAlign || 'left',  \r\n        placeSelf, \r\n        textShadow\r\n    };\r\n\r\n    return (\r\n        <HeaderLayout \r\n            {...props}\r\n            styleProps={styleProps}\r\n            fontProps={fontProps}\r\n            onClick={onClick} \r\n            className={className} \r\n            style={style}\r\n        > \r\n        {children} \r\n        </HeaderLayout>\r\n    );\r\n}\r\n\r\nexport default Text;","import { Grid, MenuItem, Text } from \"..\";\r\nimport React from 'react';\r\n\r\n\r\nconst Switch = ({ onClick, active, items, style } : any)=>(\r\n    <Grid padding=\".5em\" style={style}>\r\n    <div\r\n      className=\"shadow noselect\"\r\n      style={{\r\n        background: \"#CDF7E0\",\r\n        padding: \".2em\",\r\n        borderRadius: \"1.5em\",\r\n      }}\r\n    >\r\n      {items.map((item: string) => (\r\n        <MenuItem\r\n          key={item}\r\n          style={{ borderRadius: \"1.5em\" }}\r\n          active={active === item}\r\n          onClick={() => onClick(item)}\r\n        >\r\n          {item.charAt(0).toUpperCase() +\r\n           item.substring(1).toLowerCase().replace(/_/g, \" \")}\r\n        </MenuItem>\r\n      ))}\r\n    </div>\r\n  </Grid>\r\n  );\r\n\r\n  Switch.underlined = ({ onClick, active, items, style } : any)=>(\r\n    <Grid \r\n      padding=\".5em\" \r\n      style={style}   \r\n      className=\"noselect\" \r\n      customCols={`repeat(${items.length}, auto)`}  \r\n      mobileLayout={false}\r\n    >\r\n      {items.map((item: string | any) => {\r\n      const isString = typeof item ==='string';\r\n      return(\r\n        <Text\r\n          bold\r\n          color='white'\r\n          key={item}\r\n          width='100%'\r\n          className='pointer'\r\n          style={{borderBottom: active === item.toString()? '2px solid white': '', fontSize: \"1.2em\"}}\r\n          onClick={() => onClick(item.toString())}\r\n        >\r\n          {isString? item.charAt(0).toUpperCase() +\r\n           item.substring(1).toLowerCase().replace(/_/g, \" \") : item.el}\r\n        </Text>\r\n      )})}\r\n  </Grid>\r\n  );\r\n\r\n\r\n  export default Switch;","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport { primaryColor } from \"../../config\";\r\nimport { elementProps } from \"../generator\";\r\n\r\nconst MI = styled.span<{ active: boolean, inverted: boolean | undefined, fullWidth: boolean | undefined  }>`\r\n  ${(props) => `\r\n    cursor : pointer;\r\n    padding: .3em .5em;\r\n    font-size: 1.05em;\r\n    text-transform: capitalize;\r\n    transition: 400ms ease-out;\r\n    color: ${primaryColor};\r\n    ${props.fullWidth? 'width: 100%;' : ''}\r\n    border-radius: ${props.fullWidth? 0 : '1.5em'}; \r\n    font-weight: bold;\r\n    ${props.active &&`\r\n        border-radius: ${props.fullWidth? 0 :'.6em'};\r\n        box-shadow: 0 .13em .2em rgba(0,0,0,.5);\r\n        background: ${props.inverted ? \"white\" : primaryColor}; color: ${\r\n            props.inverted ? primaryColor : \"white\"\r\n        }`\r\n    }`}\r\n`;\r\n\r\nexport const MenuItem = (props: any) => {\r\n  return (\r\n    <MI {...elementProps(props)} {...props}>\r\n      {props.children}\r\n    </MI>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { primaryColor  } from \"../../config\";\r\n\r\nexport const Badge = ({\r\n  disabled = false,\r\n  inverted = false,\r\n  children,\r\n  bold = false,\r\n  onClick,\r\n  style,\r\n  className\r\n} : any) => {\r\n  return (\r\n    <BadgeEl  \r\n    className={className + \" noselect\"} \r\n    style={style}\r\n    bold={bold}\r\n    onClick={onClick} \r\n    disabled={disabled} \r\n    inverted={inverted}>\r\n      {children}\r\n    </BadgeEl>\r\n  );\r\n};\r\nexport const BadgeEl = styled.span<{ disabled: boolean; inverted: boolean; bold : boolean}>`\r\n    border-radius: .5em;\r\n    background: ${primaryColor};\r\n    font-size: .8em;\r\n    color: white;\r\n    margin: .2em;\r\n    text-transform: capitalize;\r\n    padding .3em .6em;\r\n    ${(props) => `\r\n    ${props.bold? `font-weight: bolder;` : ''}\r\n    ${ \r\n      props.inverted\r\n        ? `background: white !important;\r\n        color: ${primaryColor};\r\n        padding .1em .4em;\r\n        border: .2em solid ${primaryColor};\r\n         color: ${primaryColor};`\r\n        : props.disabled\r\n        ? `background: ${\"gray\"}; \r\n        color: white;`\r\n        : \"\"\r\n    }   \r\n    `}`;\r\n\r\n\r\nexport default Badge;\r\n","import React from 'react';\r\nimport empty from \"../../assets/empty.svg\";\r\nimport { Grid, Header } from '../';\r\n\r\nconst Empty = ({ text = 'No Data', style = {}, color =\"inherit\"})=>{\r\nreturn(\r\n      <Grid customRows={'auto auto'} placeItems='center' width='100%'>\r\n          <img src={empty} style={{ maxWidth: \"200px\", width: \"100%\", marginTop: \"10vh\" , ...style}} />\r\n          <Header bold color={color} style={{lineHeight: \"1em\"}}>{text}</Header>\r\n      </Grid>\r\n  )\r\n};\r\n\r\nexport default Empty;","  \r\nimport React, { createContext } from 'react';\r\n\r\nconst initialState = {\r\n  sidebar: false,\r\n  toggleSidebar: ()=>{},\r\n  collapsed: true,\r\n  toggleCollapsed : (b = false)=>{}\r\n}\r\nexport const NavContext = createContext(initialState);\r\n\r\nexport class NavProvider extends React.Component {\r\n\r\n  toggleSidebar = ()=> {this.setState({ sidebar : !this.state.sidebar})};\r\n  \r\n  toggleCollapsed = (collapsed = false)=> this.setState({ collapsed });\r\n  state = {\r\n    ...initialState,\r\n    toggleSidebar : this.toggleSidebar,\r\n    toggleCollapsed: this.toggleCollapsed\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <NavContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </NavContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const NavConsumer = NavContext.Consumer;","import React, { useContext , useEffect} from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Avatar, Grid } from '..';\r\nimport { useLocation } from \"react-router\";\r\nimport { mobileWidth, primaryColor,  primaryTxtColor } from '../../config';\r\nimport { Badge } from '../badge';\r\nimport { useSelector} from 'react-redux';\r\nimport { NavContext } from '../../context/nav-context';\r\nimport { Enterprise } from '../../model/domain/enterprise';\r\n\r\nconst Sidebar = () => {\r\n  const { user , role} = useSelector((state: any) => state.user);\r\n  const enterprise : Enterprise = useSelector((state: any) => state.user.enterprise);\r\n  const { collapsed, toggleCollapsed } = useContext(NavContext)\r\n  const location = useLocation().pathname;\r\n\r\n  const makeStr = (bool: boolean): string => String(bool)\r\n  const routes = [\r\n    { to: [`/`, \"/overview\"], name: \"Overview\", icon: \"fa fa-heartbeat\" },\r\n    { to: [`/garages`], name: \"Garages\", icon: \"fas fa-warehouse\" },\r\n    { to: [\"/announcements\"], name: \"Announcements\", icon: \"fas fa-bullhorn\" },\r\n    { to: [`/citations`], name: \"Citation\", icon: \"fas fa-money-check-alt\" },\r\n    { to: [\"/events\"], name: \"Events\", icon: \"fa fa-calendar\" },\r\n    { to: [\"/controls\"], name: \"Controls\", icon: \"fas fa-cog\" },\r\n  ];\r\n\r\n  const activeStyle = {\r\n    borderLeft : \".3em solid \"+ primaryColor,\r\n    color: primaryColor\r\n  }\r\n\r\n  const collapsedHidden = collapsed ? \"hide\" : \"\";\r\n  return (\r\n  <div onMouseLeave={() => toggleCollapsed(true)} onMouseEnter={() =>toggleCollapsed(false)}>\r\n    <LeftNav background={\"\"} collapsed={collapsed}>\r\n      <Grid.Item hideOnMobile>\r\n        <Avatar\r\n          medium={!collapsed}\r\n          src={enterprise.imageUrl}\r\n        />\r\n        <span className={\"txt-md txt-center grid \" + collapsedHidden}>\r\n          <div className=\"capitalize\"> {user.name}</div>\r\n          <Badge\r\n            style={{fontSize: \".7em\", padding: \".1em .4em\", borderWidth: 2}}\r\n            inverted\r\n            className={\"shadow capitalize \" + collapsedHidden}>\r\n            {role || \"member\"}\r\n          </Badge>\r\n        </span>\r\n      </Grid.Item>\r\n\r\n      {routes.map(({ to, name, icon }: any, i) => {\r\n        return (\r\n          <MyNavLink\r\n            className={i > 4? 'hide-mobile': ''}\r\n            key={name}\r\n            collapsed={collapsed}\r\n            style={{\r\n              gridTemplateColumns: collapsed ? '1fr' : 'auto 1fr',\r\n               ...to.includes(location)? activeStyle: {}\r\n            }}\r\n            to={to[0] || \"/\"}\r\n            active={makeStr(to.reduce((acc: boolean, _: any) => (acc || false), false))}\r\n          >\r\n            <i style={{ fontSize: \"1.6em\", padding: \"0 .3em\" }} className={icon}></i>\r\n            <div className={\"txt-center hide-mobile \" + collapsedHidden}>\r\n              {name}\r\n            </div>\r\n            <div style={{ height: \"2px\" }}></div>\r\n            <div style={{ width: \"100%\", height: \"2px\" }} ><Line /></div>\r\n          </MyNavLink>)\r\n      })\r\n      }\r\n    </LeftNav>\r\n  </div>\r\n  )\r\n};\r\n\r\nconst Line = styled.hr`transform: scaleX(0);`;\r\nconst border = keyframes`from { transform: scaleX(0); } to { transform: scaleX(1);}`;\r\n\r\nconst MyNavLink = styled(NavLink) <{ active: string; collapsed: boolean }>`\r\n  display: grid;\r\n  text-decoration: none;\r\n  place-items: center;\r\n  color: ${primaryTxtColor};\r\n  font-size: 1.35em;\r\n  cursor: pointer;\r\n  padding: .8em .4em;\r\n\r\n  @media(max-width: ${mobileWidth}){\r\n    border-left: 0 !important;\r\n    grid-template-columns: 1fr;\r\n    padding-left: .3em;\r\n  }\r\n\r\n  @media(min-width: ${mobileWidth}){\r\n    &:hover ${Line} {\r\n      color: ${primaryColor};\r\n      animation : ${border} 300ms ease-out;\r\n      transform: scaleX(1);\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nconst LeftNav = styled.div<{ background: string; collapsed: boolean }>`\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  font-size: .8em;\r\n  display: grid;\r\n  padding: .3em;\r\n  position: fixed;\r\n  z-index: 100;\r\n  left: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  color: ${primaryColor};\r\n  ${({ collapsed }: any) => `width: ${collapsed ? '6em' : '17em'};`}\r\n  grid-template-rows: repeat(16, auto);\r\n  align-items: center;\r\n  justify-items: stretch;\r\n  transition: 100ms ease-out;\r\n  background-color: white;\r\n  background-image: url(${(props) => props.background});\r\n  background-attachment: fixed;\r\n  @media (max-width: ${mobileWidth}) {\r\n    height: 55px;\r\n    width: 100vw;\r\n    top: inherit;\r\n    bottom: 0;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n    grid-template-rows: 1fr;\r\n  }\r\n`;\r\n\r\nexport default Sidebar;","import { User } from \"../../model/domain/user\";\r\nimport Key from \"../../json/keys.json\";\r\nimport userStates from \"../../json/user-state.json\";\r\nimport { Enterprise } from \"../../model/domain/enterprise\";\r\ninterface UserActions {\r\n  type: ActionTypes;\r\n  user?: User;\r\n  enterprise?: Enterprise,\r\n  token?: string;\r\n  loading: boolean;\r\n  error: boolean;\r\n  userState: \"APPROVED\" | \"UNAUTH\" | \"ENTERPISE_SELECT\" | \"ENTERPISE_PENDING\";\r\n}\r\n\r\nconst intialState = {\r\n  user: {},\r\n  enterprise: {},\r\n  error: false,\r\n  loading: false,\r\n  userState: userStates.UNAUTH\r\n};\r\n\r\nexport enum ActionTypes {\r\n  LOGIN = \"LOGIN\",\r\n  AUTH = \"AUTH\",\r\n  LOGOUT = \"LOGOUT\",\r\n  SIGNUP = \"SIGNUP\",\r\n  ADD_ENTERPISE = \"ADD_ENTERPISE\",\r\n  PASSWORD_RESET = \"PASSWORD_RESET\",\r\n  FORGOT_PASSWORD = \"FORGOT_PASSWORD\",\r\n  GET_ENTERPRISE = \"GET_ENTERPRISE\",\r\n  USER_REQUEST_FAILED = \"USER_REQUEST_FAILED\",\r\n  USER_REQUEST_PENDING = \"USER_REQUEST_PENDING\",\r\n  USER_REQUEST_SUCCESS = \"USER_REQUEST_SUCCESS\",\r\n  RESET_ERROR = \"RESET_ERROR\"\r\n};\r\n\r\nconst calcUserState = (user: User | undefined) => {\r\n  if (!user || user === undefined||  user.apps === undefined) return userStates.UNAUTH;\r\n  else if (user.apps.enterpriseApp === \"onboardRequestRequired\")\r\n    return userStates.ENTERPISE_SELECT;\r\n  else if (user.apps.enterpriseApp === \"onboarding\")\r\n    return userStates.ENTERPISE_PENDING;\r\n  return userStates.APPROVED;\r\n};\r\n\r\nconst setLoggedIn = (flag: boolean)=> localStorage.setItem('LOGGED_IN', String(flag))\r\n\r\nexport default function rootReducer(\r\n  state = intialState,\r\n  action: UserActions\r\n): any {\r\n  switch (action.type) {\r\n    case ActionTypes.LOGOUT:\r\n      setLoggedIn(false)\r\n      localStorage.removeItem(Key.USER);\r\n      return { ...state, user: undefined, userState: userStates.UNAUTH , loading: false};\r\n\r\n    case ActionTypes.LOGIN:\r\n    case ActionTypes.SIGNUP:\r\n      const { user, token } = action;\r\n      setLoggedIn(true)\r\n      localStorage.setItem(Key.USER, token || \"\");\r\n      return { ...state, user, userState: calcUserState(user), loading: false };\r\n\r\n    case ActionTypes.AUTH:\r\n      setLoggedIn(true)\r\n      return { ...state, user: action.user, userState: calcUserState(action.user), loading: false };\r\n\r\n    case ActionTypes.ADD_ENTERPISE:\r\n      return { ...state, userState: userStates.ENTERPISE_PENDING };\r\n    \r\n      case ActionTypes.GET_ENTERPRISE:\r\n        return { ...state, enterprise: action.enterprise };\r\n      \r\n    case ActionTypes.USER_REQUEST_PENDING:\r\n      return { ...state, loading: true, error: false };\r\n\r\n    case ActionTypes.USER_REQUEST_FAILED:\r\n      return { ...state, error: true, loading: false };\r\n\r\n    case ActionTypes.USER_REQUEST_SUCCESS:\r\n      return { ...state, loading: false };\r\n\r\n    case ActionTypes.RESET_ERROR:\r\n      return { ...state, error: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","\r\nimport Key from '../json/keys.json'\r\n\r\nfunction header() {\r\n    return { \"Content-Type\": \"application/json\" };\r\n  }\r\n  \r\n  function authHeader() {\r\n    let authtoken = localStorage.getItem(Key.USER) || \"\";\r\n    return { \"Content-Type\": \"application/json\", authtoken };\r\n  }\r\n  \r\n  \r\n  function authUploadHeader() {\r\n    let authtoken = localStorage.getItem(Key.USER) || \"\";\r\n    return {  'content-type': 'multipart/form-data', token: authtoken };\r\n  }\r\n  \r\n  export { header , authHeader, authUploadHeader };","import { authHeader , header, authUploadHeader } from './header';\r\nconst delay = (f: any) => new Promise(resolve => setTimeout(resolve, f));\r\n\r\nconst DELAY = 800; \r\n\r\nconst delayedResponse = async (response: Response) => {\r\n  await delay(DELAY)\r\n  return response.json()\r\n};\r\n\r\nconst response = (res: Response) => res.json()\r\n\r\nfunction post(url: string, body: object, useDelay = true) {\r\n  return fetch(url, { method: 'POST', headers: header(), body: JSON.stringify(body) })\r\n    .then(useDelay? delayedResponse: response);\r\n}\r\n\r\nfunction get(url: string, useDelay = true) {\r\n  return fetch(url, { method: 'GET', headers: header() })\r\n  .then(useDelay? delayedResponse: response);\r\n}\r\n\r\nfunction authGet(url: string, useDelay = true){\r\n  return fetch(url, { method: 'GET', headers: authHeader() })\r\n  .then(useDelay? delayedResponse: response);\r\n}\r\n\r\nfunction authCustom(url: string, header: any, useDelay = true){\r\n  return fetch(url, { method: 'GET', headers: header} )\r\n  .then(useDelay? delayedResponse: response);\r\n}\r\n\r\nfunction authDelete(url: string, params : string, useDelay = true){\r\n  return fetch(`${url}/${params}`, { method: 'DELETE', headers: authHeader()} )\r\n  .then(useDelay? delayedResponse: response);\r\n}\r\n\r\nfunction customPost(url: string, header: any, body: object, useDelay = true) {\r\n  return fetch(url, { method: 'POST', headers: {\"Content-Type\": \"application/json\", ...header} , body: JSON.stringify(body) })\r\n  .then(useDelay? delayedResponse: response);\r\n}\r\n\r\nfunction authPost(url : string, body : any, useDelay = true) {\r\n  return fetch(url, { method: 'POST', headers: authHeader(), body: JSON.stringify(body) })\r\n  .then(useDelay? delayedResponse: response);\r\n}\r\n\r\nfunction authPut(url : string, body : any, useDelay = true) {\r\n  return fetch(url, { method: 'PUT', headers: authHeader(), body: JSON.stringify(body) })\r\n  .then(response);\r\n}\r\n\r\nfunction authGetQuery(url: string, query : string){\r\n  return fetch(`${url}/?${query}`, { method: 'GET', headers: authHeader() })\r\n    .then((response : Response) => response.json());\r\n}\r\n\r\nfunction authGetParams(url: string, param : string){\r\n  return fetch(`${url}/${param}`, { method: 'GET', headers: authHeader() })\r\n    .then((response : Response) => response.json());\r\n}\r\n\r\nfunction authUpload(url : string, file : any) {\r\n  return fetch(url, { method: 'POST', body: file })\r\n  .then((response : Response) => response.json());\r\n}\r\n\r\n\r\nexport { get, authGet, post, authPost, authPut, customPost, authCustom, authGetParams, authGetQuery, authUpload, authDelete };","import { post, authGet, authPost, customPost } from './request';\r\nimport { API  } from '../config'\r\nimport { Announcement } from '../model/domain/announcements';\r\nimport { Garage, GarageOccupancyTable } from '../model/domain/garage';\r\nimport { FlatValue, TimeSeries } from '../model/domain/metrics';\r\n\r\n\r\nconst route = (route : string )=> API + route;\r\n\r\n //User\r\n const auth = ()=> authGet(route(\"/v1/users/me\"), false);\r\n const getUser = auth;\r\n\r\n //Password Forget\r\n const forgotPassword = (props: any) => post(route(\"/users/password/forgot\"), props);\r\n const confirmEmail = (props: any) => post(route(\"/users/password/verify-forgot\"), props);\r\n const resetPassword = (header: any, props: any) => customPost( route(\"/users/password/change\"), header, props);\r\n\r\n const login = (props : any)=> post(route(\"/v1/login\"), props);\r\n const signup = (props: any)=> authPost(route(\"/v1/signup\"), props); \r\n \r\n//Enterpises\r\nconst selectEnterpise = (enterpriseId: string, userId: string)=> authPost(route(`/v1/enterprises/${enterpriseId}/users/${userId}/onboard/request`), {role: \"member\"}); \r\nconst getEnterprises = ()=> authGet(route(\"/v1/enterprises\"), false);\r\nconst getEnterpriseByUserId = (userId : string)=> authGet(route(`/v1/enterprises/search/by-user?userId=${userId}`), false);\r\nconst getEnterpriseUsers = (eId : string)=> authGet(route(`/v1/enterprises/${eId}/users`));\r\nconst removeEnterpriseUser = (eid: string, userId : string)=> authPost(route(`/v1/enterprises/${eid}/users/${userId}/remove`),{});\r\nconst rejectEnterpriseUser = (eid: string, userId : string)=> authPost(route(`/v1/enterprises/${eid}/users/${userId}/onboard/reject`),{});\r\nconst acceptEnterpriseUser = (eid: string, userId : string)=> authPost(route(`/v1/enterprises/${eid}/users/${userId}/onboard/approve`), {});\r\n\r\n //Metrics\r\n const getTimeSeries = (eId: string, props:  any)=> authGet(route(`/v1/enterprises/${eId}/metrics/timeSeries?timeSeriesQuery=`+ JSON.stringify(props)));\r\n const getTimeSeriesMetricDescriptor = (eId: string, metricType:  string)=> authGet(route(`/v1/enterprises/${eId}/metrics/timeSeriesMetricDescriptors/${metricType}`));\r\n\r\n \r\n //Garages\r\n const getGarages = (eid: string)=> authGet(route(`/v1/enterprises/${eid}/garages`));\r\n const addGarage = (eid : string, garage: Garage)=> authPost(route(`/v1/enterprises/${eid}/garages`), garage);\r\n const editGarage = (eid : string, garage: Garage)=> authPost(route(`/v1/enterprises/${eid}/garages/${garage.id}/edit`), garage);\r\n\r\n //Occupancy Table\r\n const getOccupancyTables = (eId: string)=> authGet(route(`/v1/enterprises/${eId}/garageOccupancyTables`));\r\n const getOccupancyTableById = (eId: string, tId: string)=> authGet(route(`/v1/enterprises/${eId}/garageOccupancyTables/${tId}`), false);\r\n const addOccupancyTable = (eId: string, props: GarageOccupancyTable)=> authPost(route(`/v1/enterprises/${eId}/garageOccupancyTables`), props);\r\n const removeOccupancyTable = (eId: string,tId: string)=> authPost(route(`/v1/enterprises/${eId}/garageOccupancyTables/${tId}/remove`), {});\r\n const editOccupancyTable = (eId: string,tId: string, table: GarageOccupancyTable)=> authPost(route(`/v1/enterprises/${eId}/garageOccupancyTables/${tId}/edit`), table)\r\n\r\n //announcement\r\nconst getAnnoucements = (eid: string) => authGet(route(`/v1/enterprises/${eid}/announcements`));\r\nconst addAnnoucement = (eid: string, props : Announcement) => authPost(route(`/v1/enterprises/${eid}/announcements`), props);\r\nconst deleteAnnoucement = (eid : string, aid : string) => authPost(route(`/v1/enterprises/${eid}/announcements/${aid}/remove`), {});\r\nconst editAnnoucement = (eid : string, aid : string, props : any) => authPost(route(`/v1/enterprises/${eid}/announcements/${aid}/edit`), props);\r\n\r\n//Widgets\r\nconst getWidgets = (eId : string)=>authGet(route(`/v1/enterprises/${eId}/dashboards`), true);\r\nconst editWidgets = (eId : string, dId: string, widgets: any)=>authPost(route(`/v1/enterprises/${eId}/dashboards/${dId}/edit`), widgets);\r\nconst getScoreCardOptions = (eId : string, resource = undefined)=> authGet(route(`/v1/enterprises/${eId}/metrics/flatValueMetricDescriptors/${resource? `search/by-resourceType?resourceType=${resource}`: \"\"}`), false);\r\nconst getFlatValue = (eId: string, metrics: FlatValue.Query)=>authGet(route(`/v1/enterprises/${eId}/metrics/flatValue?flatValueQuery=` + JSON.stringify(metrics)), false)\r\nconst getFlatValueMetricDes = (eId: string, metrics: FlatValue.MetricDescriptor)=>authGet(route(`/v1/enterprises/${eId}/metrics/flatValueMetricDescriptors/` + metrics), false)\r\nconst downloadCSv = (eId : string, download: string, ts: string)=> authPost(route(`/v1/enterprises/${eId}/metrics/csv-export/${download}?${ts}`), {},false);\r\n\r\nexport default {\r\n  getGarages, getTimeSeries, addGarage, editGarage,\r\n  auth, getUser, login, signup, getTimeSeriesMetricDescriptor,\r\n  forgotPassword,confirmEmail, resetPassword, \r\n  selectEnterpise, getEnterprises, getEnterpriseByUserId, getEnterpriseUsers,\r\n  removeEnterpriseUser, rejectEnterpriseUser, acceptEnterpriseUser,\r\n  getAnnoucements, addAnnoucement, deleteAnnoucement, editAnnoucement,\r\n  getWidgets, editWidgets, getScoreCardOptions,\r\n  getFlatValue,  getFlatValueMetricDes,\r\n  getOccupancyTables, addOccupancyTable, removeOccupancyTable, editOccupancyTable, getOccupancyTableById,\r\n  downloadCSv\r\n }","\r\nimport React from 'react';\r\nimport { Tooltip } from \"antd\";\r\nconst LIMIT = 20;\r\n\r\nexport const overflowTxt = (txt: string) => `${txt?.substring(0, LIMIT)}${txt?.length > LIMIT ? '...' : ''}`;\r\n\r\nexport const overflow = (txt: string, limit = LIMIT) =>{\r\nif(txt?.length <= limit) return txt;\r\nreturn(\r\n<Tooltip title={txt}>\r\n  <span className=\"cursor capitalize\">\r\n      { `${txt?.substring(0, limit)}${txt?.length > limit ? '...' : ''}`}\r\n </span>\r\n</Tooltip>)\r\n}","import * as Sentry from '@sentry/browser';\r\n\r\nexport default {\r\n    log: (error: any) => {\r\n        console.log(error)\r\n        Sentry.captureException(error)\r\n    }\r\n}","import { ActionTypes } from '../reducer/user';\r\nimport api from '../../api';\r\nimport { Notification } from '../../style';\r\nimport { User } from '../../model/domain/user';\r\nimport { overflow } from '../../utils/text';\r\nimport logger from '../../utils/logger';\r\nimport Key from \"../../json/keys.json\";\r\nimport { Dispatch } from 'react';\r\n\r\nexport const asyncActions = async (apiCall: () => Promise<any>, dispatch: any, showError = false) => {\r\n    try {\r\n        dispatch({ type: ActionTypes.USER_REQUEST_PENDING });\r\n        let payload = await apiCall();\r\n        if (!payload || !payload.success)\r\n            throw new Error(payload.message || \"Error\");\r\n\r\n        dispatch({ type: ActionTypes.USER_REQUEST_SUCCESS })\r\n        return await payload;\r\n    } catch (e) {\r\n        logger.log(e)\r\n        if (showError) {\r\n            Notification.error({ title: \"Error\", message: String(e?.message || e) });\r\n        }\r\n        dispatch({ type: ActionTypes.USER_REQUEST_FAILED })\r\n    }\r\n}\r\n\r\nconst formatUser = (user: User) => ({ ...user, name: overflow(user.name) });\r\nconst isLoggedIn = () =>  Boolean(localStorage.getItem(Key.USER));\r\n\r\nexport const auth = () => {\r\n    return async (dispatch: any) => {\r\n        if (isLoggedIn()) {\r\n            const payload = (await asyncActions(() => api.auth(), dispatch));\r\n            if (payload && payload.success) {\r\n                console.log(payload)\r\n                await getEnterprise(payload.user, dispatch)\r\n                dispatch({ type: ActionTypes.AUTH, user: formatUser(payload.user), token: payload.authToken });           \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst getEnterprise = async (user: User, dispatch: any) => {\r\n    if (user?.apps?.enterpriseApp === 'enabled') {\r\n        const { id } = user;\r\n        const enterprisePayload = (await asyncActions(() => api.getEnterpriseByUserId(id), dispatch));\r\n        if (enterprisePayload?.success)\r\n            await dispatch({ type: ActionTypes.GET_ENTERPRISE, enterprise: enterprisePayload.enterprise });\r\n    }\r\n}\r\n\r\nexport const login = (props: any) => {\r\n    return async (dispatch: any) => {\r\n        const payload = await asyncActions(() => api.login(props), dispatch, true);\r\n        if (payload && payload.success) {\r\n           localStorage.setItem(Key.USER, payload.authToken)           \r\n           dispatch(auth())\r\n        }\r\n    }\r\n}\r\n\r\nexport const signup = (props: any) => {\r\n    return async (dispatch: Dispatch<any>) => {\r\n        const payload = await asyncActions(async () => await api.signup(props), dispatch, true);\r\n\r\n        if (payload && payload.success) {\r\n            await getEnterprise(payload.user, dispatch)\r\n            dispatch({ type: ActionTypes.SIGNUP, user: formatUser(payload.user), token: payload.authToken })           \r\n        }\r\n    }\r\n}\r\n\r\nexport const addEnterprise = (enterpriseId: string, userId: string) => {\r\n    return async (dispatch: any) => {\r\n        const payload = (await asyncActions(() => api.selectEnterpise(enterpriseId, userId), dispatch, true));\r\n        if (payload && payload.success) {\r\n            dispatch({ type: ActionTypes.ADD_ENTERPISE })\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch: Dispatch<{type: ActionTypes}>) => dispatch({ type: ActionTypes.LOGOUT });","const intialState = {\r\n    garages : []\r\n}\r\n\r\nexport default function rootReducer(state = intialState, action : any) : any{\r\n    switch( action.type){\r\n        case 'GET_GARAGES':\r\n            return {\r\n                ...intialState, garages : [action.garages]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    };\r\n}","import { Announcement } from \"../../model/domain/announcements\";\r\nimport announcement from \"../../pages/announcement\";\r\n\r\ninterface State {\r\n    announcements: Announcement[];\r\n    loading: boolean;\r\n    error: boolean;\r\n}\r\n\r\ninterface Action {\r\n    type: string;\r\n    payload: {\r\n        announcement?: Announcement;\r\n        announcements?: Announcement[];\r\n        index? : number;\r\n    };\r\n    loadingAction: boolean;\r\n    loadingAnnouncements?: boolean;\r\n    error?: boolean;\r\n}\r\n\r\nconst intialState = {\r\n    error: false,\r\n    loadingAnnouncements: false,\r\n    loadingAction: false,\r\n    announcements: [] as Announcement[],\r\n};\r\n\r\nexport const actions = {\r\n    ACTION_ANNOUNCEMENT_PENDING: \" ACTION_ANNOUNCEMENT_PENDING\", //Includes Edit, Add, Delete\r\n    ACTION_ANNOUNCEMENT_ERROR: \"ACTION_ANNOUNCEMENT_ERROR\", //Includes Edit, Add, Delete\r\n\r\n    EDIT_ANNOUNCEMENT_SUCCESS: \"EDIT_ANNOUNCEMENT_SUCCESS\",\r\n    ADD_ANNOUNCEMENT_SUCCESS: \"ADD_ANNOUNCEMENT_SUCCESS\",\r\n    DELETE_ANNOUNCEMENT_SUCCESS: \"DELETE_ANNOUNCEMENT_SUCCESS\",\r\n\r\n    GET_ANNOUNCEMENTS_PENDING: \"GET_ANNOUNCEMENTS_PENDING\",\r\n    GET_ANNOUNCEMENTS_SUCCESS: \"GET_ANNOUNCEMENTS_SUCCESS\",\r\n    GET_ANNOUNCEMENTS_ERROR: \"GET_ANNOUNCEMENTS_ERROR\",\r\n};\r\n\r\nexport default function rootReducer(state = intialState, action: Action): any {\r\n\r\n    const { payload, type } = action;\r\n\r\n    switch (type) {\r\n        case actions.ACTION_ANNOUNCEMENT_PENDING:\r\n            return { ...state, loadingAction: true };\r\n\r\n        case actions.GET_ANNOUNCEMENTS_PENDING:\r\n            return { ...state, loadingAnnouncements: true };\r\n\r\n        case actions.ADD_ANNOUNCEMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loadingAction: false,\r\n                announcements: [...state.announcements, payload.announcement],\r\n            };\r\n\r\n        case actions.DELETE_ANNOUNCEMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loadingAction: false,\r\n                announcements: state.announcements.filter(\r\n                    (item: Announcement) => item !== payload.announcement\r\n                ),\r\n            };\r\n\r\n        case actions.EDIT_ANNOUNCEMENT_SUCCESS:\r\n            const { id: idToFind } = payload.announcement as Announcement;\r\n            const tempAnnouncement = [ ...state.announcements ];\r\n            const index = state.announcements.reduce((acc, cur, i)=> cur.id === idToFind? i : acc, -1)\r\n            tempAnnouncement[index as number]  = payload.announcement as Announcement\r\n            return {\r\n                ...state,\r\n                loadingAction: false,\r\n                announcements: tempAnnouncement\r\n            };\r\n\r\n        case actions.GET_ANNOUNCEMENTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loadingAnnouncements: false,\r\n                announcements: payload?.announcements || []\r\n            };\r\n\r\n        case actions.GET_ANNOUNCEMENTS_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loadingAnnouncements: false,\r\n                announcements: [],\r\n            };\r\n\r\n\r\n        case actions.ACTION_ANNOUNCEMENT_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loadingAction: false,\r\n                loadingAnnouncements: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport garage from './garage'\r\nimport user from './user'\r\nimport announcement from './announcement'\r\n\r\nexport default combineReducers({\r\n  garage,\r\n  user,\r\n  announcement\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport  rootReducer  from './reducer';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst logger = (store : any) =>( next : any) => (action : any) => {\r\n   console.group(action.type)\r\n   console.info('dispatching', action)\r\n   let result = next(action)\r\n   console.log('next state', store.getState())\r\n   console.groupEnd()\r\n   return result\r\n }\r\n\r\n \r\nconst ReduxThunk = require('redux-thunk').default\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n   \r\n applyMiddleware(ReduxThunk, logger)));\r\n\r\nexport default store;","import store from '../store';\r\nimport mo, { Moment as MomentType} from 'moment-timezone';\r\n\r\nexport const moment = mo;\r\n\r\nlet currentTz = getTimezoneFromStore();\r\nlet tzChangeListeners : any[] = [];\r\n\r\nstore.subscribe(() => {\r\n  const tz = getTimezoneFromStore();\r\n  if (currentTz !== tz) {\r\n    currentTz = tz;\r\n    moment.tz.setDefault(tz);\r\n    tzChangeListeners.forEach(l => l(currentTz));\r\n  }\r\n});\r\n\r\nexport const defaultInterval = () => {\r\n  const endTime = moment();\r\n  const startTime = endTime.clone()\r\n    .set('hours', 0)\r\n    .set('minute', 0)\r\n    .set('second', 0)\r\n    .set('millisecond', 0);\r\n  return { endTime: endTime.toISOString(), startTime: startTime.toISOString() };\r\n};\r\n\r\nexport const currentMonth = (month = 0) => {\r\n  const endTime = moment();\r\n  const startTime = endTime.clone()\r\n    .set('month', endTime.month() + month)\r\n    .set('date', 1)\r\n    .set('hours', 0)\r\n    .set('minute', 0)\r\n    .set('second', 0)\r\n    .set('millisecond', 0);\r\n  return { endTime: endTime.toISOString(), startTime: startTime.toISOString() };\r\n};\r\n\r\n\r\n\r\nexport const yearToDate = () => {\r\n  const endTime = moment();\r\n  const startTime = endTime.clone()\r\n    .set('month', 0)\r\n    .set('date', 1)\r\n    .set('hours', 0)\r\n    .set('minute', 0)\r\n    .set('second', 0)\r\n    .set('millisecond', 0);\r\n  return { endTime: endTime.toISOString(), startTime: startTime.toISOString() };\r\n};\r\n\r\nexport const getInterval = (days: number)=>{\r\n  const endTime = moment();\r\n  const startTime = endTime.clone().add(-days, 'day');\r\n  return { endTime : endTime.toISOString(), startTime : startTime.toISOString() }\r\n}\r\n\r\nfunction getTimezoneFromStore() {\r\n  //NOTE: since number of files reference timezone before even \r\n  //timezone of the enterprise is loaded, and never update themselves\r\n  //e.g. filter-options.ts, this was necessary.\r\n  //TODO: fix those files later and have this back to utc\r\n  return store.getState().user?.enterprise?.tz || 'America/Los_Angeles';\r\n}\r\n\r\ninterface TimezoneChangeListener {\r\n  (tz: string): void;\r\n}\r\nexport function addTimezoneChangeListener(listener: TimezoneChangeListener) {\r\n  const exists = !!tzChangeListeners.find(l => l === listener);\r\n  if (!exists) {\r\n    tzChangeListeners.push(listener);\r\n  }\r\n}\r\nexport function removeTimezoneChangeListener(listener: TimezoneChangeListener) {\r\n  tzChangeListeners = tzChangeListeners.filter(l => l === listener);\r\n}\r\n\r\nexport function getTimezone() {\r\n  return currentTz;\r\n}\r\n\r\nexport const NEW_FORMAT_DATETIME = 'MMM DD, YYYY @ hh:mm A';\r\nexport const FORMAT_DATETIME = 'MMM DD, YYYY @ hh:mm A';\r\nexport const FORMAT_TIME = 'hh:mm A';\r\nexport const FORMAT_DATETIME_2 = 'ddd MMM DD, YYYY hh:mm A';\r\n\r\nmoment.tz.setDefault(currentTz);\r\n\r\nexport type Moment = MomentType;","\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Avatar, Text as Txt , Header} from '.'\r\nimport { mobileWidth,  gradient, disabledTxtColor } from '../config';\r\nimport { useLocation } from \"react-router\";\r\nimport logo from '../assets/parkstash_logo.svg';\r\nimport { Popover, Menu, Badge } from 'antd';\r\nimport Grid from './grid';\r\nimport { logout } from '../store/actions/user';\r\nimport { useDispatch } from 'react-redux';\r\nimport { moment } from '../utils/time'\r\nconst TopNavBar = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation().pathname;\r\n  return (\r\n    <MiniNav>\r\n      <Text className=\"capitalize bold txt-md txt-left\" style={{ minWidth: \"100px\", width: \"100%\" }}>\r\n        {location === \"/\" || location === \"/overview\" ? \"Overview\" : location.replace(\"/\", \"\")}\r\n      </Text>\r\n    \r\n      <Popover\r\n        placement=\"bottomRight\"\r\n        content={\r\n          <div style={{ zIndex: 1000, maxWidth: '300px'}}>\r\n            <Grid customCols='1fr auto' placeItems='start stretch'>\r\n              <Header bold padding='0 0 .5em 0' textAlign='left'>Abnormality</Header>\r\n              <i className='fas fa-bell txt-md'></i>\r\n            </Grid>\r\n            {abnormalities.map(({ garage, date }, i) => {\r\n              const style = i < (abnormalities.length - 1)? { \r\n                paddingBottom: '1em',  \r\n                marginBottom: '.5em', \r\n                borderBottom: \"1px solid \"+ disabledTxtColor\r\n              } : {};\r\n            return  (      \r\n                <Grid customCols='auto 1fr' placeItems='start stretch' style={style}>\r\n                  <i className='fas fa-car txt-md' style={{placeSelf: \"center\"}}></i>\r\n                  <Header bold textAlign='left' size={4}>{garage}</Header>\r\n                  <Txt style={{gridColumn: \"1/-1\"}} textAlign='right' >\r\n                    Abnormality Detected at 50% Occupancy.\r\n                  </Txt>\r\n                  <Txt style={{gridColumn: \"1/-1\"}} color={disabledTxtColor} textAlign='right'>\r\n                    {date.format('hh:mm A')}\r\n                  </Txt>\r\n                </Grid>\r\n             )})}\r\n          </div>\r\n        }\r\n        trigger=\"hover\"\r\n      >\r\n        <Badge count={3}>\r\n          <i className='fa fa-bell txt-shadow pointer txt-lg'></i>\r\n        </Badge>\r\n      </Popover>\r\n\r\n      <Popover\r\n        placement=\"bottomRight\"\r\n        content={\r\n          <Menu style={{ zIndex: 1000 }}>\r\n            <Menu.Item key=\"0\" className=\"noselect\">\r\n              <Grid customCols='auto 1fr' onClick={() => dispatch(logout())}>\r\n                <i className='fas fa-sign-in-alt txt-md'></i>\r\n                <span>Logout</span>\r\n              </Grid>\r\n            </Menu.Item>\r\n          </Menu>\r\n        }\r\n        trigger=\"hover\"\r\n      >\r\n        <div>\r\n          <Avatar className='shadow' style={{ background: \"white\", borderRadius: \"50%\", margin: \"0 1em\" }} url={logo} />\r\n        </div>\r\n      </Popover>\r\n    </MiniNav>)\r\n}\r\n\r\nconst abnormalities = [{\r\n  garage: \"North 10th Street Garage\",\r\n  date: moment(),\r\n}, {\r\n  garage: \"North 10th Street Garage\",\r\n  date: moment(),\r\n},\r\n{\r\n  garage: \"North 10th Street Garage\",\r\n  date: moment(),\r\n}]\r\n\r\n\r\nconst Text = styled.div`\r\n    padding-left: 9.5em;\r\n    @media(max-width: ${mobileWidth}){\r\n       padding-left: 0;\r\n       font-size: 1.2em;\r\n    } \r\n  `;\r\n\r\nconst MiniNav = styled.div`\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  position: fixed;\r\n  font-size: 15px;\r\n  top: 0;\r\n  right : 0;\r\n  left: 0;\r\n  padding: 0 1.5em 0 0;\r\n  z-index: 9;\r\n  width: 100vw;\r\n  height: 4em; \r\n  background: ${gradient};  \r\n  color: white;\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 1fr auto auto;\r\n  grid-template-rows: 1fr;\r\n  place-items: center end;\r\n    @media(max-width: ${mobileWidth}){\r\n      top : inherit;\r\n      padding-left: 0\r\n      grid-gap: .5em;\r\n    } `;\r\n\r\nexport default TopNavBar;","import { addTimezoneChangeListener, removeTimezoneChangeListener, getTimezone  } from '../utils/time';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useTimezone = () => {\r\n  const [tz, setTz] = useState(getTimezone());\r\n\r\n  useEffect(() => {\r\n    const listener = (newTz: string) => {\r\n      setTz(newTz);\r\n    }\r\n\r\n    addTimezoneChangeListener(listener);\r\n\r\n    return () => removeTimezoneChangeListener(listener);\r\n  },[]);\r\n\r\n  return tz;\r\n}\r\n\r\nexport default useTimezone;","import React, { useEffect } from 'react';\r\nimport Sidebar from './style/sidebar';\r\nimport styled from 'styled-components';\r\nimport { mobileWidth, gradient, disabledTxtColor } from './config';\r\nimport TopNavBar from './style/topnav';\r\nimport useTimezone from './hooks/tz';\r\nimport { Grid, Text } from './style';\r\nimport { moment } from './utils/time'\r\n\r\ninterface LayoutContainer {\r\n    children : JSX.Element | JSX.Element[];\r\n    style?: React.CSSProperties;\r\n    sidebar? : boolean;\r\n    background? : string;\r\n} \r\ninterface Layout {\r\n    className? : string;\r\n    children : JSX.Element | JSX.Element[];\r\n    maxWidth? : number | string;\r\n    style? : React.CSSProperties\r\n}\r\n\r\ninterface Top extends Layout {\r\n    customCols? : string;\r\n    noBackground? : boolean;\r\n}\r\n\r\ninterface Bottom extends Layout {\r\n    shiftUp? : boolean;\r\n}\r\n\r\nconst Layout = ({ children, style, sidebar, background }: LayoutContainer) => {\r\n    const tz = useTimezone();\r\n    useEffect(() =>\r\n        window.scrollTo(0, 0), [])\r\n    return (<>\r\n        <div>\r\n            {sidebar && <>\r\n                <Sidebar />\r\n                <TopNavBar />\r\n            </>}\r\n        </div>\r\n        <Wrapper background={background} style={style} sidebar={sidebar}>\r\n            <div\r\n                className=\"left-on-desktop\"\r\n                style={{ width: '100%', height: '100%' }}\r\n            >\r\n                {children}\r\n            </div>\r\n            <Grid customCols='auto 1fr auto' placeSelf=\"end stretch\" padding='0 0 .75em 0'>\r\n                <div></div>\r\n                <Text color={disabledTxtColor} style={{ placeSelf: \"end center\" }} className=\"left-on-desktop\">\r\n                    © 2018-{moment().year().toString()} ParkStash, All Rights Reserved\r\n                </Text>\r\n                <div className=\"capitalize txt-xsm\" style={{ marginRight: \"1.5em\" }}>Timezone: {tz}</div>\r\n            </Grid>\r\n        </Wrapper>\r\n    </>\r\n    );\r\n};\r\n\r\nLayout.Top = ({ className, children, customCols = \"auto 1fr auto\", noBackground = false, maxWidth = '1500px', style = {} }: Top) => {\r\n    style = { ...style, maxWidth, minWidth: '85%' };\r\n    return (\r\n        <div className={className} style={{ paddingBottom: '10em', background: noBackground ? '' : gradient, width: '100%' }}>\r\n            <Grid mobileLayout={false} customCols={customCols} style={style} margin='auto'>\r\n                {children}\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nLayout.Bottom = ({ className, shiftUp = true, children, maxWidth = '1500px', style = {} }: Bottom) => {\r\n    return (\r\n        <Grid\r\n            margin='auto'\r\n            className={className}\r\n            placeItems=\"start stretch\"\r\n            style={{ ...style, marginTop: shiftUp ? '-10em' : '1em', maxWidth, minWidth: \"85%\", }}\r\n        >\r\n            {children}\r\n        </Grid>\r\n    )\r\n};\r\n\r\nconst Wrapper = styled.div<{ background?: string, sidebar?: boolean }>`\r\n${(props) => `\r\n    padding-top: ${props.sidebar ? '4em' : 0};\r\n    background: ${props.background ? `linear-gradient(rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.95)), url(${props.background}), white` : '#F0F3F4'};`}\r\n    margin: auto;\r\n    min-height: 100vh;\r\n    display: grid;\r\n    place-items: start stretch;\r\n    transition: all 0.5s ease-out;\r\n    background-attachment: fixed;\r\n    background-repeat: no-repeat;\r\n    background-position:  center;\r\n    background-size: cover;\r\n    grid-template-rows: 1fr auto;\r\n    @media(max-width: ${mobileWidth}){ \r\n        width: 100vw;\r\n        padding-bottom: 5em;\r\n    }`;\r\n\r\nexport default Layout;","import { Notification } from \"../style\";\r\nimport logger from \"./logger\";\r\n\r\n\r\nexport const asyncHandler = async ({\r\n  apiCall,\r\n  successMessage,\r\n  errorMessage,\r\n  refresh = ()=>{}\r\n}: any) => {\r\n  try {\r\n    const res = await apiCall();\r\n    if (!res.success) throw new Error(res.message);\r\n    if (successMessage) {\r\n      Notification.success({ title: \"Succcess\", message: successMessage });\r\n    }\r\n    refresh()\r\n    return res;\r\n  } catch (e) {\r\n    if (errorMessage) {\r\n      Notification.error({ title: \"Error\", message: errorMessage });\r\n    }\r\n    logger.log(e)\r\n    return { success: false }\r\n  }\r\n};","import { useState, useEffect } from 'react';\r\nimport API from '../api'\r\nimport { Garage } from '../model/domain/garage';\r\nimport { asyncHandler } from \"../utils\";\r\n\r\nexport const useGarages = ({ eId } : any) => {\r\n  const [state, setter] = useState({\r\n    garages: [] as Garage[],\r\n    loading: false,\r\n    error: false,\r\n  });\r\n\r\n  const setState = (obj: any) => setter({ ...state, ...obj });\r\n\r\n  const getGarages = async (eId: string) => {\r\n    setState({ loading: true, error: false });\r\n    const { garages = [], success = false } = await asyncHandler({\r\n      apiCall: () => API.getGarages(eId),\r\n    });\r\n    setState({ loading: false, error: !success, garages });\r\n  };\r\n\r\n  const addGarage = async (garage: Garage) => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () => API.addGarage(eId, garage),\r\n      successMessage: \"Garage was Added\",\r\n      errorMessage: \"Garage was not Added\",\r\n    });\r\n    setState({ loading: false, error: res?.success || false });\r\n    getGarages(eId)\r\n  };\r\n\r\n  const editGarage = async (garage: Garage) => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () =>API.editGarage(eId, garage),\r\n      successMessage: \"Garage was Edited\",\r\n      errorMessage: \"Garage was not Edited\",\r\n    });\r\n    setState({ loading: false, error: res?.success || false });\r\n    getGarages(eId)\r\n  };\r\n\r\n\r\n  const refresh = () => getGarages(eId);\r\n\r\n  useEffect(() => {\r\n      getGarages(eId);\r\n  }, [eId]);\r\n\r\n  return {\r\n    ...state,\r\n    addGarage,\r\n    editGarage,\r\n    refresh\r\n  };\r\n};\r\n\r\nexport default useGarages;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Garage } from \"../../../model/domain/garage\";\r\nimport { Card, Header, Text, Grid, Badge } from \"../../../style\";\r\nimport { Progress, Tooltip } from \"antd\";\r\nimport { primaryColor, disabledTxtColor } from \"../../../config\";\r\nimport { moment } from '../../../utils/time';\r\n\r\nconst GarageCard = (props: Garage & any) => {\r\n  const { name, address, maxOccupancy, active, edit, style, occupancyUpdateSource, occupancy, getTableById, occupancyTableId, imageUrl, abnormality} = props;\r\n  const [table, setTable] = useState(\"\");\r\n  const occupancyPercent = Number((((occupancy?.count || 0) / maxOccupancy) * 100).toFixed(2));\r\n\r\n  useEffect(() => {\r\n    if (occupancyTableId)\r\n      getTableById(occupancyTableId)\r\n        .then((res: any) => {\r\n          if (res?.success)\r\n            setTable(res?.garageOccupancyTable?.title || \"\");\r\n        })\r\n  }, [])\r\n  return (\r\n    <Card shadow style={{maxWidth: \"80vw\", width: '800px', ...style}}>\r\n      <Grid customCols='auto 1fr' placeItems='start stretch'>\r\n        <Grid placeSelf='stretch' style={{borderRight: '2px solid ' + disabledTxtColor, paddingRight: '1em'}}>\r\n        {imageUrl && imageUrl[0]? \r\n        <img src={imageUrl[0]} style={{maxWidth: \"8em\"}}/> :\r\n          <i style={{fontSize: '9em', color: disabledTxtColor}} className='fas fa-parking'></i>\r\n        }\r\n        </Grid>\r\n        <Grid placeItems='stretch'>\r\n          <Grid gridGap='0' placeItems='stretch'>\r\n            <Header textAlign=\"left\">\r\n              <Grid customCols=\"auto auto 1fr auto\" placeSelf=\"end\" gridGap='0'>\r\n                <Text bold>{name} &nbsp;</Text>\r\n                <span className=\"noselect\">\r\n                  <i className=\"fa fa-edit pointer hoverr txt-sm\" onClick={edit}></i> &nbsp;\r\n                  <Tooltip title='Please contact us to delete a garage'>\r\n                    <i className=\"fa fa-trash pointer txt-sm\" style={{ color: \"gray\" }}></i> \r\n                  </Tooltip>&nbsp;\r\n            </span>\r\n                <div></div>\r\n                <Badge\r\n                  style={{ fontSize: \".65em\" }}\r\n                  disabled={!active}\r\n                >\r\n                  {active ? \"Active\" : \"Disabled\"}\r\n                </Badge>\r\n\r\n              </Grid>\r\n            </Header>\r\n\r\n            <Text color=\"gray\" textAlign=\"left\">\r\n              <i className=\"far fa-compass\" ></i> {address}\r\n            </Text>\r\n            {\r\n              table &&\r\n              <Text color=\"gray\" textAlign=\"left\">\r\n                <i className=\"fa fa-table\" ></i> {table}\r\n              </Text>\r\n            }\r\n          </Grid>\r\n\r\n          <Grid placeSelf=\"stretch\" cols=\"2\" placeItems=\"start\" gridGap=\".5em\">\r\n            <Progress\r\n              strokeWidth={15}\r\n              successPercent={0}\r\n              strokeColor={primaryColor}\r\n              percent={occupancyPercent}\r\n              format={() => <div className='bold'>{occupancyPercent}%</div>}\r\n              style={{\r\n                gridColumn: '1/-1',\r\n                width: \"100%\",\r\n                placeSelf: \"center stretch\",\r\n                paddingRight: '.5em'\r\n              }}\r\n            />\r\n            <Badge\r\n              inverted={occupancy?.count}\r\n              disabled={!occupancy?.count}\r\n              clasName={\"grid\"}\r\n            >\r\n                <Text bold color='inherit'>\r\n                  {occupancy?.count || \"N/A\"} \r\n                  <span style={{ fontSize: \"1.3em\" }}> / </span>\r\n                  {maxOccupancy}\r\n                </Text>\r\n            </Badge>\r\n\r\n     \r\n            <Badge disabled={!abnormality?.active}  style={{placeSelf :'center end'}}>\r\n                <i className='fa fa-bell'></i>&nbsp;\r\n                Abnormality{abnormality?.active? `: ${abnormality.percent * 100}%` : ''}\r\n            </Badge>\r\n\r\n          </Grid>\r\n          <Grid cols='2'>\r\n            <Text placeSelf=\"center start\" color={disabledTxtColor}>\r\n              &nbsp;{occupancyUpdateSource === 'integration' ? \"Automatic\" : \"Manual\"}\r\n            </Text>\r\n            {\r\n              occupancy?.updatedAt &&\r\n              <div style={{ color: \"grey\", fontSize: \".75em\", placeSelf: \"center end\" }}>\r\n                Last Updated: {moment(occupancy.updatedAt).toString().substring(4, 24)}\r\n              </div>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GarageCard;\r\n","import { useState  } from \"react\";\r\nimport logger from \"../utils/logger\";\r\n\r\ntype Cood = {\r\n    lat: number,\r\n    lng: number\r\n}\r\n\r\nexport const usePlaces = () => {\r\n    const origin = { lat: 32, lng: -92 };\r\n    const defaultSearch = {\r\n        found: false,\r\n        result: \"\",\r\n        resultLocation: origin,\r\n    }\r\n    const [ error, setError] = useState(true);\r\n    const [search, setSearch] = useState(defaultSearch);\r\n    const [ searchText, setSearchText] = useState(\"\");\r\n\r\n    const getAddress = (addr: string) => {\r\n        setError(true)\r\n        const KEY = `AIzaSyAeJmDi-yAmMJ2N9n7zHDjl8nUcXzDunPM`;\r\n        const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${addr}&key=${KEY}`;\r\n        if (addr && addr.length > 0)\r\n            fetch(url)\r\n                .then((res) => res.json())\r\n                .then((res) => {\r\n                    if (res.status === \"OK\" && res.results && res.results.length > 0) {\r\n                        const result = res.results[0].formatted_address;\r\n                        const resultLocation = {\r\n                            lat: res.results[0].geometry.location.lat,\r\n                            lng: res.results[0].geometry.location.lng,\r\n                        } as Cood;\r\n                        setSearch({ ...search, result, resultLocation, found: true });\r\n                    } else throw new Error();\r\n                })\r\n                .catch((e) => {\r\n                    logger.log(e)\r\n                    setSearch({ ...search, result: \"No Result\", found: false })\r\n                });\r\n        else setSearch({ ...search, result: \"\" });\r\n    };\r\n\r\n    const resetSearch = () => setSearch(defaultSearch);\r\n    const selectResult = (result : string)=>{\r\n        setSearchText(result);\r\n        setError(false)\r\n    }\r\n\r\n    return {\r\n        searchText,\r\n        search,\r\n        error,\r\n        selectResult,     \r\n        resetSearch,\r\n        getAddress,\r\n        setSearchText\r\n    };\r\n};\r\n\r\nexport default {\r\n    usePlaces\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { Input, Tooltip } from \"antd\";\r\nimport { Card, Button } from \"../../../style\";\r\nimport { usePlaces } from \"../../../hooks/places\";\r\n\r\nconst AnyReactComponent = ({ showText, className }: any) => (\r\n  <div>\r\n    <i\r\n      className={\"fa fa-map-marker txt-lg red \" + className}\r\n      aria-hidden=\"true\"\r\n    ></i>\r\n    {showText && (\r\n      <Card width=\"5em\" padding=\".4em\">\r\n        Click Me to Move\r\n      </Card>\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst SimpleMap = ({ forward, setGeo }: any) => {\r\n  const origin = { lat: 32, lng: -92 };\r\n  const {\r\n    searchText,\r\n    selectResult,\r\n    error,\r\n    search,\r\n    setSearchText,\r\n    resetSearch,\r\n    getAddress,\r\n  } = usePlaces();\r\n\r\n  const [state, setter] = useState({\r\n    location: origin,\r\n    pointerLocation: origin,\r\n    zoom: 17,\r\n    pointerMoved: false,\r\n  });\r\n  const setState = (obj: any) => setter({ ...state, ...obj });\r\n\r\n  const start = { gridColumn: 1, gridRowStart: 1 };\r\n  const selectResultLocation = (e: any) => {\r\n    e.preventDefault();\r\n    if (search.found) {\r\n      setState({\r\n        location: search.resultLocation,\r\n        pointerLocation: search.resultLocation,\r\n      });\r\n      selectResult(search.result);\r\n    }\r\n    resetSearch();\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"grid\",\r\n        height: \"50vh\",\r\n        width: \"100%\",\r\n        gridTemplateColumns: \"1fr\",\r\n      }}\r\n    >\r\n      <form\r\n        onSubmit={selectResultLocation}\r\n        style={{\r\n          ...start,\r\n          zIndex: 10,\r\n          marginTop: \".3em\",\r\n          width: \"100%\",\r\n          height: \"4em\",\r\n        }}\r\n      >\r\n        <Input\r\n          suffix={\r\n            <Tooltip title={\"Please enter the Full Address\"}>\r\n              <i className={`fa fa-${error ? 'times-circle red' : 'check green'}`} style={{ position: \"relative\" }}></i>\r\n            </Tooltip>\r\n          }\r\n          onChange={({ target }: any) => {\r\n            setSearchText(target.value);\r\n            setState({ pointerMoved: false });\r\n            getAddress(target.value);\r\n          }}\r\n          placeholder=\"Enter your Garage Address\"\r\n          value={searchText}\r\n          style={{ height: \"3em\", width: \"80%\", borderRadius: \"4em\" }}\r\n        />\r\n        {search.result.length > 0 && (\r\n          <Card\r\n            onClick={selectResultLocation}\r\n            className=\"pointer noselect\"\r\n            shadow\r\n            margin=\"0 .5em\"\r\n          >\r\n            {search.result}\r\n          </Card>\r\n        )}\r\n      </form>\r\n      <Button\r\n        shadow={state.pointerMoved && !error}\r\n        disabled={!state.pointerMoved || error}\r\n        onClick={() => {\r\n          setGeo({ ...state.pointerLocation, address: searchText });\r\n          forward();\r\n        }}\r\n        style={{\r\n          ...start,\r\n          zIndex: 10,\r\n          justifySelf: \"center\",\r\n          height: \"2.3em\",\r\n          position: \"relative\",\r\n          top: \"calc(100% - 4em)\",\r\n        }}\r\n      >\r\n        Next &nbsp;\r\n        <i className=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>\r\n      </Button>\r\n      <div style={{ ...start, justifySelf: \"stretch\" }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyB4z2lv6jvxicb7dsQ-K8fFxRcjt07YxQI\" }}\r\n          center={state.location}\r\n          defaultZoom={state.zoom}\r\n          onChange={({ zoom, center: location }: any) =>\r\n            setState({ zoom, location })\r\n          }\r\n          onClick={({ _, __, lat, lng }: any) =>\r\n            setState({ pointerLocation: { lat, lng }, pointerMoved: true })\r\n          }\r\n        >\r\n          <AnyReactComponent\r\n            className={!state.pointerMoved ? \"grow\" : \"\"}\r\n            lat={state.pointerLocation.lat}\r\n            lng={state.pointerLocation.lng}\r\n            showText={!state.pointerMoved}\r\n          />\r\n        </GoogleMapReact>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleMap;\r\n","import { Tooltip } from \"antd\";\r\nimport React from 'react';\r\n\r\nexport const Label = ({ label = 'placeholder' , icon = 'fa fa-info-circle'}) =>(\r\n<Tooltip title={label}>\r\n    <i className='fa fa-info-circle' style={{marginLeft: '7px'}}></i>\r\n</Tooltip>)\r\n\r\nexport default Label;","import React from 'react';\r\nimport { Grid, Text, Button } from '../../../style';\r\nimport * as  Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { Switch, InputNumber, Input, Select, Radio, DatePicker } from 'antd';\r\nimport { Tooltip } from 'antd';\r\nimport { Garage, GarageOccupancyTable } from '../../../model/domain/garage';\r\nimport Label from '../../../components/label';\r\n\r\nconst sources = {\r\n    integration: 'integration',\r\n    table: 'table'\r\n}\r\nconst defaultValue = {\r\n    name: \"\", \r\n    status: 'active', \r\n    maxOccupancy: 420, \r\n    occupancyTableId: null, \r\n    occupancyUpdateSource: 'table',\r\n    abnormality: {\r\n        active: false,\r\n        percent: 0\r\n    }\r\n};\r\n\r\nconst GarageInfoForm = (props: any) => {\r\n    const { loading, tables = [], garage } = props;\r\n\r\n    const { handleSubmit, handleChange, setFieldValue, values, handleBlur } = useFormik({\r\n        initialValues: (garage || defaultValue) as Garage,\r\n        onSubmit(values) {\r\n            props.submit(values);\r\n        },\r\n    })\r\n\r\n\r\n    const error = values.name.length < 6;\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n            className=\"shake\"\r\n            style={{\r\n                height: \"100%\",\r\n                display: \"grid\",\r\n                background: \"white\",\r\n                padding: \"1em 2em\",\r\n                width: \"100%\",\r\n                placeItems: \"center stretch\",\r\n                gridGap: \".4em\"\r\n            }}>\r\n\r\n            <div style={{ placeSelf: \"stretch\", display: \"grid\", placeItems: \"stretch\" }} >\r\n                <Text textAlign=\"left\" bold>Enter the Name of your Garage<span className=\"red\">*</span></Text>\r\n                <Input\r\n                    style={{ placeSelf: \"end\" }}\r\n                    type={'text'}\r\n                    name={'name'}\r\n                    onBlur={handleBlur}\r\n                    suffix={\r\n                        <Tooltip title={\"Garage must contain at least 6 characters\"}>\r\n                            <i className={`fa fa-${error ? 'times-circle red' : 'check green'}`} style={{ position: \"relative\" }}></i>\r\n                        </Tooltip>\r\n                    }\r\n                    value={values.name}\r\n                    onChange={handleChange}\r\n                    placeholder={\"Example: SJSU Garage 1\"} />\r\n            </div>\r\n\r\n            <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                <Text textAlign=\"left\" placeSelf=\"end start\" bold>\r\n                    Activate Garage\r\n                        <span className=\"red\">*</span>\r\n                        <Label label={'Activated garage can be used for parking'}/>\r\n                </Text>\r\n                <Switch\r\n                    checked={values.status === 'active'}\r\n                    style={{ placeSelf: \"end\" }}\r\n                    onChange={(checked: boolean) => setFieldValue(\"status\", checked? 'active': 'inactive')}\r\n                />\r\n            </Grid>\r\n\r\n            <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                <Text textAlign=\"left\" placeSelf=\"end start\" bold>\r\n                    Automate Garage \r\n                    <span className=\"red\">*</span>\r\n                    <Label label={'Automatic Garages needs to be integrated with the thirdparty APIs(Eg: Genetec)'}/>\r\n                </Text>\r\n                <Switch\r\n                    checked={values.occupancyUpdateSource === sources.integration}\r\n                    style={{ placeSelf: \"end\" }}\r\n                    onChange={(checked: boolean) => \r\n                        setFieldValue(\"occupancyUpdateSource\", checked? sources.integration: sources.table)\r\n                    }\r\n                />\r\n            </Grid>\r\n\r\n            <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\">\r\n                <Text textAlign=\"left\" placeSelf=\"end start\" bold>\r\n                    Abnormality \r\n                    <Label label={'Abnomality allows to get garage alert when a cetrain threshold is reached'}/>\r\n                </Text>\r\n\r\n                <Grid margin=\"0 0 0 .5em\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\">\r\n                    <Grid gridGap='0' customCols='1fr auto'  margin=\"0 0 .5em 0\">\r\n                    <Text textAlign=\"left\" placeSelf=\"end start\">\r\n                        Abnormality Baseline %\r\n                    </Text>\r\n                    <InputNumber\r\n                        min={0}\r\n                        max={100}\r\n                        style={{ placeSelf: \"end\" }}\r\n                        value={Number((values.abnormality?.percent * 100).toFixed(0))}\r\n                        onChange={(e) => setFieldValue(\"abnormality\", {\r\n                            active : true,\r\n                            percent: Number((Number(e)/100).toFixed(2))\r\n                        })}\r\n                        name={\"abnormality\"}\r\n                    />\r\n                    </Grid>\r\n\r\n                    <Text textAlign=\"left\" placeSelf=\"end start\">\r\n                        Abnormality Calculation Threshold\r\n                    </Text>\r\n                    <Radio.Group \r\n                        style={{placeSelf: 'start', placeItems: 'start', display: 'grid'}}\r\n                    >\r\n                        <Radio  value={1} style={{fontSize:'1.2em'}}>\r\n                        Same as last year (if data exists).\r\n                        </Radio>\r\n                        <Radio  value={2} style={{fontSize:'1.2em'}}>Last 3 weeks moving average.</Radio>\r\n                        <Radio value={3} style={{fontSize:'1.2em'}}>On/after set custom date\r\n                            &nbsp; <DatePicker/>\r\n                        </Radio>\r\n                    </Radio.Group>\r\n                  \r\n            </Grid>\r\n            </Grid>\r\n\r\n    \r\n            <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\">\r\n                <Text textAlign=\"left\" placeSelf=\"end start\" bold>\r\n                    Garage Occupancy Table\r\n                    <Label label={'Occupancy table is the  manual fallback occupancy data for the garage'}/>\r\n                </Text>\r\n                <Select\r\n                    defaultValue={values.occupancyTableId as any}\r\n                    onChange={(id: string) => setFieldValue(\"occupancyTableId\", id === 'null'? null: id)}\r\n                >   \r\n                    <Select.Option value={'null'}>{\"None\"}</Select.Option>\r\n                    {tables.map(({ id, title }: GarageOccupancyTable) => <Select.Option value={id}>{title}</Select.Option>)}\r\n                </Select>\r\n            </Grid>\r\n\r\n            <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                <Text textAlign=\"left\" placeSelf=\"end start\" bold>\r\n                    Max Garage Occupancy\r\n                        <span className=\"red\">*</span>\r\n                </Text>\r\n                <InputNumber\r\n                    min={1}\r\n                    style={{ placeSelf: \"end\" }}\r\n                    value={values.maxOccupancy}\r\n                    onChange={(e) => setFieldValue(\"maxOccupancy\", e)}\r\n                    name={\"maxOccupancy\"}\r\n                />\r\n            </Grid>\r\n            {loading ? <Button loading disabled style={{ fontSize: \".8em\" }}>Loading</Button> :\r\n                <Button.Normal\r\n                    style={{ fontSize: \".8em\" }}\r\n                    type=\"submit\"\r\n                    disabled={error}\r\n                    onSubmit={(e: any) => handleSubmit(e)}>\r\n                    Finish\r\n                </Button.Normal>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default GarageInfoForm;","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Text } from '../../../style';\r\nimport SimpleMap from './google-map';\r\nimport car from \"../../../assets/car.svg\";\r\nimport useGarages from '../../../hooks/garage';\r\nimport { Progress } from 'antd';\r\nimport GarageInfoForm from './garage-form';\r\n\r\nconst CreateGarage = ({ submit }: any) => {\r\n    const [count, setCount] = useState(0);\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCount(count => count + 5);\r\n        }, 300);\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (count === 90) {\r\n            submit();\r\n        }\r\n    }, [count]);\r\n\r\n    return (\r\n        <Grid\r\n            width=\"100%\"\r\n            background=\"white\"\r\n            height=\"100%\"\r\n        >\r\n            <div style={{ width: \"100%\" }}>\r\n                <Text bold>Creating your Garage</Text>\r\n                <Progress style={{ width: \"70%\" }} percent={count} />\r\n            </div>\r\n        </Grid>);\r\n}\r\nexport const GarageMultiStep = ({ close, refresh, eId, tables }: any) => {\r\n    const [state, setState] = useState({\r\n        step: 0,\r\n        completed: false\r\n    });\r\n\r\n    const { addGarage } = useGarages({ eId });\r\n\r\n    const [garage, setGarage] = useState<any>({\r\n        name: \"\",\r\n        active: false,\r\n        maxOccupancy: 0,\r\n        geo: [0, 0]\r\n    });\r\n\r\n    const setGeo = ({ lat, lng, address }: any) => {\r\n        setGarage({ ...garage, geo: [lat, lng], address });\r\n    }\r\n\r\n    const setInfo = (info: any) => {\r\n        setGarage({ ...garage, ...info });\r\n        forward()\r\n    }\r\n\r\n    const submit = async () => {\r\n        await addGarage(garage);\r\n        refresh();\r\n        close();\r\n    }\r\n    const forward = () => {\r\n        if (state.step < InputComponents.length) {\r\n            setState({ step: state.step + 1, completed: false });\r\n        }\r\n    }\r\n\r\n    const InputComponents = [\r\n        <SimpleMap forward={forward} setGeo={setGeo} />,\r\n        <GarageInfoForm submit={setInfo} tables={tables} />,\r\n        <CreateGarage submit={submit} />\r\n    ]\r\n\r\n    return (\r\n        <Grid  width=\"100%\" height=\"100%\" gridGap=\"0\">\r\n            {InputComponents[state.step]}\r\n        </Grid>);\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '../../../style';\r\nimport useGarages from '../../../hooks/garage';\r\nimport { Garage } from '../../../model/domain/garage';\r\nimport GarageInfoForm from './garage-form';\r\n\r\nexport const GarageEditor = ({ close, eId, garage, refresh, tables }: any) => {\r\n    const { editGarage, loading } = useGarages({ eId });\r\n    const submit = async (garage: Garage) => {\r\n        await editGarage(garage);\r\n        close();\r\n        refresh();\r\n    }\r\n\r\n    return (\r\n        <Grid width=\"100%\" height=\"100%\" gridGap=\"0\">\r\n            <GarageInfoForm submit={submit} tables={tables} garage={garage} loading={loading} />\r\n        </Grid>);\r\n}","import { useState, useEffect } from \"react\";\r\nimport API from \"../api\";\r\nimport { asyncHandler } from \"../utils\";\r\nimport { GarageOccupancyTable } from \"../model/domain/garage\";\r\n\r\ninterface State {\r\n    tables?: GarageOccupancyTable[] | any;\r\n    loading?: boolean;\r\n    error?: boolean;\r\n}\r\n\r\nexport const useOccupanyTable = ({ eId }: any) => {\r\n    const [state, setter] = useState<State>({\r\n        tables: [],\r\n        loading: false,\r\n        error: false,\r\n    });\r\n\r\n    const setState = (obj: State) => setter({ ...state, ...obj });\r\n\r\n    const getTables = async (eId: string) => {\r\n        setState({ loading: true, error: false });\r\n        const res = await asyncHandler({\r\n            apiCall: () => API.getOccupancyTables(eId),\r\n            errorMessage: \"Failed: Loading Table\",\r\n        });\r\n\r\n        setState({\r\n            loading: false,\r\n            tables: res?.garageOccupancyTables || [],\r\n            error: !(res?.success || true)\r\n        });\r\n    };\r\n\r\n    const addTable = async (table : any) => {\r\n        setState({ loading: true, error: false });\r\n        const res = await asyncHandler({\r\n            apiCall: () => API.addOccupancyTable(eId, table),\r\n            errorMessage: \"Could not Edit Table\",\r\n            successMessage: \"Table was Edited\",\r\n        });\r\n        let tables : GarageOccupancyTable[] = state.tables;\r\n\r\n        if(res?.success)\r\n            tables = [...state.tables, {...table, id: res.garageOccupancyTableId}];\r\n\r\n        setState({\r\n            loading: false,\r\n            tables,\r\n            error: !(res?.success || true),\r\n        });\r\n    }\r\n\r\n\r\n    const removeTable = async (tId: string) => {\r\n        setState({ loading: true, error: false });\r\n        const res = await asyncHandler({\r\n            apiCall: () => API.removeOccupancyTable(eId, tId),\r\n            errorMessage: \"Could not Delete Table\",\r\n            successMessage: \"Table was Deleted\",\r\n        });\r\n        let tables = [...state.tables];\r\n\r\n        if(res?.success)\r\n            tables = tables.filter((table : any)=> table.id !== tId)\r\n\r\n        setState({\r\n            loading: false,\r\n            tables,\r\n            error: !(res?.success || true),\r\n\r\n        });\r\n    }\r\n    const getTableById = async (id : string) =>{\r\n        return await asyncHandler({\r\n            apiCall: () => API.getOccupancyTableById(eId, id),\r\n            errorMessage: \"Failed: Loading Table\",\r\n        });\r\n    }\r\n\r\n    const editTable = async (table: GarageOccupancyTable) => {\r\n        setState({ loading: true, error: false });\r\n        const res = await asyncHandler({\r\n            apiCall: () => API.editOccupancyTable(eId, table.id, table),\r\n            errorMessage: \"Could not Edit Table\",\r\n            successMessage: \"Table was Edited\",\r\n        });\r\n        let tables : GarageOccupancyTable[] = [...state.tables];\r\n\r\n        const index = tables.reduce((acc: number, item: GarageOccupancyTable, i: number)=> table.id === item.id? i : acc, -1)\r\n\r\n        if(res?.success && index > -1){\r\n            tables[index] = table;\r\n        }\r\n           \r\n        setState({\r\n            loading: false,\r\n            tables,\r\n            error: !(res?.success || true),\r\n        });\r\n    }\r\n\r\n    useEffect(() => {getTables(eId)}, [eId]);\r\n    return {\r\n        ...state,\r\n        getTables,\r\n        removeTable,\r\n        addTable,\r\n        editTable,\r\n        getTableById\r\n    };\r\n};\r\n\r\nexport default {\r\n    useOccupanyTable\r\n};\r\n","import React from \"react\";\r\nimport { Garage } from \"../../../model/domain/garage\";\r\nimport { Grid, Button, Modal, Placeholder, List } from \"../../../style\";\r\nimport useGarages from \"../../../hooks/garage\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GarageCard from \"./garage-card\";\r\nimport { GarageMultiStep } from \"./garage-add\";\r\nimport { GarageEditor } from \"./garage-edit\";\r\nimport { useOccupanyTable } from \"../../../hooks/occupancy-table\";\r\n\r\nconst Listings = () => {\r\n  const eId = useSelector((state: any) => state.user.enterprise.id);\r\n  const { garages, loading, refresh } = useGarages({ eId });\r\n  const { tables, getTableById } = useOccupanyTable({ eId });\r\n\r\n  const props = { eId, tables, refresh };\r\n\r\n  const AddModal = Modal({\r\n    title: \"Add Your Garage\",\r\n    message: <GarageMultiStep close={() => AddModal.close()} {...props} />,\r\n    hideCancel: true,\r\n  });\r\n\r\n  const edit = (garage: Garage) => {\r\n    const EditGarage = Modal({\r\n      title: \"Edit Your Garage\",\r\n      message: <GarageEditor close={() => EditGarage.close()}  {...props} garage={garage} />,\r\n      hideCancel: true,\r\n    });\r\n    EditGarage.open();\r\n  }\r\n\r\n  return (\r\n    <Grid placeItems=\"start stretch\" padding=\"1em\" height=\"100%\">\r\n      <Grid>\r\n        <div className=\"grid\" style={{ placeSelf: \"center\", width: 'auto' }}>\r\n            <Button     \r\n              margin=\"1em\"\r\n              rounded\r\n              invert\r\n              placeSelf='end'\r\n\r\n              disabled={loading}\r\n              shadow\r\n              onClick={AddModal.open}\r\n              minWidth=\"4.5em\"\r\n              faIcon=\"fa  fa-plus\"\r\n            > Add\r\n          </Button>\r\n          <List\r\n            loading={loading}\r\n            loader={<Placeholder number={5} style={{ maxWidth: \"80vw\", width: '800px' }}  /> as any}\r\n            list={garages}\r\n            map={(g: Garage, i: number) => <GarageCard key={i} {...g} edit={() => edit(g)} getTableById={getTableById} />}\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Listings;\r\n","import React, { useMemo } from 'react';\r\nimport { AxisBottom, AxisLeft, AxisRight } from '@vx/axis';\r\nimport {  ScaleBand } from 'd3-scale';\r\n\r\nexport const XAxis = ({ scale,  tickFormat, axisStyleProps}: { scale:  ScaleBand<string>, tickFormat: any, axisStyleProps: any}) => {\r\n  const width = (() => {\r\n    const range = scale.range();\r\n    return range[1] - range[0]\r\n  })();\r\n\r\n  const maxTicks = width < 800? 5: 10;\r\n\r\n  const tickValues = useMemo(() => {\r\n    const dates = scale.domain();\r\n    \r\n    const mod = Math.floor(dates.length / maxTicks);\r\n    const tickFilter = ((_: any, index: number)=> dates.length < 10 || index % mod == 0);\r\n\r\n    return dates.filter(tickFilter);\r\n  }, [maxTicks]);\r\n\r\n  const  tickLabelProps = () => ({\r\n    fontWeight: 'bold',\r\n    fill: 'gray',\r\n    fontSize: 11,\r\n    textAnchor: 'middle'\r\n  })\r\n\r\n  return (\r\n      <AxisBottom\r\n        tickFormat={tickFormat}\r\n        tickLabelProps={tickLabelProps}\r\n        scale={scale}\r\n        tickValues={tickValues} {...axisStyleProps}\r\n        hideTicks={false}\r\n      />\r\n  );\r\n};\r\n\r\nexport const YAxisLeft = ({ scale, tickFormat, axisStyleProps }: any) => {\r\n  const tickValues = scale.ticks(10);\r\n  axisStyleProps = axisStyleProps || {};\r\n  const  tickLabelProps = () => ({\r\n    fontWeight: 'bold',\r\n    fill: 'gray',\r\n    fontSize: 11,\r\n    dx: -18,\r\n    dy: 5\r\n  })\r\n  return (\r\n      <AxisLeft\r\n        scale={scale}\r\n        tickLabelProps={tickLabelProps}\r\n        tickFormat={tickFormat}\r\n        tickValues={tickValues} \r\n        {...axisStyleProps}\r\n      />\r\n  );\r\n};\r\n\r\nexport const YAxisRight = ({ scale, tickFormat, axisStyleProps }: any) => {\r\n  const tickValues = scale.ticks(10);\r\n  const  tickLabelProps = () => ({\r\n    fontWeight: 'bold',\r\n    fill: 'gray',\r\n    fontSize: 11,\r\n    dx: 12,\r\n    dy: 5\r\n  })\r\n  return (\r\n      <AxisRight\r\n        scale={scale}\r\n        tickFormat={tickFormat}\r\n        tickLabelProps={tickLabelProps}\r\n        tickValues={tickValues} {...axisStyleProps}/>\r\n  );\r\n};\r\n\r\nexport const defaultAxisStyle = {\r\n  hideAxisLine: true,\r\n  tickStroke: 'gray',\r\n  tickLength: 6,\r\n  hideTicks: true,\r\n  hideZero: false\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useRect = ({ height, width }: { height: number; width: number; }): DrawAreaRect => {\r\n  //if axis ticks get cutoff, increase the margin of appropriate direction\r\n  const margin = {\r\n    top: 10,\r\n    right: 35,\r\n    bottom: 40,\r\n    left: 35\r\n  };\r\n\r\n  const calcRect = (width: any) =>({\r\n    width,\r\n    height,\r\n    innerWidth: width - margin.left - margin.right,\r\n    innerHeight: height - margin.top - margin.bottom,\r\n    margin,\r\n    xRange: [margin.left, width - margin.right],\r\n    yRange: [height - margin.bottom, margin.top]\r\n  })\r\n  const [ rect, setRect ] = useState(calcRect(width));\r\n  useEffect(()=>setRect(calcRect(width)), [width]);\r\n  return rect as any;\r\n}\r\n\r\n//given the height and width of the graph i.e. the drawArea + axis, computes margins\r\nexport interface DrawAreaRect {\r\n  readonly width: number;\r\n  readonly height: number;\r\n  readonly innerWidth: number;\r\n  readonly innerHeight: number;\r\n  readonly margin: {\r\n    readonly left: number;\r\n    readonly top: number;\r\n    readonly right: number;\r\n    readonly bottom: number;\r\n  }\r\n  readonly xRange: [number, number];\r\n  readonly yRange: [number, number];\r\n}","import { scaleLinear, scaleBand } from '@vx/scale';\r\nimport { DrawAreaRect } from './rect';\r\n\r\ntype Scale = { yMax: number, rect: DrawAreaRect, points: any, zoom? : number };\r\n\r\nexport const useScale = ({ rect,  points, yMax, zoom = 1.15 }: Scale) => ({\r\n  xAxis: getXBandScale({rect, points}),\r\n  yAxis: {\r\n    scale: scaleLinear({\r\n      domain: [0, zoom * yMax],\r\n      range: rect.yRange,\r\n    })\r\n  }\r\n});\r\n\r\nfunction getXBandScale({ rect, points }: { rect: DrawAreaRect, points: any }) {\r\n  const getDate = (d: any) => (new Date(d?.date || '2010')).toISOString();;\r\n  const getDates = (points: any[]) => {\r\n    const dates = []\r\n    for (let i = points.length - 1; i >= 0; i--) {\r\n      dates.push(getDate(points[i]))\r\n    }\r\n    return dates;\r\n  }\r\n\r\n  return {\r\n    scale: scaleBand<string>({\r\n      domain: getDates(points),\r\n      range: rect.xRange,\r\n      padding: 0.2,\r\n    })\r\n  }\r\n}","import { useMemo } from \"react\";\r\nimport { TimeSeries } from \"../../../model/domain/metrics\";\r\nimport logger from \"../../../utils/logger\";\r\n\r\nexport const useData = (timeSeriesResult: any) => useMemo(() => getStackedPoints(timeSeriesResult), [timeSeriesResult]);\r\n\r\nconst getStackedPoints = (timeSeriesResult: TimeSeries.Result) => {\r\n  const stackedPoints: any[] = [];\r\n  let max = 0;\r\n  let linearMax = 0;\r\n\r\n  try {\r\n    if (!timeSeriesResult) return { points: stackedPoints, max, linearMax };\r\n    const { timeSeries } = timeSeriesResult\r\n    const reference = timeSeries[0]\r\n    const numPoints = reference.points.length;\r\n    const numResource = timeSeries.length\r\n\r\n    for (let i = 0; i < numPoints; i++) {\r\n      let stackedPoint = { date: reference.points[i].at };\r\n      let totalValue = 0;\r\n\r\n      for (let j = 0; j < numResource; j++) {\r\n        const point = timeSeries[j].points[i];\r\n        const resource = timeSeries[j].displayLabel;\r\n\r\n        if (point.isMissing) {\r\n          stackedPoint[resource] = null;\r\n        } else {\r\n          totalValue += point.value;\r\n          linearMax = Math.max(linearMax, point.value)\r\n          stackedPoint[resource] = point.value;\r\n        }\r\n      }\r\n      stackedPoints.push(stackedPoint);\r\n      max = max < totalValue ? totalValue : max;\r\n    }\r\n  } catch (e) {\r\n    logger.log(e)\r\n  }\r\n  return { points: stackedPoints, max, linearMax };\r\n}\r\n\r\nexport const useCombinedData = (timeSeriesResults: TimeSeries.Result[]) => useMemo(() => {\r\n  const points: any = [];\r\n  let max = 0;\r\n  const hasError = timeSeriesResults.reduce((acc, ts: TimeSeries.Result) => !ts?.timeSeries || acc, false);\r\n  if (hasError) return { points, max };\r\n\r\n  const reference = timeSeriesResults[0].timeSeries[0]\r\n  const numPoints = reference.points.length;\r\n  const numResource = timeSeriesResults.length\r\n\r\n  const formatLabel = (s: string) => s.replace(/_/g, ' ')\r\n  for (let i = 0; i < numPoints; i++) {\r\n    let combinedPoint = { date: reference.points[i].at };\r\n\r\n    for (let j = 0; j < numResource; j++) {\r\n      const point = timeSeriesResults[j].timeSeries[0].points[i];\r\n      const resource = formatLabel(timeSeriesResults[j].metricType);\r\n\r\n      if (point.isMissing) {\r\n        combinedPoint[resource] = null;\r\n      } else {\r\n        combinedPoint[resource] = point.value;\r\n      }\r\n    }\r\n\r\n    points.push(combinedPoint);\r\n  }\r\n\r\n  return { points, max };\r\n}, [timeSeriesResults]);","import { colors } from '../json/colors.json';\r\n\r\nexport const getColor = (index: number) => colors[index % colors.length];","export const getKeys = (points: any[]) => {\r\n    if(points?.length < 1) return [];\r\n    return Object.keys(points[0]).filter(k => k !== 'date')\r\n}\r\n","import { getColor } from \"../utils/color\";\r\nimport { localPoint } from '@vx/event';\r\nimport { useTooltip } from '@vx/tooltip';\r\nimport { getKeys } from \"../utils/points\";\r\nimport {  ScaleBand } from 'd3-scale';\r\nimport { useMemo } from 'react';\r\ninterface TooltipData {\r\n    timestamp: string;\r\n    legend: { label: string, value: string, color: string }[];\r\n}\r\n\r\ninterface TooltipProps {\r\n   points: {[key: string]: string | number; date: string;}[],\r\n   setSelected? : any;\r\n   units?: string[];\r\n   xScale: ScaleBand<string>;\r\n   dateFormatter: {(d: string): string;}\r\n}\r\n/*\r\n      |                            |\r\n      |                            |\r\n      |                            |\r\n      |         |||          |||   |  \r\n      |         |||          |||   |  \r\n      |   |||   |||    |||   |||   |  \r\n      |   |||   |||    |||   |||   |  \r\n      |   |||   |||    |||   |||   |   \r\n      |   |||   |||    |||   |||   |  \r\n    ---------------------------------------------\r\n                *      *     *     *\r\n                a      b     c     d\r\n                \r\n      let x be the X position of the cursor then,\r\n      if (x <= a) {\r\n        show tooltip at middle of first bar\r\n      } else if (x <= b) {\r\n        show tooltip at middle of second bar\r\n      } else if (x <= c) {\r\n        show tooltip at middle of third bar\r\n      } else {\r\n        show tooltip at middle of last bar\r\n      }\r\n*/\r\nexport default ({points: points_, setSelected, units, xScale, dateFormatter }: TooltipProps) => {\r\n    const tooltip = useTooltip<TooltipData>();\r\n\r\n    //[tuesday, monday, sunday] -> [sunday, monday, tuesday]\r\n    //[sunday, monday, tuesday] -> [sunday, monday, tuesday]\r\n    const points = useMemo(() => {\r\n      return points_[0].date > points_[points_.length - 1].date\r\n        ? [...points_].reverse()\r\n        : points_;\r\n    }, [points_]);\r\n\r\n    /*\r\n      |                                       |\r\n      |                                       |\r\n      |                                       |\r\n      |         |||    |||   |||         |||  |  \r\n      |         |||    |||   |||         |||  |  \r\n      |   |||   |||    |||   |||   |||   |||  |  \r\n      |   |||   |||    |||   |||   |||   |||  |  \r\n      |   |||   |||    |||   |||   |||   |||  |  \r\n      |   |||   |||    |||   |||   |||   |||  |   \r\n    ---------------------------------------------\r\n          ^                                ^\r\n          |                                | \r\n        (band start)                    (band end)\r\n    */\r\n    const bandStart = xScale(points[0].date) || 0;\r\n    const bandEnd = xScale(points[points.length - 1].date) || 0 + xScale.bandwidth();\r\n\r\n    const getUnit = (i: number) => units? units[i % units.length] : '';\r\n\r\n    const getLegend = (i: number) => {\r\n        const keys = getKeys(points);\r\n        const toPercent = (n: number) => (n * 100).toFixed(2) + '%';\r\n        const toDollar = (n: number) => '$'+ (n / 100).toFixed(0) ;\r\n        const point = points[i] || {};\r\n\r\n        return keys.map((label: string, index: number) => {\r\n            let value = point[label] as any;\r\n            const isMissing = value == null;\r\n            const unit = getUnit(index);\r\n            value = unit === '%'\r\n              ? toPercent(value)\r\n              : unit === 'cents'\r\n              ? toDollar(value)\r\n              : value + ''; \r\n\r\n            return { label, value, color: getColor(index), isMissing }\r\n        })\r\n    }\r\n\r\n    //offsetting local point x, y so as to have `bandStart` as effective start\r\n    //helps calculation below.\r\n    const graphLocal = (event: any) => {\r\n      const { x, y } = localPoint(event) || { x: 0, y: 0};\r\n\r\n      return { x: x - bandStart, y };\r\n    }\r\n\r\n    return {\r\n        ...tooltip,\r\n        handleTooltip: (event: any, newSelected = -1) => {\r\n          let { x, y } = graphLocal(event) || {};\r\n          setSelected(newSelected);\r\n          \r\n          const i = x > bandEnd\r\n            ? points.length - 1\r\n            : x < 0\r\n            ? 0\r\n            : Math.floor(x! / xScale.step());\r\n\r\n          /*\r\n              |                                       |\r\n              |                                       |\r\n              |                                       |\r\n              |         |||    |||   |||         |||  |  \r\n              |         |||    |||   |||         |||  |  \r\n              |   |||   |||    |||   |||   |||   |||  |  \r\n              |   |||   |||    |||   |||   |||   |||  |  \r\n              |   |||   |||    |||   |||   |||   |||  |  \r\n              |   |||   |||    |||   |||   |||   |||  |   \r\n            ---------------------------------------------\r\n                                *\r\n                                ^\r\n                                |\r\n                                iX for i = 2 (mid point of the third bar line)\r\n          */\r\n          const iX = bandStart + i * xScale.step() + xScale.bandwidth() / 2;          \r\n\r\n          const timestamp = xScale.domain()[i];\r\n\r\n            //const i = bisect(timestamp);\r\n            const legend = getLegend(i);\r\n\r\n            // try replacing iX with x + bandStart, and if thats\r\n            // better then replce this\r\n            tooltip.showTooltip({\r\n                tooltipData: { timestamp: dateFormatter(timestamp), legend },\r\n                tooltipLeft: iX,\r\n                tooltipTop: y,\r\n            });\r\n\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport { TooltipWithBounds } from '@vx/tooltip';\r\nimport { Text, Grid } from '../../../style';\r\nimport { primaryColor } from '../../../config';\r\nimport { Line } from '@vx/shape';\r\n\r\nconst Tooltip = ({ tooltipOpen, tooltipLeft, tooltipTop, tooltipData, isSelected}: any) => {\r\n    if (!tooltipOpen && !tooltipData) return null;\r\n\r\n    return (\r\n        <TooltipWithBounds top={tooltipTop} left={tooltipLeft}>\r\n            <Grid placeItems=\"start\" customRows=\"auto 1fr\" gridGap=\".4em\" style={{zIndex: 10000}}>\r\n                <Text>{tooltipData.timestamp}</Text>\r\n                {tooltipData.legend\r\n                    .map(({ color, label, value, isMissing }: any, index: number) => (\r\n                        isMissing || value === '-1'? null :\r\n                            <div key={index} style={{ padding: 2, fontWeight: isSelected && isSelected(index)? 'bold': 'normal' }}>\r\n                                <span className='round' style={{ background: color }}></span>&nbsp;\r\n                                <span className='capitalize'><span dangerouslySetInnerHTML={{__html : label}}/>: &nbsp;{value}</span>\r\n                            </div>\r\n                    ))}\r\n            </Grid>\r\n        </TooltipWithBounds>\r\n    );\r\n}\r\n\r\nTooltip.Custom = ({ top, left, children}: any) => {\r\n    return (\r\n        <TooltipWithBounds top={top} left={left}>\r\n            {children}\r\n        </TooltipWithBounds>\r\n    );\r\n}\r\n\r\n\r\nTooltip.Line = ({ tooltipData, height, tooltipLeft: x }: any) => {\r\n    if (!tooltipData) return null;\r\n    return (\r\n        <g>\r\n            <Line\r\n                from={{ x, y: 0 }}\r\n                to={{ x, y: height }}\r\n                stroke={primaryColor}\r\n                strokeWidth={2}\r\n                pointerEvents=\"none\"\r\n                strokeDasharray=\"5,\"\r\n            />\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default Tooltip;","import { TimeSeries } from \"../../model/domain/metrics\";\r\nimport {  ScaleLinear, ScaleBand } from 'd3-scale';\r\nimport { MetricDataStatus } from \"../../hooks/metrics\";\r\nimport { LineChart } from \"../../model/domain/dashboard\";\r\n\r\nexport enum Charts {\r\n    stackedArea = \"stackedArea\",\r\n    multiLine = \"multiLine\",\r\n    stackedBar = \"stackedBar\",\r\n    combined = \"combined\"\r\n}\r\n\r\nexport interface AdditionalChartProps {\r\n    filter?: boolean | React.ReactElement | null;\r\n    filterWidth?: number;\r\n    metricDataStatus: MetricDataStatus;\r\n    className?: string;\r\n    loading? : boolean;\r\n    legend?: false | { label : string};\r\n    isPercent?: boolean;\r\n    download? : string;\r\n    eId?: string; \r\n    inChartLegend? : boolean;\r\n    queries?: any; \r\n    chartTypes?: Charts[] | string[];\r\n}\r\n\r\nexport interface AdditionalMultiChartProps {\r\n  filter?: boolean | React.ReactElement | null;\r\n  filterWidth?: number;\r\n  loading? : boolean;\r\n  fixedAlignment: string;\r\n  metricDataStatuses: MetricDataStatus[];\r\n  className?: string;\r\n  inChartLegend? : boolean; \r\n  download? : string;\r\n  queries?: any;\r\n  eId?: string; \r\n  legend?:  false | { label : string };\r\n}\r\n\r\nexport type ChartProps = AdditionalChartProps & LineChart;\r\nexport type MultiMetricsChartProps = AdditionalMultiChartProps & LineChart;\r\n\r\nexport interface DrawAreaProps {\r\n  size: { height: number, width: number };\r\n  data: {\r\n    timeSeriesResult: TimeSeries.Result;\r\n  };\r\n  inChartLegend?: boolean;\r\n  chartType: Charts | string;\r\n}\r\n\r\nexport interface MultiDrawAreaProps {\r\n  size: { height: number, width: number };\r\n  fixedAlignment: string;\r\n  datas: {\r\n    timeSeriesResult: TimeSeries.Result;\r\n  } [];\r\n  chartType: Charts | string;\r\n  inChartLegend?: boolean;\r\n}\r\n\r\ntype EventHandler = (e :React.SyntheticEvent) => void;\r\n\r\nexport interface GraphEvent {\r\n    onTouchStart : EventHandler;\r\n    onTouchMove : EventHandler;\r\n    onMouseMove : EventHandler;\r\n    onMouseLeave : EventHandler;\r\n};\r\n\r\nexport type Graph = {\r\n    yScale: ScaleLinear<number, number>;\r\n    isSelected?: (i : number) => boolean;\r\n    noneSelected?: boolean;\r\n    points: any;\r\n    xScale: ScaleBand<string>;\r\n    event? : (i: number ) => GraphEvent\r\n};\r\n\r\nexport interface Points {\r\n  [key: string]: string | number;\r\n  date: string;\r\n};\r\n\r\nexport type CombinedGraph = Graph & { y2Scale: ScaleLinear<number, number>; points2: any }","import React from 'react'\r\nimport { GridRows } from '@vx/grid';\r\n const accentColor = \"lightgray\";\r\n\r\nexport default function Grid({yScale, width} : any){\r\nreturn (\r\n    <GridRows<number>\r\n        scale={yScale}\r\n        width={width}\r\n        stroke={accentColor}\r\n        strokeOpacity={0.5}\r\n        pointerEvents=\"none\"\r\n    />\r\n);}","import React, { useEffect } from 'react'\r\nimport { LinePath } from '@vx/shape';\r\nimport { getColor } from '../../utils/color';\r\nimport { Graph } from '../../types';\r\nimport { getKeys } from '../../utils/points';\r\n\r\nexport default function MultiLine({ points, isSelected, event, xScale, yScale }: Graph) {\r\n  const keys = getKeys(points);\r\n  const linePathX = (d: any) => xScale(d.date)! + xScale.bandwidth() / 2 || 0;\r\n  const linePathY = (d: any, key: string) => yScale(d[key]);\r\n  const reducer = (datum: any): boolean => datum !== null;\r\n\r\n  return (\r\n    <>\r\n      {points.map((data: any) => {\r\n        const left = linePathX(data);\r\n        return keys.map((key, i) => {\r\n          const top = yScale(data[key]);\r\n          if (data[key] == null) return null;\r\n          return (\r\n            <g key={`circle-${i}`}>\r\n              <circle\r\n                r={7 - points.length / 40}\r\n                cx={left}\r\n                cy={top}\r\n                {...(event ? event(i) : {})}\r\n                stroke={isSelected && isSelected(i) ? getColor(i) : ''}\r\n                fill={getColor(i) + (isSelected && isSelected(i)? '66' : 'BB')}\r\n              />\r\n            </g>\r\n          );\r\n        })\r\n\r\n      })}\r\n\r\n      {keys?.map((key, index) => (\r\n        <LinePath\r\n          x={linePathX}\r\n          y={(d) => linePathY(d, key)}\r\n          {...(event ? event(index) : {})}\r\n          data={points}\r\n          key={index}\r\n          defined={(d: any) => reducer(d[key])}\r\n          strokeWidth={isSelected && isSelected(index) ? 4 : 2}\r\n          stroke={getColor(index)}\r\n        />\r\n      )\r\n      )}\r\n    </>);\r\n}","import React from 'react'\r\nimport { AreaStack } from '@vx/shape';\r\nimport { getColor } from '../../utils/color';\r\nimport { Graph } from '../../types';\r\nimport { getKeys } from '../../utils/points';\r\n\r\n\r\nexport function StackedArea({ xScale, yScale, points, isSelected, noneSelected, event}: Graph) {\r\n  const keys = getKeys(points);\r\n  const reducer = (datum: any): boolean =>  datum.data;\r\n  const getY = (d: any, index: number) => d[index];\r\n  const getAreaStackX = (d: any) => xScale(d.data.date)!;\r\n  \r\n  return (\r\n    <AreaStack\r\n      keys={keys}\r\n      data={points}\r\n      defined={reducer}\r\n      x={getAreaStackX}\r\n      y0={d => yScale(getY(d, 0))}\r\n      y1={d => yScale(getY(d, 1))}\r\n    >\r\n      {({ stacks, path }) =>\r\n        stacks.map((stack, index) => {\r\n          const opacity = isSelected && isSelected(index)? '70' : noneSelected ? '50': '25';\r\n          const color = getColor(index) + opacity;\r\n            return (\r\n            <path\r\n              key={`stack-${index}`}\r\n              d={path(stack) || ''}\r\n              stroke={color}\r\n              strokeWidth={2}\r\n              {...event && event(index)}\r\n              fill={color}\r\n            />\r\n          )\r\n        })\r\n      }\r\n    </AreaStack>);\r\n}\r\n\r\nexport default StackedArea;","import React from 'react'\r\nimport { BarStack, AreaStack } from '@vx/shape';\r\nimport { scaleOrdinal } from '@vx/scale';\r\nimport { colors } from '../../json/colors.json';\r\nimport { Group } from '@vx/group';\r\nimport { getColor } from '../../utils/color';\r\nimport { Graph } from '../../types';\r\nimport { getKeys } from '../../utils/points';\r\n\r\nexport function StackedBar({ yScale, points, xScale, event, isSelected, noneSelected }: Graph) {\r\n  const keys = getKeys(points);\r\n  const getDate = (d: any) => (new Date(d?.date)).toISOString();\r\n\r\n  const colorScale = scaleOrdinal<string, string>({\r\n    domain: keys,\r\n    range: colors,\r\n  });\r\n\r\n  const reducer = (datum: any): boolean => datum.data;\r\n  const getY = (d: any, index: number) => d[index];\r\n  const getAreaStackX = (d: any) => xScale(d.data.date)!;\r\n\r\n  return (\r\n    <Group >\r\n      <BarStack<any, string>\r\n        keys={keys}\r\n        data={points}\r\n        xScale={xScale}\r\n        yScale={yScale}\r\n        color={colorScale}\r\n        x={getDate}\r\n      >\r\n        {barStacks => {\r\n          return barStacks.map(barStack => {\r\n            const index = barStack.index;\r\n            return barStack.bars.map((bar) => {\r\n              if (bar.bar.data[bar.key] == null) return null;\r\n              return (\r\n                <rect\r\n                  key={`bar-stack-${barStack.index}-${bar.index}`}\r\n                  x={bar.x}\r\n                  y={bar.y}\r\n                  opacity={noneSelected || (isSelected && isSelected(barStack.index))? 0.7 : 0.3}\r\n                  height={bar.height}\r\n                  width={bar.width}\r\n                  fill={getColor(index)}\r\n                />\r\n              )\r\n            })\r\n          })\r\n        }\r\n      }\r\n      </BarStack>\r\n\r\n      <AreaStack\r\n        keys={keys}\r\n        data={points}\r\n        defined={reducer}\r\n        x={getAreaStackX}\r\n        y0={d => yScale(getY(d, 0))}\r\n        y1={d => yScale(getY(d, 1))}\r\n      >\r\n        {({ stacks, path }) => stacks.map((stack, index) =>  (\r\n              <path\r\n                key={`stack-${index}`}\r\n                d={path(stack) || ''}\r\n                opacity={0}\r\n                {...event && event(index)}\r\n              />\r\n            )\r\n          )}\r\n      </AreaStack>\r\n    </Group>);\r\n};\r\n\r\nexport default StackedBar;","import React from 'react'\r\nimport { BarStack, LinePath } from '@vx/shape';\r\nimport { getColor } from '../../utils/color';\r\nimport { CombinedGraph } from '../../types';\r\nimport { scaleOrdinal } from '@vx/scale';\r\nimport { colors } from '../../json/colors.json';\r\nimport { Group } from '@vx/group';\r\nimport { getKeys } from '../../utils/points';\r\n\r\nexport function Combined({ y2Scale, yScale, points, points2, xScale , event}: CombinedGraph) {\r\n  const colorScale = scaleOrdinal<string, string>({\r\n    domain: getKeys(points),\r\n    range: colors,\r\n  });\r\n  const getBarStackX = (d: any) => (new Date(d?.date)).toISOString();\r\n  const keyLine = getKeys(points2)[0] || '';\r\n  const getLineY = (d: any) => y2Scale(d[keyLine]);\r\n  const getLineX = (d: any) => xScale(d.date)! + xScale.bandwidth() / 2;\r\n  const lineReducer = (datum: any): boolean => datum != null;\r\n\r\n  return (\r\n    <>\r\n      <Group >\r\n        <BarStack<any, string>\r\n          keys={getKeys(points)}\r\n          data={points}\r\n          xScale={xScale}\r\n          yScale={yScale}\r\n          color={colorScale}\r\n          x={getBarStackX}\r\n        >\r\n          {barStacks =>\r\n            barStacks.map(barStack => {\r\n              const index = barStack.index;\r\n              return barStack.bars.map((bar) => {\r\n                if (bar.bar.data[bar.key] == null) return null;\r\n                return (\r\n                  <rect\r\n                    key={`bar-stack-${barStack.index}-${bar.index}`}\r\n                    x={bar.x}\r\n                    y={bar.y}\r\n                    {...(event && event(-1))}\r\n                    opacity={0.6}\r\n                    height={bar.height}\r\n                    width={bar.width}\r\n                    fill={getColor(index)}\r\n                  />\r\n                )\r\n              })\r\n            }\r\n            )}\r\n        </BarStack>\r\n      </Group>\r\n\r\n      <LinePath<any>\r\n        x={getLineX}\r\n        y={getLineY}\r\n        data={points2}\r\n        defined={(d: any) => lineReducer(d[keyLine])}\r\n        strokeWidth={3}\r\n        {...(event && event(-1))}\r\n        stroke={getColor(1) + 'A0'}\r\n      />\r\n\r\n      {points2.map((d: any, i: number) => {\r\n        const left = getLineX(d);\r\n        const top = getLineY(d);\r\n        if(d[keyLine] == null) return null;\r\n        return (\r\n          <g key={`circle-${i}`}>\r\n            <circle\r\n              r={7 - points2.length/40}\r\n              cx={left}\r\n              cy={top}\r\n              fill={getColor(1) +  'BB'}\r\n            />\r\n          </g>\r\n        );\r\n      })}\r\n    </>);\r\n}\r\n\r\nexport default Combined;","import React from 'react';\r\nimport { Charts } from \"../types\";\r\nimport MultiLine from \"../components/graph/multi-line\";\r\nimport StackedArea from \"../components/graph/stacked-area\";\r\nimport StackedBar from \"../components/graph/stacked-bar\";\r\nimport Combined from '../components/graph/combined';\r\n\r\nexport const getChart = (chart:Charts | string, props: any) => {\r\n    switch (chart) {\r\n      case Charts.multiLine:\r\n        return <MultiLine {...props} />;\r\n  \r\n      case Charts.stackedArea:\r\n        return <StackedArea {...props} />;\r\n  \r\n      case Charts.stackedBar:\r\n        return <StackedBar {...props} />;\r\n      case Charts.combined:\r\n        return <Combined {...props}/>;\r\n      default:\r\n        return \"Error\";\r\n    }\r\n  }","import React, { useState } from 'react'\r\nimport { XAxis, YAxisLeft, YAxisRight, defaultAxisStyle } from '../axis';\r\nimport { useRect } from '../../hooks/rect';\r\nimport { useScale } from '../../hooks/scale';\r\nimport { useData, useCombinedData } from '../../hooks/data';\r\nimport useToolTip from '../../hooks/tooltip';\r\nimport Tooltip from '../tooltip';\r\nimport { DrawAreaProps, Graph, MultiDrawAreaProps, CombinedGraph, Charts } from '../../types';\r\nimport Grid from '../grid';\r\nimport { getChart } from '../../utils/chart';\r\nimport { TimeSeries } from '../../../../model/domain/metrics';\r\nimport { moment, getTimezone } from '../../../../utils/time';\r\nimport { LegendOrdinal } from '@vx/legend';\r\nimport { scaleOrdinal } from \"@vx/scale\";\r\nimport { colors } from '../../json/colors.json';\r\nimport { getKeys } from '../../utils/points';\r\n\r\nconst DrawArea = (props: DrawAreaProps) => {\r\n  const { size, chartType, data } = props;\r\n  const { timeSeriesResult } = data as any;\r\n  const { height, width } = size;\r\n  const rect = useRect({ height, width });\r\n  const { max, points, linearMax } = useData(timeSeriesResult);\r\n  const [selected, setSelected] = useState(-1);\r\n  const isSelected = (index: number) => selected === index;\r\n\r\n  const { xAxis, yAxis } = useScale({ rect: rect, yMax: chartType === Charts.multiLine ? linearMax : max, points });\r\n  const tickFormatY = getYTickFormatter(timeSeriesResult);\r\n  const tickFormatX = getXTickFormatter(timeSeriesResult);\r\n  const tooltipFormatter = getTooltipDateFormatter(timeSeriesResult);\r\n\r\n  const { tooltipData, hideTooltip, handleTooltip, tooltipLeft, tooltipTop, tooltipOpen } = useToolTip({\r\n    points,\r\n    setSelected,\r\n    units: [timeSeriesResult.unit],\r\n    xScale: xAxis.scale,\r\n    dateFormatter: tooltipFormatter\r\n  });\r\n\r\n  const event = (index = -1) => ({\r\n    onTouchStart: (e: any) => handleTooltip(e, index),\r\n    onTouchMove: (e: any) => handleTooltip(e, index),\r\n    onMouseMove: (e: any) => handleTooltip(e, index),\r\n    onMouseLeave: () => {\r\n      setSelected(-1);\r\n      hideTooltip();\r\n    }\r\n  })\r\n\r\n  const chartProps: Graph = {\r\n    yScale: yAxis.scale,\r\n    points,\r\n    xScale: xAxis.scale,\r\n    isSelected,\r\n    noneSelected: selected === -1,\r\n    event\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: height + 'px', width: '100%', position: 'relative' }}>\r\n        <SVG height={height} width={'100%'} {...event(-1)}>\r\n          <Tooltip.Line\r\n            height={height}\r\n            tooltipData={tooltipData}\r\n            tooltipLeft={tooltipLeft}\r\n          />\r\n\r\n          <g transform={`translate(0,${rect.height - rect.margin.bottom})`}>\r\n            <XAxis\r\n              scale={xAxis.scale}\r\n              tickFormat={tickFormatX}\r\n              axisStyleProps={defaultAxisStyle} />\r\n          </g>\r\n\r\n          <g transform={`translate(${rect.margin.left},0)`}>\r\n            <Grid yScale={yAxis.scale} width={rect.innerWidth} />\r\n            <YAxisLeft\r\n              scale={yAxis.scale}\r\n              tickFormat={tickFormatY}\r\n              axisStyleProps={defaultAxisStyle} />\r\n          </g>\r\n          {/*always have this below the <Grid />*/}\r\n          {getChart(chartType, chartProps)}\r\n\r\n        </SVG>\r\n        <Tooltip\r\n          tooltipOpen={tooltipOpen}\r\n          tooltipLeft={tooltipLeft}\r\n          tooltipTop={tooltipTop}\r\n          tooltipData={tooltipData}\r\n          isSelected={isSelected}\r\n          noneSelected={selected === -1}\r\n        />\r\n      </div>\r\n      {props.inChartLegend &&\r\n        <LegendOrdinal\r\n          scale={scaleOrdinal({\r\n            range: colors,\r\n            domain: getKeys(points)\r\n          })\r\n          }\r\n          style={{\r\n            fontSize: '13px',\r\n            display: 'grid',\r\n            textTransform: 'capitalize',\r\n            placeItems: 'center',\r\n            gridTemplateColumns: `repeat(${getKeys(points).length}, 1fr)`\r\n          }}\r\n          shape='circle'\r\n          labelMargin=\"0 15px 0 0\"\r\n        />\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nconst MultiDrawArea = (props: MultiDrawAreaProps) => {\r\n  const { size, chartType, datas } = props;\r\n  const [{ timeSeriesResult }, { timeSeriesResult: timeSeriesResult2 }] = datas;\r\n  const { height, width } = size;\r\n  const rect = useRect({ height, width });\r\n  const data1 = useData(timeSeriesResult);\r\n  const data2 = useData(timeSeriesResult2);\r\n  const dataComb = useCombinedData([timeSeriesResult, timeSeriesResult2]);\r\n\r\n  const { xAxis, yAxis } = useScale({\r\n    rect,\r\n    yMax: data1.max,\r\n    points: data1.points\r\n  });\r\n\r\n  const { yAxis: y2Axis } = useScale({\r\n    rect,\r\n    yMax: data2.max,\r\n    points: data2.points\r\n  });\r\n\r\n  const tickFormatYLeft = getYTickFormatter(timeSeriesResult);\r\n  const tickFormatYRight = getYTickFormatter(timeSeriesResult2);\r\n  const tickFormatX = getXTickFormatter({...timeSeriesResult2, ...props.fixedAlignment? {alignmentPeriod: props.fixedAlignment} : {}} as any);\r\n  const tooltipFormatter = getTooltipDateFormatter(timeSeriesResult);\r\n\r\n  const { tooltipData, hideTooltip, handleTooltip, tooltipLeft, tooltipTop, tooltipOpen } = useToolTip({\r\n    points: dataComb.points,\r\n    units: [timeSeriesResult.unit, ''],\r\n    setSelected: () => { },\r\n    xScale: xAxis.scale,\r\n    dateFormatter: tooltipFormatter\r\n  });\r\n\r\n\r\n  const event = (index = -1) => ({\r\n    onTouchStart: (e: any) => handleTooltip(e, index),\r\n    onTouchMove: (e: any) => handleTooltip(e, index),\r\n    onMouseMove: (e: any) => handleTooltip(e, index),\r\n    onMouseLeave: () => hideTooltip()\r\n  });\r\n  const chartProps: CombinedGraph = {\r\n    yScale: yAxis.scale,\r\n    points: data1.points,\r\n    points2: data2.points,\r\n    y2Scale: y2Axis.scale,\r\n    xScale: xAxis.scale,\r\n    event\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: height + 'px', width: '100%', position: 'relative' }}>\r\n        <SVG height={height} width={'100%'} {...event(-1)}>\r\n          <Tooltip.Line\r\n            height={height}\r\n            tooltipData={tooltipData}\r\n            tooltipLeft={tooltipLeft} />\r\n\r\n          <g transform={`translate(0,${rect.height - rect.margin.bottom})`}>\r\n            <XAxis\r\n              scale={xAxis.scale}\r\n              tickFormat={tickFormatX}\r\n              axisStyleProps={defaultAxisStyle} />\r\n          </g>\r\n\r\n          <g transform={`translate(${rect.margin.left},0)`}>\r\n            <Grid yScale={yAxis.scale} width={rect.innerWidth} />\r\n            <YAxisLeft\r\n              scale={yAxis.scale}\r\n              tickFormat={tickFormatYLeft}\r\n              axisStyleProps={defaultAxisStyle} />\r\n          </g>\r\n\r\n          <g transform={`translate(${rect.width - rect.margin.right},0)`}>\r\n            <YAxisRight\r\n              scale={y2Axis.scale}\r\n              tickFormat={tickFormatYRight}\r\n              axisStyleProps={defaultAxisStyle} />\r\n          </g>\r\n\r\n          {/*always have this below the <Grid />*/}\r\n          {getChart(chartType, chartProps)}\r\n\r\n        </SVG>\r\n        <Tooltip\r\n          tooltipOpen={tooltipOpen}\r\n          tooltipLeft={tooltipLeft}\r\n          tooltipTop={tooltipTop}\r\n          tooltipData={tooltipData} />\r\n      </div>\r\n      {props.inChartLegend &&\r\n        <LegendOrdinal\r\n          scale={scaleOrdinal({\r\n            range: colors,\r\n            domain: getKeys(dataComb.points)\r\n          })\r\n          }\r\n          style={{\r\n            fontSize: '13px',\r\n            display: 'grid',\r\n            placeItems: 'center',\r\n            textTransform: 'capitalize',\r\n            gridTemplateColumns: `repeat(${getKeys(dataComb.points).length}, 1fr)`\r\n          }}\r\n          shape='circle'\r\n          labelMargin=\"0 15px 0 0\"\r\n        />\r\n      }\r\n    </>\r\n  );\r\n}\r\ninterface SVGProps {\r\n  height: number | string,\r\n  width: number | string,\r\n  children: any,\r\n  onTouchStart: { (e: React.SyntheticEvent): void };\r\n  onTouchMove: { (e: React.SyntheticEvent): void };\r\n  onMouseMove: { (e: React.SyntheticEvent): void };\r\n  onMouseLeave: { (e: React.SyntheticEvent): void };\r\n}\r\n\r\nconst SVG = (o: SVGProps) => (\r\n  <svg width={o.width} height={o.height}>\r\n    <rect\r\n      x={0}\r\n      y={0}\r\n      width={o.width}\r\n      height={o.height}\r\n      fill={'transparent'}\r\n      onTouchStart={o.onTouchStart}\r\n      onTouchMove={o.onTouchMove}\r\n      onMouseMove={o.onMouseMove}\r\n      onMouseLeave={o.onMouseLeave} />\r\n    {o.children}\r\n  </svg>\r\n);\r\n\r\nDrawArea.Multi = MultiDrawArea;\r\nexport default DrawArea;\r\n\r\nfunction getYTickFormatter(ts: TimeSeries.Result) {\r\n  const identity = (n: any) => n % 1 != 0? null: n;\r\n  const centsFormatter = (n: number) => '$' + (n / 100).toFixed(0);\r\n  const percentFormatter = (n: number) => (n * 100).toFixed(1) + '%';\r\n\r\n  return ts.unit === '%'\r\n    ? percentFormatter\r\n    : ts.unit === 'cents'\r\n      ? centsFormatter\r\n      : identity;\r\n}\r\n\r\n/*\r\n  How TimeSeries Dates should be interpreted:\r\n\r\n  Data points are returned in descending order w.r.t \r\n  `at` field in time series points i.e. data at position 0 is\r\n  greater than data at position 1. Say following 2 successive data points:\r\n\r\n  [\r\n    { at: x, value: v1 isMissing: false },\r\n    { at: y, value: v2, isMissing: false }\r\n  ]\r\n\r\n  then,\r\n  \r\n  x is always greater than y.\r\n\r\n  Moreover, every time series result has `alignmentPeriod` field,\r\n  and according to that, successive data points differ w.r.t `at` field.\r\n\r\n  Following table shows the difference between x and y field for various\r\n  alignmentPeriods.\r\n\r\n  alignmentPeriod  |   x - y\r\n  =============================\r\n      1h           |   1 hours\r\n      1d           |   1 day\r\n      1w           |   1 week\r\n      1m           |   1 month\r\n\r\n  Another thing is that, the value associated with a\r\n  time series point whose `at` field is t1, is some aggregation of data points\r\n  that was collected between (t1, t2], and t2 - t1 is the alignmentPeriod.\r\n\r\n  Thus, for above, v1 is the aggregation of data points between x and y i.e. \r\n  including x but not y.\r\n\r\n  Similarly, v2 is the aggregation of data points between y and z i.e. including\r\n  y and not z; and y - z is the alignment period.\r\n\r\n  This brings to the point of how it affects label. \r\n\r\n  Say our alignmentPeriod was 1w, and the data points were marked at following:\r\n  [ \r\n    { at: 2020-01-14T00:00:00Z, value: v1, isMissing: false },\r\n    { at: 2020-01-07T00:00:00Z, value: v2, isMissing: false }\r\n  ]\r\n\r\n  then v1 is the accumulation of data between (07T00, 14T00].\r\n\r\n  What that means is, datapoints between Jan 7 00:01 AM and Jan 14 00:00 AM\r\n  are being considered. So, infact what we ought to show in the user friendly\r\n  label is not Jan 7 to Jan 14 but rather Jan 7 to Jan 13.\r\n\r\n  So, the display label math turns out to be [d - 1 - 1 week, d - 1].\r\n  \r\n  We do this math for 1m, 1w and 1d. Others aren't necessary, since the\r\n  time difference is already very small\r\n\r\n*/\r\n\r\nconst minusOneDay = (d: string) => moment(d).add(-1, 'day').toISOString();\r\n\r\nconst getXTickFormatter = (() => {\r\n  const f = (date: string, formatter: string) => moment.tz(date, getTimezone()).format(formatter);\r\n\r\n  const map: { [key in TimeSeries.AlignmentPeriod]: { (d: string): string } } = {\r\n    '1m': (d: string) => f(minusOneDay(d), 'MMM'),\r\n    '1w': (d: string) => {\r\n      d = minusOneDay(d);\r\n      const d0 = moment(d).subtract(6, 'day').toISOString();\r\n      return `${f(d0, 'MMM DD')} - ${f(d, 'MMM DD')}`;\r\n    },\r\n    '1d': (d: string) => {\r\n      d = minusOneDay(d);\r\n      return moment.tz(d, getTimezone()).get('month') === 0 ? f(d, 'MMM, YYYY') : f(d, 'MMM DD');\r\n    },\r\n    '4h': (d: string) => f(d, 'MMM DD'),\r\n    '1h': (d: string) => f(d, 'MMM DD h A'),\r\n    '30m': (d: string) => f(d, 'ddd h A'),\r\n    '5m': (d: string) => f(d, 'h:mm A')\r\n  };\r\n\r\n  const defaultFormatter = map['30m'];\r\n\r\n  return (ts: TimeSeries.Result) => {\r\n    return map[ts.alignmentPeriod] || defaultFormatter;\r\n  }\r\n})();\r\n\r\nconst getTooltipDateFormatter = (() => {\r\n  const f = (date: string, formatter: string) => moment.tz(date, getTimezone()).format(formatter);\r\n\r\n  const map: { [key in TimeSeries.AlignmentPeriod]: { (d: string): string } } = {\r\n    '1m': (d: string) => f(minusOneDay(d), 'MMM, YYYY'),\r\n    '1w': (d: string) => {\r\n      d = minusOneDay(d);\r\n      const d0 = moment(d).subtract(6, 'day').toISOString();\r\n      return `${f(d0, 'MMM DD, YYYY')} - ${f(d, 'MMM DD, YYYY')}`;\r\n    },\r\n    '1d': (d: string) => f(minusOneDay(d), 'MMM DD, YYYY'),\r\n    '4h': (d: string) => f(d, 'MMM DD, YYYY, ddd h A'),\r\n    '1h': (d: string) => f(d, 'MMM DD, YYYY, ddd h A'),\r\n    '30m': (d: string) => f(d, 'MMM DD, ddd h A'),\r\n    '5m': (d: string) => f(d, 'MMM DD, h:mm A')\r\n  };\r\n\r\n  const defaultFormatter = map['30m'];\r\n\r\n  return (ts: TimeSeries.Result) => {\r\n    return map[ts.alignmentPeriod] || defaultFormatter;\r\n  }\r\n})();","import React from \"react\";\r\nimport { Card } from \"../../../style\";\r\nimport { Table } from \"antd\";\r\nimport { getColor } from \"../utils/color\";\r\nimport { getKeys } from \"../utils/points\";\r\n\r\nexport default ({ points, legend }: { points: any, legend?: { label: string } }) => {\r\n  const tableProps = {\r\n    loading: points && points.length > 0 ? false : true,\r\n    style: { width: '100%' },\r\n    dataSource: getKeys(points).map((key: string, i: number) => ({ label: key, key: i, color: getColor(i) })),\r\n    columns: [\r\n      {\r\n        title: legend?.label,\r\n        dataIndex: 'label',\r\n        key: 'label',\r\n        render: (item: string) => <span className='capitalize'>{item}</span>\r\n      },\r\n      {\r\n        title: 'Color',\r\n        dataIndex: 'color',\r\n        key: 'color',\r\n        render: (color: string) => <span className='round' style={{ background: color }}></span>\r\n      }\r\n    ]\r\n  }\r\n\r\n  if (!legend) return null;\r\n  return (\r\n    <Card shadow width=\"100%\" >\r\n      <Table\r\n        pagination={false}\r\n        {...tableProps}\r\n      />\r\n    </Card>\r\n  )\r\n};","import { useState, useRef, useEffect } from \"react\";\r\n\r\nexport const useResize = ({ filterWidth } : { filterWidth?: number}) =>{\r\n    const [width, setWidth] = useState(300);\r\n    const container = useRef<any>(null);\r\n    const resize = () => setWidth(container?.current?.clientWidth);\r\n    useEffect(resize, [container?.current?.clientWidth, filterWidth]);\r\n    useEffect(() => {\r\n      window?.addEventListener(\"resize\", resize);\r\n      return () => window.removeEventListener(\"resize\", resize);\r\n    }, []);\r\n  \r\n    return {\r\n       container,\r\n       width\r\n    };\r\n  };","import React, { useEffect, useState } from \"react\";\r\nimport { Header, Grid, Button, Notification } from \"../../../style\";\r\nimport { primaryColor } from \"../../../config\";\r\nimport { overflow } from \"../../../utils/text\";\r\nimport { Charts } from \"../types\";\r\nimport charts from '../json/charts.json'\r\nimport api from \"../../../api\";\r\nimport logger from \"../../../utils/logger\";\r\n\r\nconst ChartHeader = ({\r\n  chartType,\r\n  chartTypes,\r\n  setChartType,\r\n  title, filter,\r\n  isPercent,\r\n  loading = false,\r\n  download,\r\n  eId,\r\n  queries\r\n}: any) => {\r\n  const [link, setLink] = useState('')\r\n\r\n\r\n  useEffect(() => {\r\n    if (eId && download && queries) {\r\n      const ts = Object.keys(queries)\r\n        .reduce((acc, key, i) => acc + `${i > 0 ? '&' : ''}${key}=${JSON.stringify(queries[key])}`, '')\r\n      api.downloadCSv(eId, download, ts)\r\n        .then((res: any) => {\r\n          if (res.success) {\r\n            setLink(res.csvExportUrl)\r\n          }\r\n        })\r\n        .catch((e) => logger.log(e))\r\n    }\r\n  }, [eId, queries])\r\n\r\n  return (\r\n    <Header\r\n      className=\"grid\"\r\n      color={primaryColor}\r\n      style={{\r\n        gridColumn: \"1/-1\",\r\n        width: \"100%\",\r\n        gridTemplateColumns: \"1fr auto auto\",\r\n        placeItems: \"start \",\r\n      }}\r\n      bold\r\n      size={4}\r\n    >\r\n      <Grid mobileLayout={false} customCols=\"auto 1fr auto\" gridGap=\".5em\" padding=\".2em .5em\"\r\n        width={'100%'}\r\n        style={{\r\n          placeItems: 'start',\r\n          borderRadius: \"1em\",\r\n          textTransform: \"capitalize\",\r\n          placeSelf: \"start\",\r\n        }}\r\n      >\r\n        <Header bold size={3.75} textAlign='left'>{overflow(title, 25)}</Header>\r\n        <div style={{ placeSelf: \"end\" }}>\r\n          {download && <Button\r\n            invert\r\n            minWidth=\"3em\"\r\n            margin='0 1em'\r\n            noBorder={true}\r\n            onClick={() => {\r\n              window.open(link)\r\n              Notification.success({ title: 'Success', message: 'Exporting Data to Excel' })\r\n            }}\r\n            faIcon={'fas fa-file-download'}\r\n            tooltip='Download the current data on Excel'\r\n          />}\r\n\r\n          {chartTypes?.length > 1 &&\r\n            charts.map(({ key, faIcon, label }) => (\r\n              chartTypes && <span key={key}>{chartTypes.includes(key) &&\r\n                <Button\r\n                  invert={chartType !== key}\r\n                  minWidth=\"3em\"\r\n                  disabled={loading || (isPercent && key !== Charts.multiLine)}\r\n                  noBorder={chartType !== key}\r\n                  onClick={() => setChartType(key as Charts)}\r\n                  faIcon={faIcon}\r\n                  tooltip={label}\r\n                />}\r\n              </span>\r\n            ))\r\n          }\r\n        </div>\r\n        {filter}\r\n      </Grid>\r\n    </Header>\r\n  )\r\n};\r\nexport default ChartHeader;","import React from \"react\";\r\nimport { Loader, Header } from \"../../../style\";\r\n\r\nconst Loading = ({ style }: any) => (\r\n    <div className=\"grid\" style={style}>\r\n      <div>\r\n        <Loader.Spinner />\r\n        <Header bold>Loading..</Header>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\nexport default Loading;","import React, { CSSProperties, useEffect, useState } from \"react\";\r\nimport { Card, Empty as EmptyEl } from \"../../style\";\r\nimport Graph from \"./components/graph\";\r\nimport LegendTable from \"./components/legend-table\";\r\nimport { Charts, ChartProps, MultiMetricsChartProps } from \"./types\";\r\nimport { useResize } from \"./hooks/resize\";\r\nimport ChartHeader from \"./components/header\";\r\nimport Loader from './components/loading';\r\nimport { useChartType } from \"./hooks/chart-type\";\r\nimport { useData, useCombinedData } from \"./hooks/data\";\r\n\r\nconst d100: CSSProperties = { height: '100%', width: '100%', textAlign: 'center', marginTop: \"1em\" };\r\nconst height = 400;\r\n\r\nconst Chart = ({ filter, loading, download, eId,  queries, metricDataStatus, legend, filterWidth, title, isPercent, chartTypes = [Charts.stackedBar], inChartLegend }: ChartProps) => {\r\n  const { chartType, setChartType } = useChartType({ chartTypes, isPercent })\r\n  const { container, width } = useResize({ filterWidth });\r\n  const { points } = useData(metricDataStatus.data?.timeSeriesResult);\r\n  return (\r\n    <>\r\n      <Card\r\n        placeSelf=\"stretch\"\r\n        shadow\r\n        grid\r\n        customCols={\"1fr\"}\r\n        gridGap={\"0 1em\"}\r\n        className=\"slide-up noselect\"\r\n      >\r\n        <ChartHeader\r\n          chartType={chartType}\r\n          chartTypes={chartTypes}\r\n          setChartType={setChartType}\r\n          title={title}\r\n          loading={loading}\r\n          isPercent={isPercent}\r\n          filter={filter}\r\n          download={download}\r\n          eId={eId}\r\n          queries={ queries}\r\n        />\r\n        <div style={{ width: \"100%\", marginTop: \"1em\" }} ref={container}>\r\n          {metricDataStatus?.loading\r\n            ? <Loader style={{ ...d100, height }} />\r\n            : metricDataStatus?.error || !metricDataStatus?.data!?.timeSeriesResult\r\n              ? <EmptyEl text=\"Error Occured\" style={{ ...d100, height }} />\r\n              : <Graph\r\n                  inChartLegend={inChartLegend}\r\n                  chartType={chartType}\r\n                  size={{ height, width }}\r\n                  data={metricDataStatus.data as any}\r\n                />\r\n          }\r\n        </div>\r\n      </Card>\r\n      <LegendTable\r\n        legend={legend ? legend : undefined}\r\n        points={points}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst MultiMetricsChart = ({ filter, metricDataStatuses, legend, filterWidth, title, inChartLegend, fixedAlignment, download, eId, queries}: MultiMetricsChartProps) => {\r\n  const { container, width } = useResize({ filterWidth });\r\n  const isLoading = metricDataStatuses.reduce((acc, curr) => acc || curr.loading, false);\r\n  const hasError = metricDataStatuses.reduce((acc, curr) => acc || curr.error || !curr?.data?.timeSeriesResult, false);\r\n  const datas = metricDataStatuses.map(({ data }) => data);\r\n  const timeSeries = metricDataStatuses.map(({ data }) => data?.timeSeriesResult)\r\n  const { points } = useCombinedData(timeSeries as any);\r\n  return (\r\n    <>\r\n      <Card\r\n        placeSelf=\"stretch\"\r\n        shadow\r\n        grid\r\n        customCols={\"1fr auto\"}\r\n        gridGap={\"0 1em\"}\r\n        className=\"slide-up noselect\"\r\n      >\r\n        <ChartHeader\r\n          title={title}\r\n          filter={filter}\r\n          download={download}\r\n          eId={eId}\r\n          queries={queries}\r\n        />\r\n        <div style={{ width: \"100%\", marginTop: \"1em\" }} ref={container}>\r\n          {isLoading\r\n            ? <Loader style={{ ...d100, height }} />\r\n            : hasError\r\n              ? <EmptyEl text=\"Error Occured\" style={{ ...d100, height }} />\r\n              :\r\n              <Graph.Multi\r\n                fixedAlignment={fixedAlignment}\r\n                inChartLegend={inChartLegend}\r\n                chartType={Charts.combined}\r\n                size={{ height, width }}\r\n                datas={datas as any}\r\n              />\r\n          }\r\n        </div>\r\n      </Card>\r\n      <LegendTable\r\n        legend={legend ? legend : undefined}\r\n        points={points}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nChart.Multi = MultiMetricsChart\r\nexport default Chart;","import { useState, useEffect } from \"react\";\r\nimport { Charts } from \"../types\";\r\n\r\nexport const useChartType = ({ chartTypes, isPercent}: any) =>{\r\n    const [chartType, setChartType] = useState<Charts>(chartTypes[0] || Charts.stackedBar);\r\n    useEffect(() => {\r\n      if (isPercent)\r\n        setChartType(Charts.multiLine)\r\n    }, [isPercent]);\r\n\r\n    return { chartType, setChartType };\r\n  }; ","import { useReducer } from \"react\";\r\nimport { TimeSeries } from \"../model/domain/metrics\";\r\nimport { moment, defaultInterval } from '../utils/time';\r\n\r\nexport const defaultTimeSeries: TimeSeries.Query = {\r\n  metricType: \"garage_occupancy_count\",\r\n  resourceIds: [],\r\n  crossSeriesReducer: \"NONE\",\r\n  interval: defaultInterval()\r\n};\r\n\r\nconst defaultDayFilter: TimeSeries.DayFilterQuery = {\r\n  days: [true, true, true, true, true, true, true],\r\n  hours: [8, 18]\r\n}\r\n\r\nexport enum actions {\r\n  SET_GARAGES,\r\n  SET_ALIGNMENT,\r\n  SET_METRICTYPE,\r\n  SET_INTERVAL,\r\n  REFRESH,\r\n  SET_DAY_FILTER\r\n};\r\n\r\nexport function reducer(state: TimeSeries.Query, action: any) {\r\n  const { startTime: start, endTime: end } = state.interval;\r\n  const setTimeseries = (props: any) => ({ ...state, ...props });\r\n\r\n  const getInterval = (props: any) => {\r\n    let { startTime = start, endTime = end } = props;\r\n    startTime = moment(startTime);\r\n    endTime = moment(endTime);\r\n    const shouldSwap = startTime > endTime;\r\n    return {\r\n      startTime: (shouldSwap ? endTime : startTime).toISOString(),\r\n      endTime: (shouldSwap ? startTime : endTime).toISOString()\r\n    };\r\n  };\r\n\r\n  switch (action.type) {\r\n    case actions.SET_METRICTYPE:\r\n      return setTimeseries({ metricType: action.payload.metricType });\r\n\r\n    case actions.SET_GARAGES:\r\n      return setTimeseries({ resourceIds: action.payload.resourceIds });\r\n\r\n    case actions.SET_INTERVAL:\r\n      return setTimeseries({ interval: getInterval(action.payload.interval) });\r\n\r\n    case actions.SET_ALIGNMENT:\r\n      const alignment = action.payload || null;\r\n      return setTimeseries({ alignment });\r\n\r\n    case actions.SET_DAY_FILTER:\r\n      const dayFilter = !action.payload ? null : validateDayFilter({ ...state.dayFilter, ...action.payload });\r\n      return setTimeseries({ dayFilter });\r\n\r\n    case actions.REFRESH:\r\n      return action.payload\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nconst validateDayFilter = (dayFilter: TimeSeries.DayFilterQuery) => {\r\n  const { hours: [start, end] } = dayFilter;\r\n\r\n  if (end === 0) {\r\n    dayFilter = { ...dayFilter, hours: [start, 24] }\r\n  }\r\n\r\n  if (start === 24) {\r\n    dayFilter = { ...dayFilter, hours: [0, end] }\r\n  }\r\n\r\n  if (dayFilter.hours[0] > dayFilter.hours[1]) {\r\n    dayFilter = { ...dayFilter, hours: [end, start] }\r\n  }\r\n\r\n  return dayFilter;\r\n}\r\nconst useTimeseries = (initialState = defaultTimeSeries) => {\r\n  const [timeseries, dispatch] = useReducer(reducer, initialState);\r\n  const setGarages = (resourceIds: string[]) => dispatch({ type: actions.SET_GARAGES, payload: { resourceIds } });\r\n\r\n  const setMetric = (metricType: string) => dispatch({ type: actions.SET_METRICTYPE, payload: { metricType } });\r\n  const setAlignment = (e: any) => dispatch({ type: actions.SET_ALIGNMENT, payload: e });\r\n  const setDayFilter = (e = defaultDayFilter) => dispatch({ type: actions.SET_DAY_FILTER, payload: e })\r\n  const setInterval = (interval: any) => dispatch({ type: actions.SET_INTERVAL, payload: { interval } })\r\n  const refresh = (timeseries: any) => dispatch({ type: actions.REFRESH, payload: timeseries })\r\n  return {\r\n    timeseries,\r\n    actions: {\r\n      setGarages,\r\n      setAlignment,\r\n      setMetric,\r\n      setInterval,\r\n      setDayFilter,\r\n      refresh\r\n    }\r\n  }\r\n}\r\n\r\nexport default useTimeseries;","import { useState, useEffect } from \"react\";\r\nimport API from \"../api\";\r\nimport { TimeSeries } from \"../model/domain/metrics\";\r\nimport { moment, Moment, defaultInterval } from '../utils/time';\r\nimport logger from \"../utils/logger\";\r\n\r\nexport interface MetricDataStatus {\r\n  error: boolean;\r\n  loading: boolean;\r\n  data: {\r\n    timeSeriesResult: TimeSeries.Result | null;\r\n    metricDescriptor: TimeSeries.MetricDescriptor;\r\n  } | null;\r\n}\r\n\r\nexport const useMetricData = ({ timeseries, interval = defaultInterval(), eId }: any) => {\r\n  const [state, setState] = useState<TimeSeries.Query>({ interval, ...timeseries, });\r\n  const {\r\n    interval: { startTime, endTime },\r\n  } = state;\r\n  \r\n  const [metricDataStatus, setMetricDataStatus] = useState<MetricDataStatus>({\r\n    error: false,\r\n    loading: false,\r\n    data: null,\r\n  });\r\n\r\n  const setInterval = (interval: any) => setState({ ...state, interval });\r\n\r\n  const setEndTime = (newEndtime: Moment | null) => {\r\n    if (newEndtime) {\r\n      setState({\r\n        ...state,\r\n        interval: getInterval(moment(startTime), newEndtime)\r\n      });\r\n    }\r\n  };\r\n\r\n  const setStartTime = (newStartTime: Moment | null) => {\r\n    if (newStartTime) {\r\n      setState({\r\n        ...state,\r\n        interval: getInterval(newStartTime, moment(endTime)),\r\n      });\r\n    }\r\n  };\r\n\r\n  const getInterval = (start: Moment, end: Moment) => {\r\n    const shouldSwap = start > end;\r\n    return {\r\n      startTime: (shouldSwap ? end : start).toISOString(),\r\n      endTime: (shouldSwap ? start : end).toISOString()\r\n    };\r\n  };\r\n\r\n  const getMetricData = async (query: TimeSeries.Query) => {\r\n    try {\r\n      setMetricDataStatus({ data: null, loading: true, error: false });\r\n      const res = await Promise.all(\r\n        [API.getTimeSeries(eId, query), API.getTimeSeriesMetricDescriptor(eId, query.metricType)]);\r\n      const [{ timeSeriesResult }, { metricDescriptor }] = res;\r\n      setMetricDataStatus({\r\n        loading: false,\r\n        error: false,\r\n        data: {\r\n          timeSeriesResult,\r\n          metricDescriptor\r\n        }\r\n      });\r\n    } catch (e) {\r\n      logger.log(e)\r\n      setMetricDataStatus({\r\n        loading: false,\r\n        error: true,\r\n        data: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => { getMetricData({ ...state }) }, [state]);\r\n  return {\r\n    metricDataStatus,\r\n    interval: state.interval,\r\n    setEndTime,\r\n    setMetricDataStatus,\r\n    setStartTime,\r\n    timeseries: state,\r\n    setInterval,\r\n    refresh: (d: any) => {\r\n      const query = { ...{ interval: state.interval }, ...d };\r\n      setState(query)\r\n    }\r\n  };\r\n};\r\n\r\nexport default { useMetricData };","import React, { useState, useEffect } from 'react';\r\nimport { Header, Card, Text, Button, Grid } from '../style';\r\nimport { DatePicker, TimePicker, Divider, Select } from \"antd\";\r\nimport { moment, Moment, FORMAT_TIME } from '../utils/time';\r\nimport { Garage } from '../model/domain/garage';\r\nimport Label from './label';\r\nimport { TimeSeries } from '../model/domain/metrics';\r\n\r\nconst Filter = ({ open, toggle, filterWidth, loading: loadingTimeSeries, submit, reset, actions, timeseries, options, hideTimeSelection }: any) => {\r\n    const { timeframes, aggregations, metrics, resources } = options;\r\n    const [custom, setCustom] = useState(false);\r\n    const [timeframeLabel, setTimeframeLabel] = useState('')\r\n    const disabledDate = (cur: Moment | null) => cur ? cur > moment() : false;\r\n\r\n    const style = { height: \"calc(100% - 4em)\", width: filterWidth, position: \"fixed\", zIndex: 5, top: '4em', right: 0 };\r\n    const props = { style: { width: '100%' }, disabled: loadingTimeSeries };\r\n    const dividerStyle = { marginBottom: '.5em', fontSize: '.95em', color: 'gray' }\r\n    const gridProps = hideTimeSelection ? { customCols: '1fr', gridGap: 0, maxHeight: '100%' } : { cols: 2, gridGap: '0 1em' };\r\n    const reverse = {\r\n        points: ['bl', 'tl'], // align dropdown bottom-left to top-left of input element\r\n        offset: [0, -4], // align offset\r\n        overflow: {\r\n            adjustX: 0,\r\n            adjustY: 0, // do not auto flip in y-axis\r\n        },\r\n    }\r\n\r\n    const handlePresetChange = (e: any) => {\r\n        if (e.value === null) {\r\n            setCustom(true);\r\n            setTimeframeLabel('Custom');\r\n        }\r\n        else {\r\n            setCustom(false);\r\n            actions.setInterval(e.value);\r\n        }\r\n    }\r\n\r\n    useEffect(() => setTimeframeLabel(getDefaultTimeframe(timeframes, timeseries.interval)), [timeseries])\r\n\r\n    if (!open) return null;\r\n    return (\r\n        <Card grid shadow style={style} margin=\"0\" placeItems=\"stretch\" gridGap='0' className='slide-in'>\r\n            <Header textAlign=\"left\" className=\"slide-up\">\r\n                <i className=\"fa fa-times pointer\" onClick={() => toggle()}></i>\r\n                <span className=\"pad\">Filters</span>\r\n            </Header>\r\n            {timeframes && <div>\r\n                <Divider style={dividerStyle}>Timeframe </Divider>\r\n                <div className=\"slide-up\">\r\n\r\n                    <Text textAlign=\"left\" bold>Presets\r\n                     <Label label={'Interval for the graph data'} />\r\n                    </Text>\r\n                    <Select\r\n                        onChange={(e: any) => handlePresetChange(JSON.parse(e))}\r\n                        {...props}\r\n                        value={timeframeLabel}\r\n                    >\r\n                        {timeframes.map(({ label, enteries }: any) => (\r\n                            <Select.OptGroup label={label}>\r\n                                {enteries.map((entry: any) => (\r\n                                    <Select.Option value={JSON.stringify(entry)}>\r\n                                        {entry.label}\r\n                                    </Select.Option>)\r\n                                )}\r\n                            </Select.OptGroup>))}\r\n                    </Select>\r\n                </div>\r\n\r\n                <div className=\"slide-up\" style={{ marginTop: '1em' }}>\r\n                    <Text textAlign=\"left\" bold>From</Text>\r\n                    <Grid {...gridProps} mobileLayout={false}>\r\n                        <DatePicker\r\n                            disabled={!custom}\r\n                            clearIcon={false}\r\n                            disabledDate={disabledDate}\r\n                            style={{ borderRadius: 8, width: '100%' }}\r\n                            onChange={(startTime) => actions.setInterval({ startTime })}\r\n                            value={moment(timeseries.interval.startTime)}\r\n                        />\r\n                        {!hideTimeSelection && <TimePicker\r\n                            disabled={!custom}\r\n                            clearIcon={false}\r\n                            disabledDate={disabledDate}\r\n                            use12Hours\r\n                            format={FORMAT_TIME}\r\n                            minuteStep={15}\r\n                            style={{ borderRadius: 8, width: '100%' }}\r\n                            onChange={(startTime) => actions.setInterval({ startTime })}\r\n                            value={moment(timeseries.interval.startTime)}\r\n                        />}\r\n                    </Grid>\r\n                </div>\r\n\r\n                <div className=\"slide-up\" style={{ marginTop: '1em' }}>\r\n                    <Text textAlign=\"left\" bold>\r\n                        To\r\n                     </Text>\r\n                    <Grid  {...gridProps} gridGap='0 1em' mobileLayout={false}>\r\n                        <DatePicker\r\n                            clearIcon={false}\r\n                            disabled={!custom}\r\n                            disabledDate={disabledDate}\r\n                            style={{ borderRadius: 8, width: '100%' }}\r\n                            onChange={(endTime) => actions.setInterval({ endTime })}\r\n                            value={moment(timeseries.interval.endTime)}\r\n                        />\r\n\r\n                        {!hideTimeSelection && <TimePicker\r\n                            disabledDate={disabledDate}\r\n                            use12Hours\r\n                            clearIcon={false}\r\n                            format={FORMAT_TIME}\r\n                            disabled={!custom}\r\n                            style={{ borderRadius: 8, width: '100%' }}\r\n                            onChange={(endTime) => actions.setInterval({ endTime })}\r\n                            value={moment(timeseries.interval.endTime)}\r\n                        />}\r\n                    </Grid>\r\n                </div>\r\n            </div>}\r\n            {metrics && <div className=\"slide-up\">\r\n                <Divider style={dividerStyle}>Metric</Divider>\r\n                <Text bold textAlign=\"left\">Select Measurement\r\n                <Label label={'Metric Type'} />\r\n                </Text>\r\n                <Select\r\n                    {...props}\r\n                    placeholder=\"Select\"\r\n                    value={timeseries.metricType}\r\n                    onChange={actions.setMetric}\r\n                >\r\n                    {metrics.map(({ label, value }: any) => (\r\n                        <Select.Option\r\n                            className='capitalize'\r\n                            value={value}\r\n                        >\r\n                            {label}\r\n                        </Select.Option>))\r\n                    }\r\n                </Select>\r\n            </div>}\r\n\r\n            {resources && <div className=\"slide-up\">\r\n                <Divider style={dividerStyle}>Resources</Divider>\r\n                <Text bold textAlign=\"left\">Select Garages</Text>\r\n                <Select\r\n                    {...props}\r\n                    mode=\"multiple\"\r\n                    placeholder=\"All Garages\"\r\n                    value={timeseries.resourceIds}\r\n                    onChange={actions.setGarages}\r\n                >\r\n                    {resources.map(({ name, id }: Garage) => <Select.Option value={id}>{name}</Select.Option>)}\r\n                </Select>\r\n            </div>}\r\n\r\n            {aggregations && <div className=\"slide-up\">\r\n                <Divider style={dividerStyle}>Aggregation</Divider>\r\n                <Text bold textAlign=\"left\">{aggregations.label}\r\n                    <Label label={'Time period for the data(Min/Max) to be aggregated'} />\r\n                </Text>\r\n                <Select\r\n                    onChange={(e: any) => {\r\n                        const parsedValue = JSON.parse(e);\r\n                        actions.setDayFilter(parsedValue.timeSelection ? undefined : null);\r\n                        actions.setAlignment(parsedValue.value)\r\n                    }}\r\n                    {...props}\r\n                    value={getAlignment(timeseries.alignment, timeseries.dayFilter)}\r\n                    defaultValue={\"None\"}\r\n                    dropdownAlign={reverse}\r\n                >\r\n                    {aggregations.values.map((props: any) => <Select.Option value={JSON.stringify(props)}>\r\n                        {props.label}\r\n                    </Select.Option>)}\r\n                </Select>\r\n            </div>}\r\n\r\n            {timeseries?.dayFilter &&\r\n                <div className=\"slide-up\">\r\n                    <Text bold textAlign=\"left\">{aggregations.label}\r\n                        <Label label={'Time period for the data(Min/Max) to be aggregated'} />\r\n                    </Text>\r\n                    <Grid  {...gridProps} gridGap='0 1em' mobileLayout={false}>\r\n                        <TimePicker\r\n                            use12Hours\r\n                            clearIcon={false}\r\n                            format={FORMAT_TIME}\r\n                            showMinute={false}\r\n                            style={{ borderRadius: 8, width: '100%' }}\r\n                            onChange={(e) => actions.setDayFilter({ hours: [e?.hour(), timeseries.dayFilter.hours[1]] })}\r\n                            value={moment()\r\n                                .set('hour', timeseries.dayFilter.hours[0])\r\n                                .set('minute', 0)}\r\n                            dropdownAlign={reverse}\r\n                        />\r\n\r\n                        <TimePicker\r\n                            use12Hours\r\n                            clearIcon={false}\r\n                            showMinute={false}\r\n                            format={FORMAT_TIME}\r\n                            style={{ borderRadius: 8, width: '100%' }}\r\n                            onChange={(e) => actions.setDayFilter({ hours: [timeseries.dayFilter.hours[0], e?.hour()] })}\r\n                            value={moment()\r\n                                .set('hour', timeseries.dayFilter.hours[1])\r\n                                .set('minute', 0)\r\n                            }\r\n                            dropdownAlign={reverse}\r\n                        />\r\n\r\n                        <Text\r\n                            bold\r\n                            textAlign=\"right\"\r\n                            style={{ gridColumn: '1/-1' }}\r\n                            width='100%'\r\n                        >\r\n                            {`${timeseries.dayFilter.hours[1] - timeseries.dayFilter.hours[0]} hours`}\r\n                        </Text>\r\n                    </Grid>\r\n                </div>}\r\n\r\n            <Grid cols={reset ? 2 : 1} placeItems='stretch' placeSelf='end stretch'>\r\n                <Button\r\n                    shadow\r\n                    onClick={submit}\r\n                    disabled={loadingTimeSeries}\r\n                >\r\n                    Submit\r\n                </Button>\r\n                {reset && <Button\r\n                    onClick={reset}\r\n                    disabled={loadingTimeSeries}\r\n                    noBorder\r\n                    invert\r\n                    shadow\r\n                >\r\n                    Reset\r\n                </Button>}\r\n            </Grid>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst getAlignment = (alignment: { alignmentReducer: string, alignmentPeriod: string } | null, dayFilter: TimeSeries.DayFilterQuery) => {\r\n    if (!alignment) return 'None';\r\n\r\n    const period = !dayFilter ? 'Daily' : 'Hourly';\r\n    const reducer = alignment.alignmentReducer === 'MIN' ? 'Min' : 'Max';\r\n    return `${period} ${reducer}`;\r\n}\r\n\r\nconst getDefaultTimeframe = (timeframes: any, interval: any) => {\r\n    if (!timeframes?.startTime || !interval?.startTime || interval?.endTime || !timeframes?.endTime) return;\r\n    const equals = (t1: any, t2: any) => t1.startTime === t2.startTime && t1.endTime === t2.endTime\r\n    const intoInterval = ({ startTime, endTime }: any) => ({\r\n        startTime: typeof startTime === 'string' ? startTime : startTime.toISOString(),\r\n        endTime: typeof endTime === 'string' ? endTime : endTime.toISOString()\r\n    })\r\n\r\n    for (let i = 0; i < timeframes.length; i++) {\r\n        const enteries = timeframes[i].enteries;\r\n        for (let j = 0; j < enteries.length; j++) {\r\n            const timeframe = enteries[j]\r\n            if (timeframe?.value && equals(intoInterval(timeframe.value), intoInterval(interval))) {\r\n                return timeframe.label\r\n            }\r\n        }\r\n    }\r\n    for (let i = 0; i < timeframes.length; i++) {\r\n        const enteries = timeframes[i].enteries;\r\n        for (let j = 0; j < enteries.length; j++) {\r\n            const timeframe = enteries[j]\r\n            if (timeframe.defaultValue)\r\n                return timeframe.label;\r\n        }\r\n    }\r\n    return 'None';\r\n}\r\n\r\nexport default Filter;","import { defaultInterval, yearToDate, getInterval } from \"../../../utils/time\";\r\n\r\nconst json = {\r\n   \"timeframes\": [\r\n      {\r\n         \"label\": \"Custom\",\r\n         \"enteries\": [\r\n            {\r\n               \"value\": null,\r\n               \"label\": \"Custom\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"label\": \"To-Date\",\r\n         \"enteries\": [\r\n            {\r\n               \"value\": defaultInterval(),\r\n               \"label\": \"Today\",\r\n               \"defaultValue\": true\r\n            },\r\n            {\r\n               \"value\": yearToDate(),\r\n               \"label\": \"Year To Date\"\r\n            },\r\n         ]\r\n      },\r\n      {\r\n         \"label\": \"Interval\",\r\n         \"enteries\": [\r\n            {\r\n               \"value\": getInterval(7),\r\n               \"label\": \"Last 1 Week\"\r\n            },\r\n            {\r\n               \"value\": getInterval(30),\r\n               \"label\": \"Last 1 Month\"\r\n            },\r\n            {\r\n               \"value\": getInterval(90),\r\n               \"label\": \"Last 3 Months\"\r\n            },\r\n            {\r\n               \"value\": getInterval(365),\r\n               \"label\": \"Last 1 Year\"\r\n            },\r\n         ]\r\n      }\r\n   ],\r\n   \"aggregations\":  {\r\n      \"label\": \"Max/Min Occupancy Selection\",\r\n      \"values\": [\r\n      {\r\n         \"value\": null,\r\n         \"label\": \"None\"\r\n      },\r\n      {\r\n         \"label\": \"Hourly Max\",\r\n         \"timeSelection\" : true,\r\n         \"value\": {\r\n            \"alignmentReducer\": \"MAX\",\r\n            \"alignmentPeriod\": \"1d\"\r\n         }\r\n      },\r\n      {\r\n         \"label\": \"Daily Max\",\r\n         \"timeSelection\" : false,  \r\n         \"value\": {\r\n            \"alignmentReducer\": \"MAX\",\r\n            \"alignmentPeriod\": \"1d\",\r\n         }\r\n      },\r\n      {\r\n         \"label\": \"Hourly Min\",\r\n         \"timeSelection\" : true,\r\n         \"value\": {\r\n            \"alignmentReducer\": \"MIN\",\r\n            \"alignmentPeriod\": \"1d\"\r\n         }\r\n      },\r\n      {\r\n         \"label\": \"Daily Min\",\r\n         \"timeSelection\" : false, \r\n         \"value\": {\r\n            \"alignmentReducer\": \"MIN\",\r\n            \"alignmentPeriod\": \"1d\"\r\n         }\r\n      }\r\n   ]}\r\n}\r\n\r\nexport default json;","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Button } from '../../../style';\r\nimport Chart from '../../../components/chart';\r\nimport { useMetricData } from '../../../hooks/metrics';\r\nimport Filter from '../../../components/filter';\r\nimport { useSelector } from 'react-redux';\r\nimport useTimeseries from '../../../hooks/timeseries';\r\nimport options from './filter-options';\r\nimport useGarages from '../../../hooks/garage';\r\nimport chart from './chart.json';\r\nimport { defaultInterval } from '../../../utils/time';\r\nimport { TimeSeries } from '../../../model/domain/metrics';\r\n\r\nconst defaultTimeSeries = {\r\n  ...chart.timeSeriesQuery,\r\n  interval: defaultInterval()\r\n} as TimeSeries.Query;\r\n\r\nconst Analytics = () => {\r\n  const [open, setOpen] = useState(true);\r\n  const [toggle, setToggle] = useState(false);\r\n  const eId = useSelector(({ user }: any) => user.enterprise.id);\r\n  const { metricDataStatus, refresh, timeseries: currentTimeseries } = useMetricData({\r\n    timeseries: defaultTimeSeries,\r\n    eId\r\n  });\r\n\r\n  const { timeseries, actions } = useTimeseries(defaultTimeSeries);\r\n  const isPercent = timeseries?.metricType?.split('_')?.includes('percent') || false;\r\n  const { garages: resources } = useGarages({ eId });\r\n\r\n  const props = {\r\n    filterWidth: 350,\r\n    loading: metricDataStatus.loading,\r\n    submit: () => {\r\n      setTimeout(() => setOpen(false), 400);\r\n      refresh(timeseries)\r\n    },\r\n    reset: () => {\r\n      setTimeout(() => setOpen(false), 400);\r\n      actions.refresh(defaultTimeSeries)\r\n      refresh(defaultTimeSeries)\r\n    },\r\n    actions,\r\n    timeseries,\r\n    options: { ...options, resources }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (toggle) {\r\n      refresh(timeseries);\r\n      setToggle(false)\r\n    }\r\n  }, [timeseries]);\r\n\r\n  const chart_ = chart as any; //to mute ts error\r\n\r\n  return (\r\n    <Grid placeItems=\"start stretch\" padding=\"1em\" height=\"100%\">\r\n      <Grid cols=\"1\" gridGap=\"0 1em\">\r\n        <Chart\r\n          isPercent={isPercent}\r\n          className='slide-up'\r\n          metricDataStatus={metricDataStatus}\r\n          legend={{ label: 'Garages' }}\r\n          filter={\r\n            <span>\r\n              <Button\r\n                invert={timeseries.metricType !== 'garage_occupancy_count'}\r\n                noBorder={timeseries.metricType !== 'garage_occupancy_count'}\r\n                onClick={() => {\r\n                  actions.setMetric('garage_occupancy_count');\r\n                  setToggle(true)\r\n                }}\r\n                faIcon={'fas fa-sort-numeric-up'}\r\n                tooltip='Switch to count'\r\n                minWidth=\"3em\"\r\n                margin='0 0 0 1em'\r\n              />\r\n              <Button\r\n                invert={timeseries.metricType !== 'garage_occupancy_percent'}\r\n                noBorder={timeseries.metricType !== 'garage_occupancy_percent'}\r\n                minWidth=\"3em\"\r\n                onClick={() => {\r\n                  actions.setMetric('garage_occupancy_percent');\r\n                  setToggle(true)\r\n                }\r\n                }\r\n                faIcon={'fas fa-percentage'}\r\n                tooltip='Switch to percent'\r\n              />\r\n              {!open ?\r\n                <Button\r\n                  placeSelf=\"end\"\r\n                  rounded\r\n                  shadow\r\n                  minWidth=\"3em\"\r\n                  onClick={() => setOpen(!open)}\r\n                  faIcon={`fa fa-filter`}\r\n                /> : null}\r\n            </span>\r\n          }\r\n          {...chart_}\r\n          eId={eId}\r\n          queries={{timeSeriesQuery : timeseries}}\r\n        />\r\n        <Filter {...props} open={open} toggle={() => { setOpen(false); actions.refresh(currentTimeseries) }} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Analytics;","import {  InputNumber } from \"antd\";\r\nimport React from \"react\";\r\nimport { GarageOccupancyTableItem as Item } from \"../../../model/domain/garage\";\r\n\r\nconst days = [\r\n   {\r\n    title: \"Time\",\r\n    dataIndex: \"sun\",\r\n   },\r\n  {\r\n    title: \"Sunday\",\r\n    dataIndex: \"sun\",\r\n  },\r\n  {\r\n    title: \"Monday\",\r\n    dataIndex: \"mon\",\r\n  },\r\n  {\r\n    title: \"Tuesday\",\r\n    dataIndex: \"tue\",\r\n  },\r\n  {\r\n    title: \"Wednesday\",\r\n    dataIndex: \"wed\",\r\n  },\r\n  {\r\n    title: \"Thrusday\",\r\n    dataIndex: \"thur\",\r\n  },\r\n  {\r\n    title: \"Friday\",\r\n    dataIndex: \"fri\",\r\n  },\r\n  {\r\n    title: \"Saturday\",\r\n    dataIndex: \"sat\",\r\n  },\r\n];\r\n\r\ntype Interval = { startHour: [number, number], endHour: [number, number ] }\r\n\r\nconst getTime = (range : Interval)=>{\r\n    const [hour1, min1 ] = range.startHour;\r\n    const [hour2, min2 ] = range.endHour;\r\n    const period = hour1 >= 12? 'PM' : 'AM'\r\n    return `${format(hour1)}:${pad(min1)+ period} -\\n ${format(hour2)}:${pad(min2) + period}`\r\n}\r\n\r\nconst pad = (digit: number) => String(digit < 10? `0${digit}` : digit);\r\n\r\nconst to12hours = (hour : number) => Math.abs((hour - 12) !== 0? (hour - 12) : 12);\r\n\r\nconst format = (hour : number) => pad(to12hours(hour));\r\n\r\nconst columns = ( edit = false, index = 0, setFieldValue = (e : any,f: any, g: any)=>{}) => {\r\n    return days.map(({title, dataIndex})=>{\r\n        return {\r\n            title : title !== 'Time'? title : <div>{title} &nbsp;&nbsp; <i className=\"fa fa-clock\"></i></div>,\r\n            dataIndex,\r\n            key: dataIndex,\r\n            render: (item: Item, _: any, i: number) =>{\r\n                const handleChange = (e: any)=> setFieldValue(dataIndex, i, {...item, occupancy : Math.floor(e/100)})\r\n                const occupancy = Math.floor(item.occupancy * 100);\r\n                return (title !== 'Time'? \r\n                    edit? \r\n                        <InputNumber \r\n                            className={`${dataIndex} ${i}`}\r\n                            min={0}\r\n                            max={100}  \r\n                            style={{placeSelf: \"end\", width: \"60px\"}}\r\n                            defaultValue={occupancy}\r\n                            onChange={handleChange} \r\n                            precision={0}\r\n                            name={\"maxOccupancy\"} \r\n                        /> : \r\n                        `${occupancy}%` : \r\n                   <b>{getTime(item.interval)}</b>\r\n                   );\r\n          }\r\n        }\r\n    })\r\n}\r\n\r\nexport default columns;\r\n","export const defaultTable =\r\n{\r\n        \"title\": \"\",\r\n        \"table\": {\r\n            \"sun\": [\r\n                { \"interval\": { \"startHour\": [0, 0], \"endHour\": [0, 59] }, \"occupancy\":   0.20 },\r\n                { \"interval\": { \"startHour\": [1, 0], \"endHour\": [1, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [2, 0], \"endHour\": [2, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [3, 0], \"endHour\": [3, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [4, 0], \"endHour\": [4, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [5, 0], \"endHour\": [5, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [6, 0], \"endHour\": [6, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [7, 0], \"endHour\": [7, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [8, 0], \"endHour\": [8, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [9, 0], \"endHour\": [9, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [10, 0], \"endHour\": [10, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [11, 0], \"endHour\": [11, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [12, 0], \"endHour\": [12, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [13, 0], \"endHour\": [13, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [14, 0], \"endHour\": [14, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [15, 0], \"endHour\": [15, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [16, 0], \"endHour\": [16, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [17, 0], \"endHour\": [17, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [18, 0], \"endHour\": [18, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [19, 0], \"endHour\": [19, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [20, 0], \"endHour\": [20, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [21, 0], \"endHour\": [21, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [22, 0], \"endHour\": [22, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [23, 0], \"endHour\": [23, 59] }, \"occupancy\": 0.1 }\r\n            ],\r\n            \"mon\": [\r\n                { \"interval\": { \"startHour\": [0, 0], \"endHour\": [0, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [1, 0], \"endHour\": [1, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [2, 0], \"endHour\": [2, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [3, 0], \"endHour\": [3, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [4, 0], \"endHour\": [4, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [5, 0], \"endHour\": [5, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [6, 0], \"endHour\": [6, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [7, 0], \"endHour\": [7, 59] }, \"occupancy\":   0.5 },\r\n                { \"interval\": { \"startHour\": [8, 0], \"endHour\": [8, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [9, 0], \"endHour\": [9, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [10, 0], \"endHour\": [10, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [11, 0], \"endHour\": [11, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [12, 0], \"endHour\": [12, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [13, 0], \"endHour\": [13, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [14, 0], \"endHour\": [14, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [15, 0], \"endHour\": [15, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [16, 0], \"endHour\": [16, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [17, 0], \"endHour\": [17, 59] }, \"occupancy\": 0.5 },\r\n                { \"interval\": { \"startHour\": [18, 0], \"endHour\": [18, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [19, 0], \"endHour\": [19, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [20, 0], \"endHour\": [20, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [21, 0], \"endHour\": [21, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [22, 0], \"endHour\": [22, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [23, 0], \"endHour\": [23, 59] }, \"occupancy\": 0.1 }\r\n            ],\r\n            \"tue\": [\r\n                { \"interval\": { \"startHour\": [0, 0], \"endHour\": [0, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [1, 0], \"endHour\": [1, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [2, 0], \"endHour\": [2, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [3, 0], \"endHour\": [3, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [4, 0], \"endHour\": [4, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [5, 0], \"endHour\": [5, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [6, 0], \"endHour\": [6, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [7, 0], \"endHour\": [7, 59] }, \"occupancy\":   0.5 },\r\n                { \"interval\": { \"startHour\": [8, 0], \"endHour\": [8, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [9, 0], \"endHour\": [9, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [10, 0], \"endHour\": [10, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [11, 0], \"endHour\": [11, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [12, 0], \"endHour\": [12, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [13, 0], \"endHour\": [13, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [14, 0], \"endHour\": [14, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [15, 0], \"endHour\": [15, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [16, 0], \"endHour\": [16, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [17, 0], \"endHour\": [17, 59] }, \"occupancy\": 0.5 },\r\n                { \"interval\": { \"startHour\": [18, 0], \"endHour\": [18, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [19, 0], \"endHour\": [19, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [20, 0], \"endHour\": [20, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [21, 0], \"endHour\": [21, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [22, 0], \"endHour\": [22, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [23, 0], \"endHour\": [23, 59] }, \"occupancy\": 0.1 }\r\n            ],\r\n            \"wed\": [\r\n                { \"interval\": { \"startHour\": [0, 0], \"endHour\": [0, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [1, 0], \"endHour\": [1, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [2, 0], \"endHour\": [2, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [3, 0], \"endHour\": [3, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [4, 0], \"endHour\": [4, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [5, 0], \"endHour\": [5, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [6, 0], \"endHour\": [6, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [7, 0], \"endHour\": [7, 59] }, \"occupancy\":   0.5 },\r\n                { \"interval\": { \"startHour\": [8, 0], \"endHour\": [8, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [9, 0], \"endHour\": [9, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [10, 0], \"endHour\": [10, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [11, 0], \"endHour\": [11, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [12, 0], \"endHour\": [12, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [13, 0], \"endHour\": [13, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [14, 0], \"endHour\": [14, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [15, 0], \"endHour\": [15, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [16, 0], \"endHour\": [16, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [17, 0], \"endHour\": [17, 59] }, \"occupancy\": 0.5 },\r\n                { \"interval\": { \"startHour\": [18, 0], \"endHour\": [18, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [19, 0], \"endHour\": [19, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [20, 0], \"endHour\": [20, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [21, 0], \"endHour\": [21, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [22, 0], \"endHour\": [22, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [23, 0], \"endHour\": [23, 59] }, \"occupancy\": 0.1 }\r\n            ],\r\n            \"thur\": [\r\n                { \"interval\": { \"startHour\": [0, 0], \"endHour\": [0, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [1, 0], \"endHour\": [1, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [2, 0], \"endHour\": [2, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [3, 0], \"endHour\": [3, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [4, 0], \"endHour\": [4, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [5, 0], \"endHour\": [5, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [6, 0], \"endHour\": [6, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [7, 0], \"endHour\": [7, 59] }, \"occupancy\":   0.5 },\r\n                { \"interval\": { \"startHour\": [8, 0], \"endHour\": [8, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [9, 0], \"endHour\": [9, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [10, 0], \"endHour\": [10, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [11, 0], \"endHour\": [11, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [12, 0], \"endHour\": [12, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [13, 0], \"endHour\": [13, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [14, 0], \"endHour\": [14, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [15, 0], \"endHour\": [15, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [16, 0], \"endHour\": [16, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [17, 0], \"endHour\": [17, 59] }, \"occupancy\": 0.5 },\r\n                { \"interval\": { \"startHour\": [18, 0], \"endHour\": [18, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [19, 0], \"endHour\": [19, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [20, 0], \"endHour\": [20, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [21, 0], \"endHour\": [21, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [22, 0], \"endHour\": [22, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [23, 0], \"endHour\": [23, 59] }, \"occupancy\": 0.1 }\r\n            ],\r\n            \"fri\": [\r\n                { \"interval\": { \"startHour\": [0, 0], \"endHour\": [0, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [1, 0], \"endHour\": [1, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [2, 0], \"endHour\": [2, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [3, 0], \"endHour\": [3, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [4, 0], \"endHour\": [4, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [5, 0], \"endHour\": [5, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [6, 0], \"endHour\": [6, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [7, 0], \"endHour\": [7, 59] }, \"occupancy\":   0.5 },\r\n                { \"interval\": { \"startHour\": [8, 0], \"endHour\": [8, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [9, 0], \"endHour\": [9, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [10, 0], \"endHour\": [10, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [11, 0], \"endHour\": [11, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [12, 0], \"endHour\": [12, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [13, 0], \"endHour\": [13, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [14, 0], \"endHour\": [14, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [15, 0], \"endHour\": [15, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [16, 0], \"endHour\": [16, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [17, 0], \"endHour\": [17, 59] }, \"occupancy\": 0.5 },\r\n                { \"interval\": { \"startHour\": [18, 0], \"endHour\": [18, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [19, 0], \"endHour\": [19, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [20, 0], \"endHour\": [20, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [21, 0], \"endHour\": [21, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [22, 0], \"endHour\": [22, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [23, 0], \"endHour\": [23, 59] }, \"occupancy\": 0.1 }\r\n            ],\r\n            \"sat\": [\r\n                { \"interval\": { \"startHour\": [0, 0], \"endHour\": [0, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [1, 0], \"endHour\": [1, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [2, 0], \"endHour\": [2, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [3, 0], \"endHour\": [3, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [4, 0], \"endHour\": [4, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [5, 0], \"endHour\": [5, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [6, 0], \"endHour\": [6, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [7, 0], \"endHour\": [7, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [8, 0], \"endHour\": [8, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [9, 0], \"endHour\": [9, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [10, 0], \"endHour\": [10, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [11, 0], \"endHour\": [11, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [12, 0], \"endHour\": [12, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [13, 0], \"endHour\": [13, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [14, 0], \"endHour\": [14, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [15, 0], \"endHour\": [15, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [16, 0], \"endHour\": [16, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [17, 0], \"endHour\": [17, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [18, 0], \"endHour\": [18, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [19, 0], \"endHour\": [19, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [20, 0], \"endHour\": [20, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [21, 0], \"endHour\": [21, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [22, 0], \"endHour\": [22, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [23, 0], \"endHour\": [23, 59] }, \"occupancy\": 0.1 }\r\n            ]\r\n        }\r\n    };","import { GarageOccupancyTableItem as Item, GarageOccupancyTable } from '../../../model/domain/garage';\r\n\r\nexport const format = (aTable: GarageOccupancyTable) => {\r\n    if (!aTable?.table)\r\n        return [];\r\n\r\n    const temp = new Array(24);\r\n    Object.keys(aTable.table)\r\n        .map((key: string) => {\r\n            const items = aTable.table[key as 'sun'];\r\n            items.map((item: Item, i: number) => {\r\n                temp[i] = { ...temp[i], ...{ [key]: item } }\r\n            });;\r\n        })\r\n    return temp;\r\n}","import React, { useRef} from 'react';\r\nimport { Grid,  Button, Text } from '../../../style';\r\nimport { primaryColor } from '../../../config';\r\nimport { GarageOccupancyTableItem as Item, GarageOccupancyTable } from '../../../model/domain/garage';\r\nimport { Table,  Input  } from 'antd';\r\nimport columns from './columns';\r\nimport { format } from './format';\r\n\r\ntype Days = 'sun' | 'mon' | 'tue' | 'wed' | 'thur' | 'fri' | 'sat';\r\n\r\nconst OccupancyForm = (props: any) => {\r\n    const { action, close } = props;\r\n    const initialValues: GarageOccupancyTable = props.initialValues;\r\n    const input = useRef<any>(null)\r\n    const days = Object.keys(initialValues.table) as Days[];\r\n\r\n    const submit = () => {\r\n        action({\r\n            title: getTitle(),\r\n            id: initialValues.id,\r\n            table: getTable(days)\r\n        });\r\n        close();\r\n    }\r\n\r\n    const getTitle = () => {\r\n        return input?.current?.state?.value || initialValues.title\r\n    }\r\n    const getTable = (days: Days[]) => (days\r\n        .reduce((table: any, day: Days) => {\r\n            const values = getOccupanciesByDay(day);\r\n            const intervals = initialValues.table[day];\r\n            const newIntervals = intervals.map(({ interval }: Item, i: number) => {\r\n                return { interval, occupancy: values[i] }\r\n            })\r\n\r\n            table[day] = newIntervals;\r\n            return table;\r\n        }, {})\r\n    )\r\n\r\n    const toArray = (elements: HTMLCollectionOf<Element>): Element[] => {\r\n        const items = []\r\n        for (let i = 0; i < elements.length; i++) {\r\n            items.push(elements[i])\r\n        }\r\n        return items;\r\n    }\r\n\r\n    const getOccupanciesByDay = (day: Days): Number[] => {\r\n        const items = toArray(document.getElementsByClassName(day));\r\n        items.sort((a: Element, b: Element) => Number(a.classList[1]) - Number(b.classList));\r\n        return items\r\n            .map((item: Element) => {\r\n                const secondChild = item?.children[1] as any;\r\n                const value = secondChild?.children[0]?.value || '0';\r\n                return Number(value) / 100\r\n            })\r\n    }\r\n    return (\r\n        <Grid placeItems=\"stretch\" width=\"100%\" height=\"100%\" gridGap=\"0\" background=\"white\" padding=\".5em .8em 1em .8em\" >\r\n            <div style={{ padding: \".5em\" }}>\r\n                <Text textAlign=\"left\" bold>Enter the Name of your Table</Text>\r\n                <Input\r\n                    placeholder={\"Ex: New Table 1\"}\r\n                    name={\"title\"}\r\n                    ref={input}\r\n                    defaultValue={initialValues.title}\r\n                />\r\n            </div>\r\n            <div style={{ overflowY: \"scroll\", maxHeight: \"60vh\" }}>\r\n                <Table\r\n                    className='min-height-table'\r\n                    bordered\r\n                    pagination={false}\r\n                    key={Math.random() * 1000}\r\n                    style={{ color: primaryColor, maxWidth: \"100%\" }}\r\n                    dataSource={format(initialValues)}\r\n                    columns={columns(true, 0)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button onClick={close}>Cancel</Button>\r\n                <Button onClick={() => { submit() }}>Submit</Button>\r\n            </div>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default OccupancyForm;","import React from 'react';\r\nimport { Grid, MenuItem } from '../../../style';\r\nimport { List, Popconfirm } from 'antd';\r\nimport { Garage } from '../../../model/domain/garage';\r\nimport Label from '../../../components/label';\r\n\r\nconst TableItem = ({ active, select, table, remove, garages, open }: any) => {\r\n    const getGarages = (tableId: string) => garages.filter((g: Garage) => g?.occupancyTableId === tableId, []);\r\n    const associatedGarages = getGarages(table.id);\r\n    return (\r\n        <div style={{ placeSelf: \"start stretch\" }}>\r\n            <List.Item\r\n                className=\"pointer\"\r\n                onClick={select}\r\n            >\r\n                <MenuItem\r\n                    fullWidth\r\n                    active={active}\r\n                    style={{ margin: \"auto\" }}\r\n                >\r\n                    <Grid width=\"100%\" color={\"inherit\"} customCols=\"auto 1fr auto\">\r\n\r\n                        <i className=\"fa fa-table txt-lg\" style={{ padding: \".35em\" }}></i>\r\n                        <span>\r\n                            {table.title}\r\n                            <Label label={`This Occupancy is associated with: ${\r\n                            associatedGarages ?\r\n                                associatedGarages\r\n                                .map((g: Garage, i: number) => g.name + (i === associatedGarages.length - 1 ? '' : ', ')) : 'N/A'}`} />\r\n                        </span>\r\n                        <span>\r\n                            <Popconfirm\r\n                                style={{ padding: \".4em\", color: !active ? \"white\" : \"inherit\" }}\r\n                                title=\"Are you sure\"\r\n                                onConfirm={() => remove(table.id)}\r\n                            >\r\n                                <i className=\"fa fa-trash hoverr\" style={{ color: !active ? \"white\" : \"inherit\" }} ></i>\r\n                            </Popconfirm>\r\n                            &nbsp;   &nbsp;\r\n                <i className=\"fa fa-edit hoverr\" onClick={open} style={{ color: !active ? \"white\" : \"inherit\" }}></i>\r\n                        </span>\r\n                    </Grid>\r\n                </MenuItem>\r\n            </List.Item>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TableItem;","import React, { useEffect } from 'react';\r\nimport {  Header, Card, Button,  Modal } from '../../../style';\r\nimport { GarageOccupancyTableItem as Item, GarageOccupancyTable, Garage } from '../../../model/domain/garage';\r\nimport { List  } from 'antd';\r\nimport { defaultTable } from './default-table';\r\nimport OccupancyForm from './table-form';\r\nimport TableItem from './table-item';\r\nimport { useSelector } from 'react-redux';\r\nimport useGarages from '../../../hooks/garage';\r\n\r\nconst TableList = ({ add, remove, selected, select, edit, tables, loading, localeProps } : any) => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { garages, loading: garageLoading  } = useGarages({ eId });\r\n\r\n    const AddModal = Modal({\r\n        title: \"Add Your Occupancy Table\",\r\n        message: \r\n        <OccupancyForm\r\n            action={add}\r\n            close={() => AddModal.close()}\r\n            initialValues={defaultTable}\r\n        />,\r\n        hideCancel: true,\r\n    });\r\n\r\n    const open = (selected: GarageOccupancyTable) => {\r\n        const EditModal =  Modal({\r\n            title: \"Edit Your Occupancy Table\",\r\n            message: <OccupancyForm\r\n                action={edit}\r\n                initialValues={selected}\r\n                close={() => EditModal.close()}\r\n            />,\r\n            hideCancel: true,\r\n        });\r\n        EditModal.open();\r\n    }\r\n\r\n    return (\r\n        <Card shadow width=\"400px\" grid customRows=\"auto 1fr\" placeItems=\"stretch\">\r\n            <Header bold width=\"100%\" size={3}>\r\n                Occupancy Tables\r\n                <Button\r\n                    style={{ placeSelf: \"end\", fontSize: \".6em\", float: \"right\" }}\r\n                    rounded\r\n                    shadow\r\n                    onClick={AddModal.open}\r\n                    minWidth=\"4.5em\"\r\n                >\r\n                    <i className={`fa fa-${\"plus\"}`}></i> Add\r\n                </Button>\r\n            </Header>\r\n            <List\r\n                {...localeProps}\r\n                loading={loading || garageLoading}\r\n                bordered={!loading}\r\n                dataSource={tables}\r\n                renderItem={(table: GarageOccupancyTable, i: number) => (\r\n                    <TableItem\r\n                        select={() => select(i)}\r\n                        active={i === selected}\r\n                        garages={garages}\r\n                        table={table}\r\n                        remove={remove}\r\n                        open={() => open(tables[i])}\r\n                    />\r\n                )}\r\n            />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default TableList;","import React, { useState, useEffect } from 'react';\r\nimport { Grid,  Card, Empty, Loader } from '../../../style';\r\nimport { primaryColor } from '../../../config';\r\nimport { useSelector } from 'react-redux';\r\nimport { Table } from 'antd';\r\nimport columns from './columns';\r\nimport { useOccupanyTable } from '../../../hooks/occupancy-table';\r\nimport TableList from './table-list';\r\nimport { format } from './format';\r\n\r\ntype Days = 'sun' | 'mon' | 'tue' | 'wed' | 'thur' | 'fri' | 'sat';\r\n\r\nconst OccupancyTable = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { tables, loading: loadingTables, addTable, editTable, removeTable } = useOccupanyTable({ eId })\r\n    const [ selected, setSelected ] = useState(0);\r\n    const localeProps = {\r\n        locale: {\r\n            emptyText: <Empty text=\"No Occupancy Table\" />,\r\n        },\r\n        loading :{\r\n            spinning: loadingTables,\r\n            indicator: <Grid><Loader.Spinner size={2} color={primaryColor} /></Grid>\r\n        }\r\n    }\r\n    useEffect(() => setSelected(0), [tables]);\r\n    return (\r\n        <Grid placeItems=\"start stretch\" padding=\"1em\" height=\"100%\">\r\n            <Grid customCols=\"auto 1fr\" height=\"100%\" placeItems=\"stretch\">\r\n                <TableList\r\n                    add={addTable}\r\n                    localeProps={localeProps}\r\n                    tables={tables}\r\n                    remove={removeTable}\r\n                    loading={loadingTables}\r\n                    edit={editTable}\r\n                    select={setSelected}\r\n                    selected={selected}\r\n                />\r\n                <Card shadow width=\"100%\" height=\"100%\">\r\n                    <Table\r\n                        className='min-height-table'\r\n                        bordered\r\n                        {...localeProps}\r\n                        pagination={false}\r\n                        key={Math.random() * 1000}\r\n                        style={{ color: primaryColor, maxWidth: \"90vw\" , minHeight: \"800px\"}}\r\n                        dataSource={format(tables[selected] || [])}\r\n                        columns={columns()}\r\n                    />\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default OccupancyTable;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, Header } from '../../style';\r\nimport CountUp from 'react-countup';\r\nimport { Progress, Tooltip } from 'antd';\r\nimport API from '../../api';\r\nimport { useSelector } from 'react-redux';\r\nimport { disabledTxtColor } from '../../config';\r\nimport logger from '../../utils/logger';\r\n\r\nexport const ScoreCard = ({ title, faIcon, span = 1, color = 'white', children, adjacentLabel, hoverLabel, borderRight }: any) => {\r\n  const borderStyle = borderRight ? { borderRight: '1px solid ' + disabledTxtColor, padding: '0 1em' } : {};\r\n  return (\r\n    <Grid\r\n      className={'noselect span-'+span}\r\n      style={{ ...borderStyle, minHeight: '10em' }}\r\n      placeSelf='stretch'\r\n      gridGap='.5em'\r\n      customRows='auto 1fr'\r\n    >\r\n      <Header size={3.5} color={color} placeSelf='start stretch' style={{ lineHeight: \".8em\", height: '1.5em' }}>\r\n        {title} &nbsp;\r\n          {faIcon &&\r\n          <Tooltip placement=\"topLeft\" title={hoverLabel}>\r\n            <i className={faIcon + ' pointer'}></i>\r\n          </Tooltip>}\r\n      </Header>\r\n      <div style={{ color, placeSelf: 'start center' }}>\r\n        <div style={{ height: \"6em\" }}>\r\n          {children}\r\n        </div>\r\n        <div style={{ lineHeight: '1em' }} dangerouslySetInnerHTML={{ __html: adjacentLabel }}></div>\r\n      </div>\r\n    </Grid>);\r\n}\r\n\r\nScoreCard.PercentBar = ({ percent, type, text, status = false, successPercent }: any) => {\r\n  const gradient = percent <= 50 ? '#F2BE72' :\r\n    `linear-gradient(to right, #F2BE72 ${50}%, #F76E49)`;\r\n  return (\r\n    <Progress\r\n      percent={percent}\r\n      strokeColor={status ? gradient : '#5578D6'}\r\n      successPercent={successPercent || 0}\r\n      type={type}\r\n      format={() => <div className='bold' style={{ color: 'white' }}>{text || (percent + '%')}</div>}\r\n    />);\r\n}\r\n\r\nconst intoHeadings = (str: string) => str.charAt(0).toUpperCase() + str.substring(1).replace(/ /g, ' ');\r\n\r\nconst FlatValue = ({ name, flatValueQuery, leftBorder, borderRight, refresh = true}: any) => {\r\n  const [res, setRes] = useState({\r\n    value: 0,\r\n    hoverLabel: undefined,\r\n    adjacentLabel: undefined,\r\n    isPercent: false,\r\n    unit: undefined,\r\n    applicableResource: ''\r\n  })\r\n  const { value, hoverLabel, adjacentLabel, isPercent, unit } = res;\r\n  const eId = useSelector((state: any) => state.user.enterprise.id);\r\n\r\n  const getValue = (value: number, unit?: string) => {\r\n    if (unit === '%' || unit === 'cents') \r\n      value /= 100;\r\n\r\n    value = Math.round(value * 100) / 100\r\n    return (value || 0);\r\n  }\r\n\r\n  const getIcon = (resource: string) => {\r\n      switch(resource){\r\n        case 'citation':\r\n        return 'fas fa-money-check-alt';\r\n\r\n        case 'announcement':\r\n        return 'fas fa-bullhorn';\r\n        \r\n        case 'enterpriseUser':\r\n        return 'fa fa-user';\r\n\r\n        default:\r\n        return 'fa fa-car'\r\n\r\n      }\r\n  }\r\n\r\n  const loadValue = async () => {\r\n    try {\r\n      const res = await Promise.all([API.getFlatValue(eId, flatValueQuery), API.getFlatValueMetricDes(eId, flatValueQuery.metricType)]);\r\n      const [flatValue, metricDescriptor] = res;\r\n\r\n      if (flatValue?.success && metricDescriptor?.success) {\r\n        let { flatValue: { value }, metricType, hoverLabel, adjacentLabel, unit } = flatValue.flatValueResult as any;\r\n        setRes({\r\n          isPercent: metricType?.split('_')?.includes('percent'),\r\n          hoverLabel,\r\n          unit,\r\n          adjacentLabel,\r\n          value: getValue(value, unit),\r\n          applicableResource: metricDescriptor.metricDescriptor.applicableResource\r\n        })\r\n      } else throw new Error(\"Failed\");\r\n    } catch (e) {\r\n      logger.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(() => { if(refresh) loadValue() }, [refresh]);\r\n  return (\r\n    <ScoreCard\r\n      borderRight={borderRight}\r\n      title={intoHeadings(name)}\r\n      hoverLabel={hoverLabel}\r\n      adjacentLabel={adjacentLabel}\r\n      faIcon={getIcon(res.applicableResource)}\r\n      unit={unit}\r\n      leftBorder={leftBorder}\r\n    >\r\n      {isPercent ?\r\n        <ScoreCard.PercentBar\r\n          type=\"circle\"\r\n          percent={Number(value)}\r\n        />\r\n        : <div className='txt-lgx'>\r\n          {unit === 'cents' && '$'}\r\n          {typeof value === \"number\" ?\r\n            <CountUp duration={2} start={0} end={value as number} /> : value}\r\n        </div>\r\n      }\r\n    </ScoreCard>\r\n  );\r\n};\r\n\r\nScoreCard.FlatValue = FlatValue;\r\nexport default ScoreCard;","import React from 'react';\r\nimport { Grid, Header as Text, List, Empty } from '../../style';\r\nimport useGarages from '../../hooks/garage';\r\nimport { useSelector } from 'react-redux';\r\nimport { Garage } from '../../model/domain/garage';\r\nimport { ScoreCard } from '../../components/score-card/score-card';\r\nimport { overflow } from '../../utils/text';\r\nimport { moment } from '../../utils/time';\r\nimport { invertedTxtColor, disabledTxtColor } from '../../config';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst Header = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { garages, loading } = useGarages({ eId });\r\n    const activeGarages = garages\r\n        .filter((garage: Garage) => garage.status === 'active' && garage.occupancy?.count !== undefined)\r\n        .sort((a, b) => (a.occupancy?.count || 0) - (b.occupancy?.count || 0));\r\n\r\n    const totalOcc = activeGarages.reduce(((acc, { maxOccupancy }: Garage) => acc + maxOccupancy), 0);\r\n    const currentOcc = activeGarages.reduce(((acc, { occupancy }: Garage) => acc + (occupancy?.count || 0)), 0);\r\n\r\n    const percent = (curr: number, total: number) => (((curr / total) * 100) || 0).toFixed(2);\r\n    return (\r\n        <Grid\r\n            cols='5'\r\n            style={{ gridColumn: '1/-1' }}\r\n            width='100%'\r\n            padding='1.5em 1.5em 0 1.5em'\r\n        >  <Text\r\n            className='hide-mobile'\r\n            style={{ gridColumn: '1/-1', placeSelf: \"end\" }}\r\n            size={4.6}\r\n            color={invertedTxtColor}\r\n        >\r\n                Updated at: {moment().format('hh:mm A')}\r\n            </Text>\r\n            <ScoreCard title='Parked Vehicles' faIcon='fa fa-car' hoverLabel='Parked Vehicles' borderRight>\r\n                <span className='txt-lgx'>{currentOcc}</span>\r\n                <span className='txt-md'>/{totalOcc}</span>\r\n            </ScoreCard>\r\n\r\n            <ScoreCard title='Parked Vehicles (%)' faIcon='fa fa-car' hoverLabel='Parked Vehicles in Percentage' borderRight>\r\n                <ScoreCard.PercentBar\r\n                    type='dashboard'\r\n                    percent={percent(currentOcc, totalOcc)}\r\n                />\r\n            </ScoreCard>\r\n\r\n            <ScoreCard title='Active Garages' faIcon='fa fa-car' hoverLabel='All Active Garages' borderRight>\r\n                <ScoreCard.PercentBar\r\n                    type='dashboard'\r\n                    text={`${activeGarages.length}/${garages.length}`}\r\n                    percent={percent(activeGarages.length, garages.length)}\r\n                />\r\n            </ScoreCard>\r\n\r\n            <ScoreCard title='Garage Occupancies' faIcon='fa fa-car' hoverLabel='Occupancy Count' span={2}>\r\n                <Grid placeSelf='start' >\r\n                    <Grid\r\n                        customCols={loading ? '1fr' : '1fr  minmax(15em, auto)'}\r\n                        placeItems='stretch'\r\n                        width='100%'\r\n                        color='white'\r\n                        gridGap='.2em 1.5em'\r\n                    >\r\n                        <List\r\n                            loading={loading}\r\n                            empty={\r\n                                <div style={{ gridColumn: '1/-1' }}>\r\n                                    <Empty text={'No Garage Occupancy'} color=\"white\" style={{ width: '7em', margin: '0 auto' }} />\r\n                                </div>\r\n                            }\r\n                            pagination={{ items: 4 }}\r\n                            list={activeGarages}\r\n                            map={(({ name, occupancy, maxOccupancy, abnormality }: Garage) => {\r\n                                const { count } = occupancy || { count: 0 };\r\n                                const value = percent(count, maxOccupancy)\r\n                                return (\r\n                                    <>\r\n                                        <Text size={3.75} textAlign='left' color={'white'}>\r\n                                            <Tooltip title={`\r\n                                            Abnormality is: ${abnormality?.active ? `ON. It is triggered on ${abnormality.percent * 100}%` : 'OFF'}\r\n                                        `}>\r\n                                                <span className='txt-overflow'><i\r\n                                                    style={{ color: abnormality?.active ? 'coral' : disabledTxtColor }}\r\n                                                    className='fa fa-bell'\r\n                                                ></i>&nbsp;&nbsp;{overflow(name, 23)}</span>\r\n                                            </Tooltip>\r\n\r\n\r\n                                        </Text>\r\n                                        <ScoreCard.PercentBar\r\n                                            status\r\n                                            percent={value}\r\n                                            text={count ? value + \"%\" : 'N/A'}\r\n                                        />\r\n                                    </>\r\n                                )\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </ScoreCard>\r\n\r\n        </Grid>);\r\n}\r\n\r\nexport default Header;","import { Space, Switch } from 'antd';\r\nimport { Text} from '../../../style';\r\nimport React from 'react';\r\nimport { Popconfirm } from 'antd';\r\nimport { moment, FORMAT_DATETIME } from '../../../utils/time';\r\nimport Label from '../../../components/label';\r\n\r\nconst columns = (activate: any, loadingAction = false, index = 0) => {\r\n    return [{\r\n        title: 'Garage',\r\n        dataIndex: 'garage',\r\n        key: 'garage',\r\n        render: (text: string) => <div className='txt-overflow'>{text}</div>\r\n    },\r\n    {\r\n        title: 'Detected On',\r\n        dataIndex: 'detected_on',\r\n        key: 'detected_on',\r\n        render: (t: string) => moment(t).format(FORMAT_DATETIME)\r\n    },\r\n    {\r\n        title: 'Abnormality Event',\r\n        dataIndex: 'abnormality_event',\r\n        key: 'abnormality_event',\r\n        render: (text: string) => <span dangerouslySetInnerHTML={{__html: text}}/>\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (_: any, record: any) => {\r\n            return (\r\n                <Space size=\"middle\">\r\n                    <Popconfirm\r\n                        okButtonProps={{ size: 'middle' }}     \r\n                        cancelButtonProps={{ size: 'middle' }}\r\n                        okText='Yes, switch back'\r\n                        cancelText='No, I need more time to check'\r\n                        title={\r\n                        <div style={{maxWidth: '400px'}}>\r\n                            <b>Are you sure you want to switch back to showing current Occupancy Values?</b>\r\n                            <br/> Please make sure to check if your hardware including any camera/sensors are working properly and all your servers are online before switching back.\r\n                        </div>}\r\n                        onConfirm={() => activate(record)}\r\n                    >\r\n                        <Text>\r\n                            <Switch\r\n                                disabled={loadingAction}\r\n                                defaultChecked\r\n                            />\r\n                        </Text>\r\n                    </Popconfirm>\r\n                </Space>\r\n            )\r\n        },\r\n    },\r\n    ]\r\n};\r\n\r\n\r\nexport default columns;","import React from \"react\";\r\nimport { Card, Empty, Grid} from \"../../../style\";\r\nimport { Table } from \"antd\";\r\nimport { primaryColor, mobileWidth } from \"../../../config\";\r\nimport styled from \"styled-components\";\r\nimport columns from \"./columns\";\r\n\r\nlet locale = {\r\n  emptyText: <Empty text=\"No Abnormality\" />\r\n};\r\n\r\nexport default ({ abnormalities, toggler }: any) => {\r\n  const activate = (i : any)=>{}\r\n  return (\r\n    <Card shadow minWidth=\"60vw\" padding=\".5em\" width='100%'>\r\n      <Grid customCols=\"auto 1fr auto\">\r\n        <div></div>\r\n        {toggler}\r\n      </Grid>\r\n      <DIV>\r\n        <Table\r\n          className='min-height-table'\r\n          locale={locale}\r\n          key={Math.random() * 1000}\r\n          loading={false}\r\n          style={{ color: primaryColor}}\r\n          dataSource={abnormalities}\r\n          columns={columns(\r\n            (i: any) => activate(i), \r\n            false\r\n          )}\r\n        />\r\n      </DIV>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst DIV = styled.div`\r\n  @media (max-width: ${mobileWidth}) {\r\n    overflow-x: scroll;\r\n  }\r\n`;","import React, { useState } from 'react';\r\nimport { Switch } from '../../style';\r\nimport Layout from '../../layout';\r\nimport Listings from './listings';\r\nimport Analytics from './analytics';\r\nimport OccupancyTable from './occupancy-table';\r\nimport Header from \"./header\";\r\nimport Abnormality from './abnormality';\r\nimport { Badge } from 'antd';\r\n\r\nenum activePages {\r\n  \"ANALYTICS\" = \"ANALYTICS\",\r\n  \"LISTINGS\" = \"LISTINGS\",\r\n  \"OCCUPANCY_TABLE\" = \"OCCUPANCY_TABLE\",\r\n  \"ABNORMALITY\" = \"ABNORMALITY\"\r\n};\r\n\r\nconst Garage = () => {\r\n  const [activePage, setActivePage] = useState(activePages.ANALYTICS);\r\n  const items = [\r\n    ...Object.keys(activePages).splice(0, 3),\r\n    {\r\n      toString: () => 'ABNORMALITY',\r\n      el: <Badge  count={3}><span style={{fontSize: '1.25em'}}>Abnormality &nbsp; &nbsp;</span></Badge>\r\n    }\r\n  ]\r\n  return (\r\n    <Layout sidebar>\r\n      <Layout.Top>\r\n        <Switch.underlined\r\n          style={{ placeSelf: \"start\", gridColumn: '1/-1', gridGap: '.5em 1.5em' }}\r\n          items={items}\r\n          onClick={(active: activePages) => setActivePage(active)}\r\n          active={activePage}\r\n        />\r\n        <Header />\r\n      </Layout.Top>\r\n      <Layout.Bottom>\r\n        {activePage === activePages.LISTINGS ? <Listings /> :\r\n          activePage === activePages.OCCUPANCY_TABLE ? <OccupancyTable /> :\r\n            activePage === activePages.ABNORMALITY ? <Abnormality /> :\r\n              <Analytics />\r\n        }\r\n      </Layout.Bottom>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Garage;","import React, { useState } from \"react\";\r\nimport { Grid, Switch } from \"../../../style\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Table from './table';\r\nimport { Abnormality as AB } from \"./type\";\r\n\r\nconst states = {\r\n    ACTIVE: \"ACTIVE\",\r\n    ALL: \"ALL\",\r\n    PAST: \"PAST\",\r\n    DEFAULT: \"ACTIVE\",\r\n    states: [\"ACTIVE\", \"PAST\", \"ALL\"],\r\n};\r\n\r\nconst Abnormality = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n\r\n    const abnormalities: AB[] = [{\r\n        id: '1',\r\n        garage: 'North 10th St Garage',\r\n        detected_on: '09/09/2020 @ 10:00 AM',\r\n        active: true,\r\n        abnormality_event: 'Occupancy detected to be 15% above than last three weeks moving average <br/>Occupancy detected: <span style=\"color:red\">98% </span><br/>Last 3 weeks moving average: <span style=\"color:green\">83%</span>'\r\n    },\r\n    {\r\n        id: '2',\r\n        garage: 'South 7th St Garage',\r\n        detected_on: '09/04/2020 2:00 PM',\r\n        active: true,\r\n        abnormality_event: 'Occupancy detected to be 15% below than last year data <br/>Occupancy detected: <span style=\"color:red\">72% </span><br/>Last year data as of Mon, Sep 2, 2020 at 2:00 PM: <span style=\"color:green\">87%</span>'\r\n    },\r\n    {\r\n        id: '3',\r\n        garage: 'South 7th St Garage',\r\n        detected_on: '8/20/2020 1:00 PM',\r\n        active: true,\r\n        abnormality_event: 'Occupancy detected to be 8% above than custom set date <br/>Occupancy detected: <span style=\"color:red\">99% </span><br/>Occupancy Data as of Tue, Oct 13, 2020 at 1:00 PM: <span style=\"color:green\">91%</span>'\r\n    }];\r\n\r\n    const [state, setState] = useState({ active: states.DEFAULT });\r\n    return (\r\n        <Grid placeItems=\"start stretch\" padding=\"1em\" height=\"100%\">\r\n            <Grid>\r\n                <Table\r\n                    abnormalities={abnormalities.filter((ab: AB) => state.active === states.ALL || (ab.active && state.active === states.ACTIVE) || ((!ab.active && state.active === states.PAST)))}\r\n                    toggler={\r\n                        <Switch\r\n                            style={{ margin: \"0 0 .5em 0\" }}\r\n                            active={state.active}\r\n                            items={states.states}\r\n                            onClick={(active: string) => setState({ ...state, active })}\r\n                        />\r\n                    }\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Abnormality;","import { Space } from 'antd';\r\nimport { Button, Badge } from '../../style';\r\nimport React from 'react';\r\nimport { Popconfirm } from 'antd';\r\nimport { moment, FORMAT_DATETIME, Moment, NEW_FORMAT_DATETIME } from '../../utils/time';\r\nimport { overflow } from '../../utils/text';\r\nimport Label from '../../components/label';\r\n\r\nconst columns = (edit: any, remove: any, loadingAction = false, index = 0) => {\r\n    return [{\r\n        title: 'Title',\r\n        dataIndex: 'title',\r\n        key: 'title',\r\n        render: (text: string) => text,\r\n    },\r\n    {\r\n        title: 'Message',\r\n        dataIndex: 'body',\r\n        key: 'body',\r\n        render: (text: string)=><div style={{textOverflow: 'ellipsis', height: \"1.5em\", overflow:\"hidden\", whiteSpace: \"nowrap\"}}>{text}</div>\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        render: (text: string) => <Badge\r\n            className=\"shadow txt-center\"\r\n            style={{ background: text === 'expired' ? \"red\" : \"\" }}\r\n        >\r\n            {text}\r\n        </Badge>,\r\n    },\r\n    {\r\n        title: <span>Launch Date <Label label={'Date on which the message will appear in ParkStash App'}/></span>,\r\n        key: 'launchAt',\r\n        dataIndex: 'launchAt',\r\n        render: (t: string) => moment(t).format(NEW_FORMAT_DATETIME)\r\n    },\r\n    {\r\n        title: <span>Expiry Date <Label label={'Date on which the message will stop appearing in ParkStash App'}/></span>,\r\n        key: 'expiresAt',\r\n        dataIndex: 'expiresAt',\r\n        render: (t: string | null) => t? moment(t).format(NEW_FORMAT_DATETIME): 'n/a'\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (_: any, record: any) => {\r\n            return (\r\n                <Space size=\"middle\">\r\n                    <Button\r\n                        shadow\r\n                        disabled={loadingAction}\r\n                        loading={loadingAction}\r\n                        onClick={() => edit(record)}\r\n                    >\r\n                        <i className=\"fa fa-edit\"></i> &nbsp;Edit\r\n                    </Button>\r\n\r\n                    <Popconfirm\r\n                        okButtonProps={{size: 'middle'}}\r\n                        cancelButtonProps={{size: 'middle'}}\r\n                        title=\"Are you sure\"\r\n                        onConfirm={() => remove(record)}\r\n                    >\r\n                        <Button\r\n                            shadow\r\n                            bg=\"red\"\r\n                            disabled={loadingAction}\r\n                            loading={loadingAction}\r\n                        >\r\n                            <i className=\"fa fa-trash\"></i> &nbsp;Delete\r\n                        </Button>\r\n                    </Popconfirm>\r\n                </Space>\r\n            )\r\n        },\r\n    },\r\n    ]\r\n};\r\n\r\nexport default columns;","import React from \"react\";\r\nimport { Card, Empty, Button, Grid} from \"../../style\";\r\nimport { Table } from \"antd\";\r\nimport { primaryColor, mobileWidth } from \"../../config\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport columns from \"./columns\";\r\n\r\nlet locale = {\r\n  emptyText: <Empty text=\"No Annoucement\" />\r\n};\r\n\r\nexport default ({ announcements, edit, add, toggler, remove }: any) => {\r\n  const loadingAction = useSelector(\r\n    (state: any) => state.announcement.loadingAction\r\n  );\r\n  const loadingAnnouncements = useSelector(\r\n    (state: any) => state.announcement.loadingAnnouncements\r\n  );\r\n\r\n  return (\r\n    <Card shadow minWidth=\"60vw\" padding=\".5em\">\r\n      <Grid customCols=\"auto 1fr auto\">\r\n        <div></div>\r\n        {toggler}\r\n        <Button\r\n          rounded\r\n          invert\r\n          padding=\".2em\"\r\n          shadow\r\n          faIcon={`fa fa-${\"plus\"}`}\r\n          onClick={add}\r\n          minWidth=\"4.5em\"\r\n        > Add\r\n        </Button>\r\n\r\n      </Grid>\r\n      <DIV>\r\n        <Table\r\n          className='min-height-table'\r\n          locale={locale}\r\n          key={Math.random() * 1000}\r\n          loading={loadingAnnouncements}\r\n          style={{ color: primaryColor, maxWidth: \"90vw\" }}\r\n          dataSource={announcements}\r\n          columns={columns(\r\n            edit,\r\n            (i: any) => remove(i), \r\n            loadingAction\r\n          )}\r\n          summary={(pageData) => <Table.Summary.Row\r\n            key={Math.random() * 1000}\r\n            className=\"bold\"\r\n            style={{ color: primaryColor }}\r\n          >\r\n            <br />\r\n                Total Annoucements: {pageData.length}\r\n          </Table.Summary.Row>\r\n          }\r\n        />\r\n      </DIV>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst DIV = styled.div`\r\n  @media (max-width: ${mobileWidth}) {\r\n    overflow-x: scroll;\r\n  }\r\n`;","import { actions } from \"../reducer/announcement\";\r\nimport api from \"../../api\";\r\nimport { Notification } from \"../../style\";\r\nimport logger from \"../../utils/logger\";\r\n\r\ntype APICall = () => Promise<any>;\r\nexport const asyncHandler = async (apiCall: APICall, showError = false) => {\r\n  try {\r\n    let payload = await apiCall();\r\n    if (!payload || !payload.success)\r\n      throw new Error(payload.message || \"Error\");\r\n    return await payload;\r\n  } catch (e) {\r\n    if (showError) {\r\n      logger.log(e)\r\n      Notification.error({\r\n        title: \"Error: Annoucement\",\r\n        message: String(e?.message || e),\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const addAnnouncement = (eid: string, props: any) => {\r\n  return async (dispatch: any) => {\r\n    const payload = await asyncHandler(\r\n      () => api.addAnnoucement(eid, props),\r\n      true\r\n    );\r\n    if (payload && payload.success) {\r\n      dispatch({\r\n        type: actions.ADD_ANNOUNCEMENT_SUCCESS,\r\n        payload: { announcement: {...props, id: payload.announcementId} },\r\n      });\r\n\r\n      Notification.success({\r\n        title: \"Success\",\r\n        message: 'Your Announcement was added',\r\n      });\r\n    } else dispatch({ type: actions.ACTION_ANNOUNCEMENT_ERROR });\r\n  };\r\n};\r\n\r\nexport const editAnnouncement = (eid: string, props: any) => {\r\n  return async (dispatch: any) => {\r\n    dispatch({ type: actions.ACTION_ANNOUNCEMENT_PENDING });\r\n    const payload = await asyncHandler(\r\n      () => api.editAnnoucement(eid, props.id, props),\r\n      true\r\n    );\r\n\r\n    if (payload && payload.success) {\r\n      dispatch({\r\n        type: actions.EDIT_ANNOUNCEMENT_SUCCESS,\r\n        payload: {\r\n          announcement: props,\r\n        },\r\n      });\r\n\r\n      \r\n      Notification.success({\r\n        title: \"Success\",\r\n        message: 'Your Announcement was Edited',\r\n      });\r\n    } else dispatch({ type: actions.ACTION_ANNOUNCEMENT_ERROR });\r\n  };\r\n};\r\n\r\nexport const deleteAnnouncement = (eid: string, props: any) => {\r\n  return async (dispatch: any) => {\r\n    dispatch({ type: actions.ACTION_ANNOUNCEMENT_PENDING });\r\n    const payload = await asyncHandler(\r\n      () => api.deleteAnnoucement(eid, props.id),\r\n      true\r\n    );\r\n\r\n    if (payload && payload.success) {\r\n      dispatch({\r\n        type: actions.DELETE_ANNOUNCEMENT_SUCCESS,\r\n        payload: { announcement: props },\r\n      });\r\n\r\n      Notification.success({\r\n        title: \"Success\",\r\n        message: 'Your Announcement was deleted',\r\n      });\r\n    } else dispatch({ type: actions.ACTION_ANNOUNCEMENT_ERROR });\r\n  };\r\n};\r\n\r\nexport const getAnnouncements = (eid: string) => {\r\n  return async (dispatch: any) => {\r\n    dispatch({ type: actions.GET_ANNOUNCEMENTS_PENDING });\r\n    const payload = await asyncHandler(() => api.getAnnoucements(eid), true);\r\n    if (payload && payload.success) {\r\n      dispatch({\r\n        type: actions.GET_ANNOUNCEMENTS_SUCCESS,\r\n        payload: { announcements: payload?.announcements },\r\n      });\r\n    } else dispatch({ type: actions.GET_ANNOUNCEMENTS_ERROR });\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Grid, Button, Text } from '../../style';\r\nimport { Input, DatePicker } from 'antd';\r\nimport { useFormik } from 'formik';\r\nimport { moment, FORMAT_DATETIME, Moment } from '../../utils/time';\r\nimport Label from '../../components/label';\r\nimport logger from '../../utils/logger';\r\n\r\nconst nowISO = moment().toISOString();\r\n\r\nconst defaultValues = { title: \"\", body: \"\", status: \"active\", launchAt: nowISO, expiresAt: null };\r\n\r\nconst format = FORMAT_DATETIME;\r\nconst Form = ({ add, close, initialValues = defaultValues }: any) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const { handleSubmit, handleChange, values, setFieldValue  } = useFormik({\r\n        initialValues,\r\n        onSubmit(values) {\r\n            submit(values)\r\n        }\r\n    })\r\n    const submit = async (values: any) => {\r\n        try {\r\n            setLoading(true)\r\n            await add(values);\r\n            close();\r\n        } catch (e) {\r\n            logger.log(e)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const error = !values.launchAt || !values.body || !values.title\r\n    const style = {\r\n        padding: \".5em 1em\", height: \"100%\", width: \"100%\",\r\n        placeItems: \"center stretch\", gridGap: \".4em\", background: \"white\"\r\n    }\r\n\r\n    return (<form onSubmit={handleSubmit} className=\"grid\" style={{...style, gridGap: '1em'}}>\r\n        <div>\r\n            <Text textAlign=\"left\" bold>Annoucement Title <span className='red'>*</span></Text>\r\n            <Input\r\n                name={\"title\"}\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                placeholder=\"Example: SJSU Graduation Ceramony\"\r\n            />\r\n        </div>\r\n\r\n        <div>\r\n            <Text textAlign=\"left\" bold>Annoucement Message <span className='red'>*</span></Text>\r\n            <Input.TextArea  name={\"body\"} value={values.body} rows={5}\r\n                onChange={handleChange}\r\n                placeholder=\"Example: Information on the Event\" />\r\n        </div>\r\n\r\n        <div className=\"grid\" style={{placeItems: \"end\" }}>\r\n            <Text textAlign=\"left\" placeSelf=\"stretch\" bold>\r\n                Message Launch Date \r\n                <Label label={'Date on which the message will appear in ParkStash App'}/>\r\n            </Text>\r\n            <DatePicker\r\n                use12Hours\r\n                showTime={{format: 'hh:mm a'}}\r\n                format={format}\r\n                minuteStep={15}\r\n                style={{width: \"100%\"}}\r\n                value={moment(values.launchAt)}\r\n                onChange={(e: Moment | null) => { \r\n                  if (!e) return;\r\n                  setFieldValue(\"launchAt\", e.toISOString());\r\n                }} />\r\n        </div>\r\n\r\n        <div className=\"grid\" style={{placeItems: \"end\" }}>\r\n            <Text textAlign=\"left\" placeSelf=\"stretch\" bold>Message Expiry Date\r\n            <Label label={'Date on which the message will stop appearing in ParkStash App'}/>\r\n            </Text>\r\n            <DatePicker\r\n                use12Hours\r\n                style={{width: \"100%\"}}\r\n                showTime={{format: 'hh:mm a'}}\r\n                format={format}\r\n                minuteStep={15}\r\n                value={values.expiresAt? moment(values.expiresAt): null}\r\n                onChange={(e: Moment | null) => setFieldValue(\"expiresAt\", e?.toISOString() || null)} />\r\n        </div>\r\n\r\n        <Grid cols=\"2\" size=\"0.7em\" placeItems={\"stretch\"}>\r\n            <Button.Normal\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                onClick={() => close()}\r\n            >\r\n                Cancel\r\n                </Button.Normal>\r\n            {loading ? \r\n            <Button loading disabled>Loading</Button> :\r\n                <Button.Normal\r\n                    type=\"submit\"\r\n                    disabled={error}\r\n                    onSubmit={(e: any) => handleSubmit(e)}>\r\n                    Confirm\r\n            </Button.Normal>\r\n            }\r\n        </Grid>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import { useState, useEffect } from \"react\";\r\nimport API from \"../api\";\r\nimport { asyncHandler } from \"../utils\";\r\nimport { XyChart, ScoreCard } from \"../model/domain/dashboard\";\r\n\r\ninterface State {\r\n  charts?: XyChart[] | any;\r\n  dId?: string;\r\n  scoreCardOptions?: any;\r\n  scoreCards?: ScoreCard[] | any;\r\n  loading?: boolean,\r\n  error?: boolean,\r\n}\r\n\r\nexport const useWidgets = ({  eId, screen, resource = \"\" }:  any) => {\r\n  const [state, setter] = useState({\r\n    charts: [],\r\n    scoreCards: [],\r\n    scoreCardOptions: [],\r\n    dId: \"\",\r\n    loading: false,\r\n    error: false,\r\n  });\r\n\r\n  const setState = (obj: State) => setter({ ...state, ...obj });\r\n\r\n  const getWidgets = async (eId : string) => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () => API.getWidgets(eId),\r\n      errorMessage: \"Failed: Loading Charts\",\r\n    });\r\n\r\n    const res2 = await asyncHandler({\r\n      apiCall: () => API.getScoreCardOptions(eId, resource),\r\n      errorMessage: \"Failed: Loading Score Cards\",\r\n    });\r\n \r\n    const dashboards = res?.dashboards?.filter((dashboard: any)=> dashboard?.screen === screen) || [];\r\n    const { scoreCards, charts, id: dId } = dashboards[0] || { scoreCards : [], charts : [], id: '' };\r\n\r\n    setState({\r\n      loading: false,\r\n      error: !(res?.success || true),\r\n      scoreCards,\r\n      scoreCardOptions: res2?.metricDescriptors || [],\r\n      dId,\r\n      charts\r\n    });\r\n  };\r\n\r\n  const saveWidgets = async (props : any) => {\r\n    let { scoreCards = state.scoreCards, charts = state.charts } = props;\r\n   await asyncHandler({\r\n      apiCall: () => API.editWidgets(eId, state.dId, \r\n        {charts, scoreCards }),\r\n      errorMessage: \"Could not Edit Widgets\",\r\n      successMessage: \"Widget was Edited\",\r\n    });\r\n  };\r\n\r\n  const addWidget = (chart: XyChart) => {\r\n    const charts = [...state.charts, chart];\r\n    setState({ charts });\r\n    saveWidgets({...{ charts }});\r\n  }\r\n\r\n  const editScoreCards = (scoreCards: ScoreCard []) => {\r\n   if(scoreCards !== state.scoreCards){\r\n    setState({ scoreCards });\r\n    saveWidgets({ scoreCards });\r\n   }\r\n  }\r\n\r\n  const removeScoreCard = (index: number) => {\r\n    const scoreCards = state.scoreCards.filter((_: ScoreCard, i: number) => i !== index)\r\n    setState({ scoreCards });\r\n    saveWidgets({ scoreCards });\r\n  }\r\n\r\n  const removeChart = (index: number) => {\r\n    const charts = state.charts.filter((_: XyChart, i: number) => i !== index)\r\n    setState({ charts });\r\n    saveWidgets({...{charts }});\r\n  }\r\n\r\n  useEffect(() => {\r\n      getWidgets(eId);\r\n  }, [eId]);\r\n\r\n  return {\r\n    ...state,\r\n    getWidgets,\r\n    removeChart,\r\n    removeScoreCard,\r\n    addWidget,\r\n    editScoreCards,\r\n    saveWidgets\r\n  };\r\n};\r\n\r\nexport default {\r\n  useWidgets,\r\n};\r\n","import React from 'react'\r\nimport { Grid, List, Text } from '../../style';\r\nimport { ScoreCard } from './score-card';\r\nimport { invertedTxtColor } from '../../config';\r\nimport { moment } from '../../utils/time';\r\n\r\nexport default ({ style, scoreCards, loading, refresh }: any) => {\r\n  return (\r\n    <div className=\"slide-up\"\r\n      style={{ width: \"100%\", gridColumn: \"1/-1\", padding: \".9em .5em\", ...style }}>\r\n      {!loading && <Text\r\n        style={{ gridColumn: '1/-1', fontSize: '.8em' }}\r\n        textAlign='right'\r\n        color={invertedTxtColor}\r\n      >\r\n       &nbsp; Updated at: {moment().format('hh:mm A')}\r\n      </Text>}\r\n      <Grid cols={loading ? 1 : 5} mobileCols='1fr 1fr' placeItems={loading ? 'center' : 'stretch'} style={{ minHeight: \"9em\" }}>\r\n        <List\r\n          list={scoreCards}\r\n          loading={loading}\r\n          map={(item: any, index: number) => (\r\n            <ScoreCard.FlatValue\r\n              refresh={refresh}\r\n              borderRight={index < scoreCards.length - 1}\r\n              name={item.title}\r\n              flatValueQuery={item.flatValueQuery}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n\r\n    </div>);\r\n}","import { useState, useEffect  } from \"react\";\r\n  \r\nexport const useRefresh = ()=> {  \r\n    const [ refresh, setRefresh ] = useState(true);\r\n\r\n    useEffect(()=>{if(!refresh)setRefresh(true)}, [ refresh])\r\n\r\n    return {\r\n        needsRefresh: refresh,\r\n        refresh: ()=>{console.log(\"refreshing\"); setRefresh(true)}\r\n    };\r\n\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport { Grid, Button, Modal, Switch, Empty } from \"../../style\";\r\nimport Table from \"./table\";\r\nimport { primaryColor} from \"../../config\";\r\nimport img from \"../../assets/announ.svg\";\r\nimport { Announcement } from \"../../model/domain/announcements\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAnnouncements, addAnnouncement, deleteAnnouncement, editAnnouncement } from \"../../store/actions/announcement\";\r\nimport Form from \"./form\";\r\nimport { useWidgets } from \"../../hooks/widget\";\r\nimport { ComponentsContext } from \"../../context/components\";\r\nimport ScoreCards from \"../../components/score-card/score-cards\";\r\nimport { useRefresh } from \"../../hooks/refresh\";\r\n\r\nconst states = {\r\n  ACTIVE: \"ACTIVE\",\r\n  ALL: \"ALL\",\r\n  EXPIRED: \"EXPIRED\",\r\n  DEFAULT: \"ACTIVE\",\r\n  states: [\"ACTIVE\", \"ALL\", \"EXPIRED\"],\r\n};\r\n\r\nconst AnnoucementEl = () => {\r\n  const eId = useSelector((state: any) => state.user.enterprise.id);\r\n  const screen = \"announcement\";\r\n  const resource = \"announcement\";\r\n\r\n  const { loading, scoreCards} = useWidgets({ eId, screen, resource });\r\n\r\n  const { needsRefresh, refresh } = useRefresh();\r\n  const announcements = useSelector(\r\n    (state: any) => state.announcement.announcements\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({ active: states.DEFAULT });\r\n\r\n  const add = (item: Announcement) => {\r\n    dispatch(addAnnouncement(eId, item));\r\n    refresh();\r\n  };\r\n\r\n  const edit = (item: Announcement) => dispatch(editAnnouncement(eId, item));\r\n  const remove = (i: number) => {\r\n    dispatch(deleteAnnouncement(eId, i));\r\n    refresh();\r\n  };\r\n\r\n  const AddModal = Modal({\r\n    title: \"Add Announcement\",\r\n    message: <Adder add={add} close={() => AddModal.close()} />,\r\n    hideCancel: true,\r\n  });\r\n\r\n  const open = (selected: Announcement) => {\r\n    const EditModal = Modal({\r\n      title: \"Edit Announcement\",\r\n      message: <Adder\r\n        add={edit}\r\n        initialValues={selected}\r\n        close={() => EditModal.close()}\r\n      />,\r\n      hideCancel: true,\r\n    });\r\n    EditModal.open();\r\n  }\r\n\r\n  const currentAnnouncements = announcements.filter(\r\n    ({ status }: any) =>\r\n      status.toUpperCase() === state.active || state.active === states.ALL\r\n  );\r\n\r\n\r\n  useEffect(() => {\r\n    if (eId) dispatch(getAnnouncements(eId));\r\n  }, [eId]);\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Layout.Top style={{paddingTop: '3em'}}>\r\n        <ScoreCards\r\n          refresh={refresh}\r\n          loading={loading}\r\n          scoreCards={scoreCards}\r\n        />\r\n        </Layout.Top>\r\n      <Layout.Bottom>\r\n      <Table \r\n       className='min-height-table'\r\n        edit={open} \r\n        add={AddModal.open}\r\n        remove={remove}\r\n        toggler={\r\n          <Switch\r\n            style={{margin: \"0 0 .5em 0\"}}\r\n            active={state.active}\r\n            items={states.states}\r\n            onClick={(active: string) => setState({ ...state, active })}\r\n          />\r\n        }\r\n        announcements={currentAnnouncements}\r\n      />\r\n      </Layout.Bottom>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst Adder = (props: any) => {\r\n  return (\r\n    <Grid customCols=\"3fr 2fr\" width=\"100%\" height=\"100%\" gridGap=\"0\">\r\n      <div style={{ background: primaryColor, height: \"100%\", padding: \"1em\", width: \"100%\" }}>\r\n        <img src={img} style={{ maxWidth: \"300px\" }} />\r\n      </div>\r\n      <Form {...props} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AnnoucementEl;","import {  yearToDate, getInterval,  currentMonth } from \"../../utils/time\";\r\n\r\nconst json = {\r\n   \"timeframes\": [\r\n      {\r\n         \"label\": \"Custom\",\r\n         \"enteries\": [\r\n            {\r\n               \"value\": null,\r\n               \"label\": \"Custom\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"label\": \"To-Date\",\r\n         \"enteries\": [\r\n            {\r\n               \"value\": currentMonth(),\r\n               \"label\": \"Current Month\",\r\n               defaultValue: true\r\n            },\r\n            {\r\n               \"value\": currentMonth(-1),\r\n               \"label\": \"Last Month\"\r\n            },\r\n            {\r\n               \"value\": yearToDate(),\r\n               \"label\": \"Year To Date\"\r\n            },\r\n         ]\r\n      },\r\n      {\r\n         \"label\": \"Interval\",\r\n         \"enteries\": [\r\n            {\r\n               \"value\": getInterval(30),\r\n               \"label\": \"Last 30 Days\"\r\n            },\r\n            {\r\n               \"value\": getInterval(90),\r\n               \"label\": \"Last 90 Days\"\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"aggregations\": {\r\n      \"label\": \"Aggregations\",\r\n      \"values\": [\r\n       \r\n         {\r\n            \"label\": \"Daily\",\r\n            \"value\": {\r\n               \"alignmentReducer\": \"SUM\",\r\n               \"alignmentPeriod\": \"1d\"\r\n            }\r\n         },\r\n         {\r\n            \"label\": \"Weekly\",\r\n            \"value\": {\r\n               \"alignmentReducer\": \"SUM\",\r\n               \"alignmentPeriod\": \"1w\"\r\n            }\r\n         },\r\n         {\r\n            \"label\": \"Monthly\",\r\n            \"value\": {\r\n               \"alignmentReducer\": \"SUM\",\r\n               \"alignmentPeriod\": \"1m\"\r\n            }\r\n         }\r\n      ]}\r\n}\r\n\r\nexport default json;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid, Button } from '../../style';\r\nimport Filter from '../../components/filter';\r\nimport { useMetricData } from '../../hooks/metrics';\r\nimport useTimeseries from '../../hooks/timeseries';\r\nimport options from './filter-options';\r\nimport chart from './chart.json';\r\nimport Chart from '../../components/chart';\r\nimport { currentMonth } from '../../utils/time';\r\nimport { Select } from 'antd';\r\n\r\nconst revenueTimeSeries = {...chart.revenueTimeSeriesQuery, interval: currentMonth()};\r\nconst countTimeSeries = { ...chart.transactionCountTimeSeriesQuery, interval: currentMonth() };\r\n\r\nconst Analytics = () => {\r\n    const filterWidth = 375;\r\n    const [ open, setOpen ] = useState(true);\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const [toggle, setToggle] = useState(false);\r\n    const revenueMetric = useMetricData({\r\n        timeseries: revenueTimeSeries,\r\n        interval: currentMonth(),\r\n        eId\r\n    });\r\n\r\n    const countMetric = useMetricData({\r\n        timeseries: countTimeSeries,\r\n        interval: currentMonth(),\r\n        eId\r\n    });\r\n\r\n    const { timeseries, actions } = useTimeseries(revenueTimeSeries as any);\r\n\r\n    const filterProps = {\r\n        defaultValue: timeseries,\r\n        metricDataStatus: revenueMetric.metricDataStatus,\r\n        filterWidth,\r\n        loading: revenueMetric.metricDataStatus.loading || countMetric.metricDataStatus.loading,\r\n        submit: () => {\r\n            setTimeout(()=>setOpen(false), 400);\r\n            revenueMetric.refresh(timeseries);\r\n            countMetric.refresh({ ...timeseries, metricType: \"citation_transaction_count\" })\r\n        },\r\n        actions,\r\n        hideTimeSelection: true,\r\n        timeseries,\r\n        options: { ...options, aggregations: undefined }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (toggle) {\r\n            revenueMetric.refresh(timeseries);\r\n            countMetric.refresh({ ...timeseries, metricType: \"citation_transaction_count\" })\r\n            setToggle(false)\r\n        }\r\n    }, [timeseries]);\r\n\r\n\r\n    const selectProps = {\r\n        style: { width: '100px', marginRight: \"1em\" },\r\n        disabled: revenueMetric.metricDataStatus.loading || countMetric.metricDataStatus.loading\r\n    };\r\n    return (\r\n        <Grid placeItems=\"start stretch\" padding=\"1em\" height=\"100%\">\r\n            <Grid cols=\"1\" gridGap=\"0 1em\">\r\n                <Chart.Multi\r\n                    className='slide-up'\r\n                    filterWidth={filterWidth}\r\n                    metricDataStatuses={[revenueMetric.metricDataStatus, countMetric.metricDataStatus]}\r\n                    {...chart as any}\r\n                    eId={eId}\r\n                    queries={{transactionTimeSeriesQuery : { ...timeseries, metricType: \"citation_transaction_count\" }, revenueTimeSeriesQuery: timeseries}}\r\n                    legend={{ label: 'Citations' }}\r\n                    filter={\r\n                        <AdditionalFilter\r\n                            actions={actions}\r\n                            open={open}\r\n                            selectProps={selectProps}\r\n                            setToggle={setToggle}\r\n                            setOpen={setOpen}\r\n                        />}\r\n                />\r\n                <Filter {...filterProps} open={open} toggle={()=>{setOpen(false); actions.refresh(revenueTimeSeries)}} />\r\n            </Grid>\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nconst AdditionalFilter = ({ actions, open, selectProps, setToggle, setOpen }: any) => (\r\n    <div>\r\n        <Select\r\n            onChange={(e: any) => {\r\n                actions.setAlignment(JSON.parse(e));\r\n                setToggle(true);\r\n            }}\r\n            defaultValue={\"Daily\"}\r\n            {...selectProps}\r\n        >\r\n            {options.aggregations.values.map(({ value, label }: any) => <Select.Option value={JSON.stringify(value)}>\r\n                {label}\r\n            </Select.Option>)}\r\n        </Select>\r\n        {!open ?\r\n            <Button\r\n                placeSelf=\"end\"\r\n                rounded\r\n                shadow\r\n                minWidth=\"3em\"\r\n                onClick={() => setOpen(!open)}\r\n                faIcon={`fa fa-filter`}\r\n            /> : null}</div>\r\n)\r\n\r\nexport default Analytics;","import React from 'react';\r\nimport Layout from '../../layout';\r\nimport ScoreCards from '../../components/score-card/score-cards';\r\nimport { useWidgets } from '../../hooks/widget';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid } from '../../style';\r\nimport Analytics from './analytics';\r\n\r\nconst Citations = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { loading, scoreCards } = useWidgets({ eId, screen: \"citation\" });\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Grid customCols=\"1fr auto\" width=\"100%\" gridGap=\"0\" placeItems=\"start\" style={{ height: \"100%\" }}>\r\n                <div style={{ width: \"100%\", placeSelf: 'start end' }}>\r\n                    <Layout.Top >\r\n                        <div></div>\r\n                        <ScoreCards\r\n                            loading={loading}\r\n                            eId={eId}\r\n                            scoreCards={scoreCards}\r\n                        />\r\n                    </Layout.Top>\r\n                    <Layout.Bottom >\r\n                        <Analytics />\r\n                    </Layout.Bottom>\r\n                </div>\r\n            </Grid>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Citations;","import { Button, Grid } from '../../../style';\r\nimport React, { useState } from 'react';\r\nimport { Popconfirm } from 'antd';\r\nimport { moment, FORMAT_DATETIME, NEW_FORMAT_DATETIME } from '../../../utils/time';\r\nimport Label from '../../../components/label';\r\nimport { Event } from '../type';\r\n  \r\nconst columns = (edit: any, remove: any, loadingAction = false, index = 0) => {\r\n    return [{\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        render: (text: string) => <div className='txt-overflow'>{text}</div>\r\n    },\r\n    {\r\n        title: 'Location',\r\n        dataIndex: 'location',\r\n        key: 'location',\r\n        render: (text: string) => <div className='txt-overflow'>{text}</div>\r\n    },\r\n    {\r\n        title: 'Start Time',\r\n        dataIndex: 'startTime',\r\n        key: 'startTime',\r\n        render: (t: string) => moment(t).format(FORMAT_DATETIME)\r\n    },\r\n    {\r\n        title: 'End Time',\r\n        dataIndex: 'endTime',\r\n        key: 'endTime',\r\n        render: (t: string) => moment(t).format(FORMAT_DATETIME)\r\n    },\r\n    {\r\n        title: <span>Launch Date <Label label={'Date on which the message will appear in ParkStash App'} /></span>,\r\n        key: 'launchAt',\r\n        dataIndex: 'launchAt',\r\n        render: (t: string) => moment(t).format(NEW_FORMAT_DATETIME)\r\n    },\r\n    {\r\n        title: <span>Dynamic Dates<Label label={'Date on which price was changed'} /></span>,\r\n        key: 'endTime',\r\n        dataIndex: 'endTime',\r\n        render: (t: string) => <>\r\n                    {`${moment(t).set('day', -4).hour(9).minutes(32).format(FORMAT_DATETIME)} to `}<br/>\r\n                    {`${moment(t).format(FORMAT_DATETIME)}`}\r\n                    </>\r\n    },\r\n\r\n    {\r\n        title: <span>Garages <Label label={'Date on which the message will appear in ParkStash App'} /></span>,\r\n        key: 'garages',\r\n        dataIndex: 'garages',\r\n        render: GaragesList\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (_: any, record: any) => {\r\n            return (\r\n                <Grid>\r\n                    <Button\r\n                        shadow\r\n                        disabled={loadingAction}\r\n                        loading={loadingAction}\r\n                        onClick={() => edit(record)}\r\n                    >\r\n                        <i className=\"fa fa-edit\"></i> &nbsp;Edit\r\n                    </Button>\r\n\r\n                    <Popconfirm\r\n                        okButtonProps={{ size: 'middle' }}\r\n                        cancelButtonProps={{ size: 'middle' }}\r\n                        title=\"Are you sure\"\r\n                        onConfirm={() => remove(record)}\r\n                    >\r\n                        <Button\r\n                            shadow\r\n                            bg=\"red\"\r\n                            disabled={loadingAction}\r\n                            loading={loadingAction}\r\n                        >\r\n                            <i className=\"fa fa-trash\"></i> &nbsp;Delete\r\n                        </Button>\r\n                    </Popconfirm>\r\n                </Grid>\r\n            )\r\n        },\r\n    },\r\n    ]\r\n};\r\n\r\nconst garages = [ 'North 10th St Garage','South 7th St Garage','West 4th St Garage']\r\nconst GaragesList = (g: Event.Garage[]) => {\r\n    const [show, setShow] =  useState(false)\r\n    return <>\r\n    {g.map((garage, i) => {\r\n        if (i > 1 && !show) return null;\r\n        if (i === 1 && !show) \r\n        return (\r\n            <span className='bold pointer' style={{ float: 'right' }} onClick={()=>setShow(!show)}> \r\n                Show More&nbsp;<i className='fa fa-chevron-down'></i>\r\n            </span>);\r\n\r\n        return (\r\n            <div className='badge inverted' style={{ marginBottom: \".5em\" }}>\r\n                <b>{garages[i % garages.length]}: </b> <b className='right'>${garage.price}</b>\r\n                <br />\r\n                Estimated Staff: &nbsp;&nbsp; {garage.staffExpected} <br/>Actual Staff Assigned: {garage.staffOccupancy} \r\n                <br/>\r\n                Spaces Assigned: {garage.maxOccupancy} \r\n            </div>\r\n        )\r\n    })}\r\n    {show &&\r\n      <span className='bold pointer' style={{ float: 'right' }} onClick={()=>setShow(!show)}> \r\n                See Less&nbsp;<i className='fa fa-chevron-up'></i>\r\n     </span>}\r\n    </>\r\n}\r\nexport default columns;","import React from \"react\";\r\nimport { Card, Empty, Button, Grid} from \"../../../style\";\r\nimport { Table } from \"antd\";\r\nimport { primaryColor, mobileWidth } from \"../../../config\";\r\nimport styled from \"styled-components\";\r\nimport columns from \"./columns\";\r\n\r\nlet locale = {\r\n  emptyText: <Empty text=\"No Event\" />\r\n};\r\n\r\nexport default ({ events, edit, add, toggler, remove, loading }: any) => {\r\n\r\n  return (\r\n    <Card shadow minWidth=\"60vw\" padding=\".5em\">\r\n      <Grid customCols=\"auto 1fr auto\">\r\n        <div></div>\r\n        {toggler}\r\n        <Button\r\n          rounded\r\n          invert\r\n          padding=\".2em\"\r\n          shadow\r\n          faIcon={`fa fa-${\"plus\"}`}\r\n          onClick={add}\r\n          minWidth=\"4.5em\"\r\n        > Add\r\n        </Button>\r\n\r\n      </Grid>\r\n      <DIV>\r\n        <Table\r\n          className='min-height-table'\r\n          locale={locale}\r\n          key={Math.random() * 1000}\r\n          loading={loading}\r\n          style={{ color: primaryColor, maxWidth: \"90vw\" }}\r\n          dataSource={events}\r\n          columns={columns(\r\n            edit,\r\n            (i: any) => remove(i), \r\n            false\r\n          )}\r\n        />\r\n      </DIV>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst DIV = styled.div`\r\n  @media (max-width: ${mobileWidth}) {\r\n    overflow-x: scroll;\r\n  }\r\n`;","import React from 'react';\r\nimport { Grid, Header as Text, List, Empty } from '../../../style';\r\nimport useGarages from '../../../hooks/garage';\r\nimport { useSelector } from 'react-redux';\r\nimport { ScoreCard } from '../../../components/score-card/score-card';\r\nimport { moment } from '../../../utils/time';\r\nimport { invertedTxtColor, disabledTxtColor } from '../../../config';\r\n\r\nconst Header = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n\r\n    return (\r\n        <Grid\r\n            cols='5'\r\n            style={{ gridColumn: '1/-1' }}\r\n            width='100%'\r\n            padding='1.5em 1.5em 0 1.5em'\r\n        >  \r\n            <Text\r\n                className='hide-mobile'\r\n                style={{ gridColumn: '1/-1', placeSelf: \"end\" }}\r\n                size={4.6}\r\n                color={invertedTxtColor}\r\n            >\r\n                Updated at: {moment().format('hh:mm A')}\r\n            </Text>\r\n\r\n            <ScoreCard title='Active Events' faIcon='fa fa-event' hoverLabel='Active Events' borderRight>\r\n                <span className='txt-lgx'>2</span>\r\n                <span className='txt-md'>/2</span>\r\n            </ScoreCard>\r\n\r\n            <ScoreCard title='Past Events' faIcon='fa fa-event' hoverLabel='Past Events' borderRight>\r\n                <span className='txt-lgx'>0</span>\r\n            </ScoreCard>\r\n\r\n        </Grid>);\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport { Grid, Button, Text, Header } from '../../../style';\r\nimport { Input, DatePicker, Switch, InputNumber, Select } from 'antd';\r\nimport { useFormik } from 'formik';\r\nimport { moment, FORMAT_DATETIME, Moment } from '../../../utils/time';\r\nimport Label from '../../../components/label';\r\nimport logger from '../../../utils/logger';\r\nimport { Event } from '../type';\r\nimport { Garage } from '../../../model/domain/garage';\r\nimport useGarages from '../../../hooks/garage';\r\n\r\nconst nowISO = moment().toISOString();\r\n\r\nconst defaultValues = () : Event.Event=> ({\r\n    id: String(Math.random() * 10000),\r\n    name: \"\",\r\n    status: 'active',\r\n    location: \"\",\r\n    type: \"paid\",\r\n    startTime: new Date().toISOString(),\r\n    endTime: new Date().toISOString(),\r\n    launchAt: nowISO,\r\n    garages: [defaultGarage],\r\n});\r\n\r\nconst defaultGarage : Event.Garage = {\r\n    id: '',\r\n    price: 0,\r\n    staffExpected: 0,\r\n    staffOccupancy: 0,\r\n    maxOccupancy: 0\r\n}\r\nconst format = FORMAT_DATETIME;\r\nconst Form = ({ add, close, initialValues = defaultValues(), eId }: any) => {\r\n    const { garages } = useGarages({ eId });\r\n    const [loading, setLoading] = useState(false);\r\n    const { handleSubmit, handleChange, values, setFieldValue } = useFormik({\r\n        initialValues,\r\n        onSubmit(values) {\r\n            submit(values)\r\n        }\r\n    })\r\n    const submit = async (values: any) => {\r\n        try {\r\n            setLoading(true)\r\n            await add(values);\r\n            close();\r\n        } catch (e) {\r\n            logger.log(e)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const error = !values.name || !values.location\r\n    const style = {\r\n        padding: \".5em 1em\", height: \"100%\", width: \"100%\",\r\n        placeItems: \"start stretch\", gridGap: \".4em\", background: \"white\"\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Header bold textAlign='left'>Event Information</Header>\r\n    <form onSubmit={handleSubmit} className=\"grid\" style={{ \r\n    ...style, gridGap: '1em', maxWidth: '500px',\r\n     overflowY: 'auto' }}>\r\n     \r\n        <div>\r\n            <Text textAlign=\"left\" bold>Name<span className='red'>*</span></Text>\r\n            <Input\r\n                name={\"name\"}\r\n                value={values.name}\r\n                onChange={handleChange}\r\n                placeholder=\"Example: SJSU Graduation Ceramony\"\r\n            />\r\n        </div>\r\n\r\n        <div>\r\n            <Text textAlign=\"left\" bold>Location <span className='red'>*</span></Text>\r\n            <Input\r\n                name={\"location\"}\r\n                value={values.location}\r\n                onChange={handleChange}\r\n                placeholder=\"Example: 3300 Madison St\"\r\n            />\r\n        </div>\r\n\r\n        <div className=\"grid\" style={{ placeItems: \"end\" }}>\r\n            <Text textAlign=\"left\" placeSelf=\"stretch\" bold>\r\n                Start Time\r\n                <Label label={'Date on which the event will start'} />\r\n            </Text>\r\n            <DatePicker\r\n                use12Hours\r\n                showTime={{ format: 'hh:mm a' }}\r\n                format={format}\r\n                minuteStep={15}\r\n                style={{ width: \"100%\" }}\r\n                value={moment(values.startTime)}\r\n                onChange={(e: Moment | null) => {\r\n                    if (!e) return;\r\n                    setFieldValue(\"startTime\", e.toISOString());\r\n                }} />\r\n        </div>\r\n\r\n        <div className=\"grid\" style={{ placeItems: \"end\" }}>\r\n            <Text textAlign=\"left\" placeSelf=\"stretch\" bold>\r\n                End Time\r\n                <Label label={'Date on which the event will end'} />\r\n            </Text>\r\n            <DatePicker\r\n                use12Hours\r\n                showTime={{ format: 'hh:mm a' }}\r\n                format={format}\r\n                minuteStep={15}\r\n                style={{ width: \"100%\" }}\r\n                value={moment(values.endTime)}\r\n                onChange={(e: Moment | null) => {\r\n                    if (!e) return;\r\n                    setFieldValue(\"endTime\", e.toISOString());\r\n                }} />\r\n        </div>\r\n\r\n        <div className=\"grid\" style={{ placeItems: \"end\" }}>\r\n            <Text textAlign=\"left\" placeSelf=\"stretch\" bold>\r\n                Launch Date\r\n                <Label label={'Date on which the message will appear in ParkStash App'} />\r\n            </Text>\r\n            <DatePicker\r\n                use12Hours\r\n                showTime={{ format: 'hh:mm a' }}\r\n                format={format}\r\n                minuteStep={15}\r\n                style={{ width: \"100%\" }}\r\n                value={moment(values.launchAt)}\r\n                onChange={(e: Moment | null) => {\r\n                    if (!e) return;\r\n                    setFieldValue(\"launchAt\", e.toISOString());\r\n                }} />\r\n        </div>\r\n\r\n        <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                <Text textAlign=\"left\" placeSelf=\"end start\" bold>\r\n                    Paid Event \r\n                </Text>\r\n                <Switch\r\n                    checked={values.type === 'paid'}\r\n                    style={{ placeSelf: \"end\" }}\r\n                    onChange={(checked: boolean) => \r\n                        setFieldValue(\"type\", checked? 'paid': 'free')\r\n                    }\r\n                />\r\n        </Grid>\r\n        <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\"  customCols='1fr auto'>\r\n                <Text textAlign=\"left\" placeSelf=\"end start\">\r\n                <span className='bold'>Add a Garages:</span> Garages ({values.garages.length})\r\n                </Text>\r\n                <i className='fa fa-plus pointer' onClick={()=>setFieldValue(\"garages\", [...values.garages, defaultGarage])}></i>\r\n                {values.garages.map(({}: Event.Garage, i: number)=>(\r\n                <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" customCols='auto 1fr' style={{gridColumn: '1/-1'}}>\r\n              \r\n                    <Text style={{gridRow: 'span 5'}}>{i + 1}.</Text> \r\n\r\n                    <Select\r\n                    style={{width: \"100%\"}}\r\n                   // value={values.garages[i].id}\r\n                //    onChange={(e) =>setFieldValue('garages', e)}\r\n                >\r\n                {garages.map(({ name, id }: Garage) => <Select.Option value={id}>{name}</Select.Option>)}\r\n                </Select>\r\n                    {values.type === 'paid' && \r\n                    <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                      <Text textAlign=\"left\" placeSelf=\"end start\" bold>Price ($)</Text>\r\n                           <InputNumber\r\n                               min={0}\r\n                               step={0.25}\r\n                               style={{ placeSelf: \"end\" }}\r\n                           //    value={values.garages[i].price}\r\n                        //       onChange={(e) => setFieldValue(\"price\", e)}\r\n                               name={\"price\"}\r\n                           />\r\n                   </Grid>}\r\n\r\n                   <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                       <Text textAlign=\"left\" placeSelf=\"end start\" bold>Max Occupancy: </Text>\r\n                           <InputNumber\r\n                               min={0}\r\n                               style={{ placeSelf: \"end\" }}\r\n                           //    value={values.garages[i].maxOccupancy}\r\n                         //      onChange={(e) => setFieldValue(\"maxOccupancy\", e)}\r\n                               name={\"maxOccupancy\"}\r\n                           />\r\n                   </Grid>\r\n                   <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                       <Text textAlign=\"left\" placeSelf=\"end start\" bold>Staffs: </Text>\r\n                           <InputNumber\r\n                               min={0}\r\n                               style={{ placeSelf: \"end\" }}\r\n                             //  value={values.garages[i].staffOccupancy}\r\n                           //    onChange={(e) => setFieldValue(\"staffOccupancy\", e)}\r\n                               name={\"staffOccupancy\"}\r\n                           />\r\n                   </Grid>\r\n                   <Text \r\n                   textAlign='right' \r\n                   className='pointer' \r\n                   margin='0 0 2em 0'\r\n                   bold\r\n                   onClick={()=>setFieldValue('garages', values.garages.filter((_: any, index: number)=> index !== i))}\r\n                   >\r\n                       Remove this Garage\r\n                   </Text>\r\n                </Grid>))}\r\n        </Grid>\r\n \r\n        <Grid cols=\"2\" size=\"0.7em\" placeItems={\"stretch\"} style={{marginBottom: '5em'}}>\r\n            <Button.Normal\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                onClick={() => close()}\r\n            >\r\n                Cancel\r\n                </Button.Normal>\r\n            {loading ?\r\n                <Button loading disabled>Loading</Button> :\r\n                <Button.Normal\r\n                    type=\"submit\"\r\n                    disabled={error}\r\n                    onSubmit={(e: any) => handleSubmit(e)}>\r\n                    Finish\r\n            </Button.Normal>\r\n            }\r\n        </Grid>\r\n    </form>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import { useState, useEffect } from \"react\";\r\nimport API from \"../api\";\r\nimport { asyncHandler } from \"../utils\";\r\nimport { Event } from \"../pages/events/type\";\r\nimport { moment} from '../utils/time'\r\n\r\nconst event = (event, location) => ({ \r\n  id: String(Math.random() * 10000),\r\n  name: event, \r\n  location,\r\n  type: \"free\",\r\n  status: \"active\",\r\n  startTime: moment().hour(8).minute(0).second(0).toISOString(),\r\n  endTime: moment().hour(18).minute(0).second(0).toISOString(),\r\n  launchAt: moment().set('days', -7).toISOString(), \r\n  garages : [\r\n      {\r\n          maxOccupancy: 1300,\r\n          staffOccupancy: 2,\r\n          staffExpected: 4,\r\n          price: 8,\r\n          id: '4444'\r\n      },\r\n      {\r\n        maxOccupancy: 1300,\r\n        staffOccupancy: 3,\r\n        staffExpected: 3,\r\n        price: 8,\r\n        id: '4444'\r\n    },\r\n      {\r\n        maxOccupancy: 1300,\r\n        staffOccupancy: 2,\r\n        staffExpected: 3,\r\n        price: 8,\r\n        id: '4444'\r\n    }\r\n  ],\r\n})\r\n\r\nconst events = [event(\"Taylor Swift Concert\", \"SJSU Event Center\"), event(\"Jay-Z Concert\", \"CEFCU Stadium\")];\r\nexport const useEvents = ({ eId , refresh = ()=>{}}: any) => {\r\n  const [state, setter ] = useState({\r\n    events: [] as Event.Event[],\r\n    loading: false,\r\n    error: false\r\n  });\r\n\r\n  const setState = (obj: any) => setter({ ...state, ...obj });\r\n\r\n  const getEvents = async () => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () => API.getEnterpriseUsers(eId),\r\n      notify: false,\r\n    });\r\n    setState({\r\n      loading: false,\r\n      error: res?.success || true,\r\n      events: events,\r\n    });\r\n  };\r\n\r\n  const removeEvent = async (event: Event.Event) => {\r\n    setState({ loading: true, error: false });\r\n    // const res = await asyncHandler({\r\n    //   apiCall: () => API.removeEnterpriseUser(eId, event.id),\r\n    //   successMessage: \"User was Rejected\",\r\n    //   errorMessage: \"User was not Rejected\",\r\n    //   refresh\r\n    // });\r\n\r\n    const newEvents = state.events.filter((e: Event.Event)=> e.id !== event.id)\r\n    setState({ loading: false, error: false, events: newEvents });\r\n\r\n  };\r\n\r\n  const addEvent = async (event: Event.Event) => {\r\n    console.log('here')\r\n    setState({ loading: true, error: false });\r\n    // const res = await asyncHandler({\r\n    //   apiCall: () => API.removeEnterpriseUser(eId, event),\r\n    //   successMessage: \"User was Rejected\",\r\n    //   errorMessage: \"User was not Rejected\",\r\n    //   refresh\r\n    // });\r\n\r\n    setState({ loading: false, error: false, events: [...state.events, event] });\r\n  };\r\n  \r\n  const editEvent = async (event: Event.Event) => {\r\n    setState({ loading: true, error: false });\r\n\r\n\r\n    setState({ loading: false, error: false });\r\n  };\r\n\r\n\r\n  useEffect(() => {getEvents();}, [eId]);\r\n  return {\r\n    ...state,\r\n    actions: {\r\n      removeEvent,\r\n      refreshEvent: getEvents,\r\n      addEvent,\r\n      editEvent\r\n    }\r\n  };\r\n};\r\n\r\nexport default {\r\n  useEvents,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from '../../../layout';\r\nimport img from '../../../assets/eventss.svg';\r\nimport { Grid, Modal, Switch, Text } from \"../../../style\";\r\nimport Table from \"./table\";\r\nimport Header from \"./header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Form from \"./form\";\r\nimport { useRefresh } from \"../../../hooks/refresh\";\r\nimport { useEvents } from \"../../../hooks/events\";\r\nimport { Event } from \"../type\";\r\nimport { Overlay } from 'platyplex_ui';\r\nimport { disabledTxtColor } from \"../../../config\";\r\n\r\nconst states = {\r\n    ACTIVE: \"ACTIVE\",\r\n    ALL: \"ALL\",\r\n    EXPIRED: \"EXPIRED\",\r\n    DEFAULT: \"ACTIVE\",\r\n    states: [\"ACTIVE\", \"ALL\", \"EXPIRED\"],\r\n};\r\n\r\nconst Listings = ({ switches }: { switches: JSX.Element }) => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const [state, setState] = useState({ active: states.DEFAULT });\r\n    const { needsRefresh, refresh } = useRefresh();\r\n    const { events, actions, loading} = useEvents({ eId, refresh })\r\n    const AddModal = Modal({\r\n        title: \"Add Event\",\r\n        className: 'hide',\r\n        modal: <Adder add={actions.addEvent} close={() => AddModal.close()} eId={eId}/>,\r\n        hideCancel: true,\r\n    });\r\n\r\n    const open = (selected:Event.Event) => {\r\n        const EditModal = Modal({\r\n            title: \"Edit Event\",\r\n            modal: <Adder\r\n                eId={eId}\r\n                add={actions.editEvent}\r\n                initialValues={selected}\r\n                close={() => EditModal.close()}\r\n            />,\r\n            hideCancel: true,\r\n        });\r\n        EditModal.open();\r\n    }\r\n\r\n    const currentEvents = events.filter(\r\n        ({ status }: Event.Event) =>\r\n            status.toUpperCase() === state.active || state.active === states.ALL\r\n    );\r\n\r\n    useEffect(() => {\r\n        //  if (eId) dispatch(getAnnouncements(eId));\r\n    }, [eId]);\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Layout.Top >\r\n                {switches}\r\n                <Header />\r\n            </Layout.Top>\r\n            <Layout.Bottom>\r\n                <Table\r\n                    className='min-height-table'\r\n                    edit={open}\r\n                    add={AddModal.open}\r\n                    remove={actions.removeEvent}\r\n                    loading={loading}\r\n                    toggler={\r\n                        <Switch\r\n                            style={{ margin: \"0 0 .5em 0\" }}\r\n                            active={state.active}\r\n                            items={states.states}\r\n                            onClick={(active: string) => setState({ ...state, active })}\r\n                        />\r\n                    }\r\n                    events={currentEvents}\r\n                />\r\n            </Layout.Bottom>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nconst Adder = (props: any) => {\r\n    return (\r\n        <Overlay image={img} className='opacity'>\r\n            <Text\r\n                color={disabledTxtColor}\r\n                margin='.5em'\r\n                placeSelf='start'\r\n                bold\r\n                textAlign='left'\r\n                onClick={props.close}\r\n                className='pointer'\r\n            >\r\n                <i className='fa fa-chevron-left'></i> Back\r\n            </Text>\r\n\r\n            <Grid  height='100%' customRows='auto auto 1fr'>\r\n            <Form {...props} />\r\n            </Grid>\r\n        </Overlay>\r\n    );\r\n};\r\n\r\nexport default Listings;","import React, { useState } from \"react\";\r\nimport Pie from \"@vx/shape/lib/shapes/Pie\";\r\nimport { Group } from \"@vx/group\";\r\nimport { getColor } from \"../../utils/color\";\r\nimport { Tooltip } from \"antd\";\r\n\r\nconst defaultMargin = { top: 0, right: 0, bottom: 0, left: 0 };\r\n\r\nexport type PieProps = {\r\n    width: number;\r\n    height: number;\r\n    data: any[];\r\n    text: any;\r\n    margin?: typeof defaultMargin;\r\n};\r\n\r\nexport default function PieChart({\r\n    width,\r\n    height,\r\n    text,\r\n    data,\r\n    margin = defaultMargin,\r\n}: PieProps) {\r\n\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n    const radius = Math.min(innerWidth, innerHeight) / 2;\r\n    const centerY = innerHeight / 2;\r\n    const centerX = innerWidth / 2;\r\n    const donutThickness = 10;\r\n    const [selected, setSelected] = useState(-1);\r\n    const event = (i = -1) => ({\r\n        onTouchStart: () => setSelected(i),\r\n        onTouchMove: () => setSelected(i),\r\n        onMouseMove: () => setSelected(i),\r\n        onMouseLeave: () => setSelected(-1)\r\n    })\r\n\r\n    return (\r\n        <svg width={width} height={height}>\r\n            <rect\r\n                rx={14}\r\n                width={width}\r\n                height={height}\r\n                fill=\"transparent\"\r\n            />\r\n            <g>\r\n                <text\r\n                    fill=\"white\"\r\n                    x={centerX}\r\n                    fontWeight='bold'\r\n                    textAnchor=\"middle\"\r\n                    dy='8px'\r\n                    y={centerY}\r\n                    fontSize={24}\r\n                >  {text}\r\n                </text>\r\n            </g>\r\n            <Group top={centerY + margin.top} left={centerX + margin.left}>\r\n                <Pie\r\n                    data={data}\r\n                    fill='#5578D6'\r\n                    pieValue={(d: any) => d.value}\r\n                    outerRadius={radius}\r\n                    innerRadius={radius - donutThickness}\r\n                    cornerRadius={3}\r\n                    padAngle={0.005}\r\n                    children={(pie: any) => (\r\n                        pie.arcs.map((item: any, i: number) => (\r\n                            <g key={0}>\r\n                                {item.data.label ?\r\n                                    <Tooltip title={item.data.label}>\r\n                                        <path\r\n                                            d={pie.path(item)}\r\n                                            fill={getColor(i) + (selected === -1 ? 'FF' : selected === i ? 'BB' : '50')}\r\n                                            {...event(i)}\r\n                                        />\r\n                                    </Tooltip> :\r\n\r\n                                    <path d={pie.path(item)} fill={getColor(i)} />}\r\n                            </g>\r\n                        ))\r\n                    )}\r\n                />\r\n            </Group>\r\n        </svg>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport { useMetricData } from '../../hooks/metrics';\r\nimport { defaultInterval } from '../../utils/time';\r\nimport API from \"../../api\";\r\nimport { TimeSeries } from '../../model/domain/metrics';\r\n\r\nfunction getAnalyticsCharts() {\r\n  const me: EnterpriseEvent = this;\r\n\r\n  const chart = (title: string, metricType: string, chartType: string) => ({\r\n    title,\r\n    timeSeriesQuery: {\r\n      metricType,\r\n      resourceIds: [me.id],\r\n      crossSeriesReducer: 'NONE',\r\n      alignment: {\r\n        alignmentPeriod: '1d',\r\n        alignmentReducer: 'SUM'\r\n      },\r\n      interval: {\r\n        startTime: me.analyticsQueryInterval.startTime,\r\n        endTime: me.analyticsQueryInterval.endTime,\r\n      }\r\n    },\r\n    backgroundColor: '#FFFFFF',\r\n    xAxisLabel: 'T',\r\n    yAxisLabel: 'Occupancy',\r\n    chartTypes: [chartType]\r\n  });\r\n\r\n  return {\r\n    revenue: chart('Revenue by Type', 'event_revenue', 'stackedBar'),\r\n    transactions: chart('Number of Transactions', 'event_transaction_count', 'multiLine'),\r\n    reservations: chart('Reservations Per Garage', 'event_reservation_occupancy', 'stackedBar')\r\n  };\r\n};\r\n\r\nfunction getLiveCharts() {\r\n  const me: EnterpriseEvent = this;\r\n  const interval ={...me.liveQueryInterval };\r\n\r\n  const revenueAndTransactions = {\r\n    \"title\": \"Revenue & Transactions\",\r\n    \"revenueTimeSeriesQuery\": {\r\n      \"metricType\": \"event_revenue\",\r\n      \"resourceIds\": [],\r\n      \"crossSeriesReducer\": \"SUM\",\r\n      \"alignment\": {\r\n        \"alignmentPeriod\": \"1h\",\r\n        \"alignmentReducer\": \"SUM\"\r\n      },\r\n      interval\r\n    },\r\n    \"transactionTimeSeriesQuery\": {\r\n      \"metricType\": \"event_transaction_count\",\r\n      \"resourceIds\": [],\r\n      \"crossSeriesReducer\": \"SUM\",\r\n      \"alignment\": {\r\n        \"alignmentPeriod\": \"1h\",\r\n        \"alignmentReducer\": \"SUM\"\r\n      },\r\n      interval\r\n    },\r\n    \"backgroundColor\": \"#FFFFFF\",\r\n    \"xAxisLabel\": \"T\",\r\n    \"yAxisLabel\": \"Occupancy\",\r\n    \"chartTypes\" : [\"combined\"]\r\n  };\r\n\r\n  const reservations = {\r\n    \"title\": \"Total Cars Parked\",\r\n    \"timeSeriesQuery\": {\r\n      \"metricType\": \"event_reservation_occupancy\",\r\n      \"resourceIds\": [],\r\n      \"crossSeriesReducer\": \"NONE\",\r\n      interval\r\n    },\r\n    \"backgroundColor\": \"#FFFFFF\",\r\n    \"xAxisLabel\": \"T\",\r\n    \"yAxisLabel\": \"Occupancy\",\r\n    \"chartTypes\" : [ \"stackedBar\"]\r\n  };\r\n\r\n  return {\r\n    reservations,\r\n    revenueAndTransactions\r\n  };\r\n};\r\n\r\nconst [getAnalyticsStats, getLiveStats] = (() => {\r\n  function sumPoints(points) {\r\n    return points.reduce((sum, point) => point.isMissing? sum: sum + point.value, 0)\r\n  }\r\n\r\n  function getStats(epId: string, type: 'analytics' | 'live'): Promise<Stats> {\r\n    const me = this as EnterpriseEvent;\r\n    const interval = type === 'analytics'\r\n      ? me.analyticsQueryInterval\r\n      : me.liveQueryInterval;\r\n\r\n    const alignmentPeriod = type === 'analytics'? '1d': '1h';\r\n\r\n    const revenueQuery = {\r\n      metricType: 'event_revenue',\r\n      resourceIds: [me.id],\r\n      crossSeriesReducer: 'NONE',\r\n      alignment: {\r\n        alignmentPeriod,\r\n        alignmentReducer: 'SUM'\r\n      },\r\n      interval\r\n    };\r\n  \r\n    const transactionQuery = {...revenueQuery, metricType: 'event_transaction_count', crossSeriesReducer: 'SUM' };\r\n\r\n    console.log(JSON.stringify(revenueQuery, null, 2));\r\n    console.log(JSON.stringify(transactionQuery, null, 2));\r\n  \r\n    return Promise.all([\r\n      API.getTimeSeries(epId, transactionQuery),\r\n      API.getTimeSeries(epId, revenueQuery)\r\n    ]).then( ([ r1, r2 ]) => {\r\n\r\n      if (!r1.timeSeriesResult || !r2.timeSeriesResult) throw new Error('Should not be null');\r\n\r\n      //revenue\r\n      const ts1 = r2.timeSeriesResult as TimeSeries.Result;\r\n      const normal = sumPoints(ts1.timeSeries[0].points);\r\n      const dynamic = sumPoints(ts1.timeSeries[1].points);\r\n      const total = normal + dynamic;\r\n      \r\n      //transactions\r\n      const ts2 = r1.timeSeriesResult as TimeSeries.Result;\r\n      const transactions = sumPoints(ts2.timeSeries[0].points);\r\n      return { revenue: { normal, dynamic, total }, transactions };\r\n    })\r\n  }\r\n\r\n  function getAnalyticsStats(epId: string): Promise<Stats> {\r\n    const me = this as EnterpriseEvent;\r\n    return getStats.call(me, epId, 'analytics');\r\n  }\r\n\r\n  function getLiveStats(epId: string): Promise<Stats> {\r\n    const me = this as EnterpriseEvent;\r\n    return getStats.call(me, epId, 'live');\r\n  }\r\n\r\n  return [getAnalyticsStats, getLiveStats];\r\n})();\r\n\r\nexport interface Stats {\r\n  revenue: { normal: number; dynamic: number; total: number; }\r\n  transactions: number;\r\n}\r\n\r\nexport interface EnterpriseEvent {\r\n  id: string;\r\n  name: string;\r\n  start: Date;\r\n  end: Date;\r\n  getAnalyticsCharts: { (): { revenue: any; transactions: any; reservations: any } };\r\n  getLiveCharts: { (): { revenueAndTransactions: any, reservations: any }  };\r\n  getAnalyticsStats: { (epId: string): Promise<Stats> };\r\n  getLiveStats: { (epId: string): Promise<Stats> };\r\n  analyticsQueryInterval: { startTime: string; endTime: string; }\r\n  liveQueryInterval: { startTime: string; endTime: string; }\r\n  reservationOccupancy: {\r\n    garageName: string;\r\n    occupancy: number;\r\n    staffs: number;\r\n  }[]\r\n}\r\n\r\nexport function getEnterpriseEvent(eventId: string) {\r\n  return getEnterpriseEvents().find(e => e.id === eventId);\r\n}\r\n\r\nexport function getEnterpriseEvents(): EnterpriseEvent[] {\r\n  const start = new Date(Date.UTC(2020, 8, 2)).toISOString();\r\n  const end = new Date(Date.UTC(2020, 8, 12)).toISOString();\r\n\r\n  const e1: any = {\r\n    id: '5b345cb3ea260d03b87438dd',\r\n    name: 'Jay-Z Concert',\r\n    start,\r\n    end,\r\n    analyticsQueryInterval: { startTime: start, endTime: end },\r\n    liveQueryInterval: defaultInterval(),\r\n    reservationOccupancy:[\r\n      {\r\n        garageName: 'North 10th St Garage',\r\n        occupancy: .25,\r\n        staffs: 4,\r\n        expStaffs: 2\r\n      },\r\n      {\r\n        garageName: 'South 7th St Garage',\r\n        occupancy: .25,\r\n        staffs: 3,\r\n        expStaffs: 3\r\n      },\r\n      {\r\n        garageName: 'West 4th St Garage',\r\n        occupancy: .5,\r\n        staffs: 2,\r\n        expStaffs: 3\r\n      }\r\n    ]\r\n\r\n  };\r\n\r\n  const bindFunctions = (e: EnterpriseEvent) => {\r\n    e.getAnalyticsCharts = getAnalyticsCharts.bind(e); \r\n    e.getLiveCharts = getLiveCharts.bind(e); \r\n    e.getAnalyticsStats = getAnalyticsStats.bind(e);\r\n    e.getLiveStats = getLiveStats.bind(e);\r\n  }\r\n  bindFunctions(e1);\r\n\r\n  const e2: any = {\r\n    id: '5b345cb3ea260d03b87438de',\r\n    name: 'Taylor Swift Concert',\r\n    start,\r\n    end,\r\n    analyticsQueryInterval: { startTime: start, endTime: end },\r\n    liveQueryInterval: defaultInterval(),\r\n    reservationOccupancy: [\r\n      {\r\n        garageName:  'North 10th St Garage',\r\n        occupancy: .35,\r\n        staffs: 23\r\n      },\r\n      {\r\n        garageName: 'South 7th St Garage:',\r\n        occupancy: .5,\r\n        staffs: 19\r\n      },\r\n      {\r\n        garageName:'West 4th St Garage',\r\n        occupancy: .15,\r\n        staffs: 10\r\n      } \r\n    ]\r\n  };\r\n  bindFunctions(e2);\r\n\r\n  return [e1, e2];\r\n}\r\n\r\nconst selectedEnterpriseEventManager = (() => {\r\n  let selectedEnterpriseEvent = getEnterpriseEvents()[0];\r\n\r\n  let listeners : any[] = [];\r\n\r\n  return {\r\n    get selectedEnterpriseEvent() {\r\n      return selectedEnterpriseEvent;\r\n    },\r\n\r\n    addSelectedEnterpriseChangeListener(fn: any) {\r\n      const exists = !!listeners.find(l => l === fn);\r\n      if (!exists) {\r\n        listeners.push(fn);\r\n      }    \r\n    },\r\n\r\n    removeSelectedEnterpriseChangeListener(listener: any) {\r\n      listeners = listeners.filter(l => l === listener);\r\n    },\r\n\r\n    selectEnterpriseEvent(eventId: string) {\r\n      if (selectedEnterpriseEvent.id === eventId) return;\r\n      const event = getEnterpriseEvents().find(e => e.id === eventId);\r\n      if (!event) return;\r\n      selectedEnterpriseEvent = event;\r\n      listeners.forEach(l => l(event));\r\n    }\r\n  }\r\n})()\r\n\r\nexport function useSelectEnterpriseEvent() {\r\n  const [E, setE] = useState(selectedEnterpriseEventManager.selectedEnterpriseEvent);\r\n\r\n  useEffect(() => {\r\n    const listener = (event: EnterpriseEvent) => {\r\n      setE(event);\r\n    }\r\n\r\n    selectedEnterpriseEventManager.addSelectedEnterpriseChangeListener(listener);\r\n\r\n    return () => selectedEnterpriseEventManager.removeSelectedEnterpriseChangeListener(listener);\r\n  },[]);\r\n\r\n  return {\r\n    enterpriseEvent: E, \r\n    selectEnterpriseEvent: (eventId: string) => {\r\n      selectedEnterpriseEventManager.selectEnterpriseEvent(eventId);\r\n    }\r\n  }\r\n}\r\n","export const formatPercent = (n: number) => {\r\n  return (n * 100).toFixed(2) + ' %';\r\n}\r\n\r\nexport const formatCentsToDollars = (n: number) => {\r\n  return '$' + Math.round((n / 100));\r\n}","import { useState, useEffect } from 'react';\r\n\r\nexport default function usePromise<T>(promise: Promise<T>): { data: T | null, error: Error | null, loading: boolean; } {\r\n  const [state, setState] = useState({\r\n    data: null,\r\n    error: null,\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    promise\r\n      .then(result => {\r\n        setState({\r\n          data: result,\r\n          error: null,\r\n          loading: false\r\n        })\r\n      })\r\n      .catch(error => {\r\n        setState({\r\n          data: null,\r\n          error: error,\r\n          loading: true\r\n        })\r\n      });\r\n  }, [promise])\r\n\r\n   return state;\r\n}","import React, { useMemo } from 'react';\r\nimport { Grid, Header as Text, List, Empty } from '../../../style';\r\nimport useGarages from '../../../hooks/garage';\r\nimport { useSelector } from 'react-redux';\r\nimport { Garage } from '../../../model/domain/garage';\r\nimport { ScoreCard } from '../../../components/score-card/score-card';\r\nimport { overflow } from '../../../utils/text';\r\nimport { moment } from '../../../utils/time';\r\nimport { invertedTxtColor } from '../../../config';\r\nimport PieChart from '../../../components/chart/components/graph/pie-chart'\r\nimport { getEnterpriseEvents, useSelectEnterpriseEvent, Stats } from '../model';\r\nimport * as formatter from '../../../utils/pretty_format';\r\nimport { Select } from 'antd';\r\nimport { Loader } from '../../../style/loader'\r\nimport usePromise from '../../../hooks/promise_hook';\r\n\r\n\r\nconst enterpriseEvents = getEnterpriseEvents();\r\n\r\nconst Header = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { enterpriseEvent, selectEnterpriseEvent } = useSelectEnterpriseEvent();\r\n    const garages = enterpriseEvent.reservationOccupancy;\r\n    const { data, loading } = usePromise<Stats>(useMemo(() => enterpriseEvent.getAnalyticsStats(eId),\r\n        [enterpriseEvent.id]));\r\n\r\n    return (\r\n        <Grid\r\n            cols='4'\r\n            style={{ gridColumn: '1/-1', marginBottom: '1em' }}\r\n            width='100%'\r\n            padding='1.5em 1.5em 0 1.5em'\r\n        >\r\n            <div\r\n                id='header'\r\n                className='grid'\r\n                style={{\r\n                    width: '100%',\r\n                    margin: '0 0 .75em 0',\r\n                    gridColumn: '1/-1',\r\n                    gridTemplateColumns: '1fr auto'\r\n                }}>\r\n                <Select\r\n                    style={{ width: '300px', placeSelf: 'start', color: 'white' }}\r\n                    disabled={loading}\r\n                    placeholder=\"Select\"\r\n                    onChange={eventIds => selectEnterpriseEvent(eventIds)}\r\n                    value={enterpriseEvent.id}>\r\n                    {enterpriseEvents.map(e => (\r\n                        <Select.Option\r\n                            key={e.id}\r\n                            className='capitalize'\r\n                            value={e.id}>\r\n                            {e.name}\r\n                        </Select.Option>))}\r\n                </Select>\r\n                <Text size={4.6} color={invertedTxtColor} className='hide-mobile'>  Updated at: {moment().format('hh:mm A')}</Text>\r\n            </div>\r\n\r\n\r\n            <ScoreCard title='Total Revenue' faIcon='fa fa-money' hoverLabel='Total Revenue' borderRight>\r\n                {loading\r\n                    ? <Loader.Spinner color='inherit' />\r\n                    : <PieChart\r\n                        height={130}\r\n                        width={130}\r\n                        text={data ? formatter.formatCentsToDollars(data.revenue.total) : 'N/A'}\r\n                        data={data ? [\r\n                            { label: `Normal Pricing (${formatter.formatCentsToDollars(data.revenue.normal)} total)`, value: data.revenue.normal },\r\n                            { label: `Dynamic Pricing (${formatter.formatCentsToDollars(data.revenue.dynamic)} total)`, value: data.revenue.dynamic }\r\n                        ] : [{ label: 'N/A', value: 'N/A' }]} />\r\n                }\r\n\r\n            </ScoreCard>\r\n\r\n            <ScoreCard title='Transactions' faIcon='fas fa-money-check-alt' hoverLabel='Revenue' borderRight>\r\n                {loading\r\n                    ? <Loader.Spinner color='inherit' />\r\n                    : <span className='txt-lgx'>{data ? data.transactions : 'N/A'}</span>\r\n                }\r\n            </ScoreCard>\r\n            <ScoreCard title='Reservation Occupancy' faIcon='fa fa-car' hoverLabel='Occupancy Count' span={2}>\r\n                <Grid placeSelf='start' >\r\n                    <Grid\r\n                        customCols={loading ? '1fr' : '1fr  minmax(15em, auto)'}\r\n                        placeItems='stretch'\r\n                        width='100%'\r\n                        color='white'\r\n                        gridGap='.2em 1.5em'\r\n                    >\r\n                        <List\r\n                            loading={loading}\r\n                            empty={\r\n                                <div style={{ gridColumn: '1/-1' }}>\r\n                                    <Empty text={'No Garage Occupancy'} color=\"white\" style={{ width: '7em', margin: '0 auto' }} />\r\n                                </div>\r\n                            }\r\n                            pagination={{ items: 2 }}\r\n                            list={enterpriseEvent.reservationOccupancy}\r\n                            map={(({ garageName, occupancy, staffs, expStaffs }: any) => {\r\n                                return (\r\n                                    <>\r\n                                        <span className='txt-overflow'>{overflow(garageName, 23)}</span>\r\n                                        <ScoreCard.PercentBar\r\n                                            status\r\n                                            percent={occupancy * 100}\r\n                                            text={`${occupancy * 100 * 13} / ${1300}`}\r\n                                        />\r\n                                        <Grid\r\n                                            mobileLayout={false}\r\n                                            customCols='auto auto'\r\n                                            style={{ gridColumn: '1/-1', marginBottom: '1em' }}\r\n                                            width='100%'\r\n                                            placeItems='stretch' >\r\n                                            <span className='txt-left bold'>\r\n                                                Estimated Staff: {staffs}\r\n                                            </span>\r\n\r\n                                            <span className='txt-right bold'>\r\n                                                Actual Staff Assigned: {expStaffs}\r\n                                            </span>\r\n\r\n                                        </Grid>\r\n                                    </>\r\n                                )\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </ScoreCard>\r\n        </Grid>);\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport Listings from './listings';\r\nimport {  Switch } from '../../style';\r\nimport Analytics from \"./analytics\";\r\nimport Live from \"./live\";\r\n\r\nenum Pages {\r\n    \"ANALYTICS\" = \"ANALYTICS\",\r\n    \"LISTINGS\" = \"LISTINGS\",\r\n    \"LIVE\" = \"LIVE\"\r\n};\r\n\r\nconst Events = () => {\r\n    const [activePage, setActivePage] = useState<Pages>(Pages.ANALYTICS);\r\n    const switches = <Switch.underlined\r\n        style={{ placeSelf: \"start\", gridColumn: '1/-1' }}\r\n        items={Object.keys(Pages)}\r\n        onClick={(active: Pages) => setActivePage(active)}\r\n        active={activePage}\r\n    />\r\n    return activePage === Pages.LISTINGS ?\r\n        <Listings switches={switches} /> :\r\n        activePage === Pages.ANALYTICS? \r\n        <Analytics switches={switches} /> :\r\n        <Live switches={switches} />\r\n};\r\n\r\nexport default Events;","import React, {  useMemo } from \"react\";\r\nimport Layout from '../../../layout';\r\nimport { Grid } from \"../../../style\";\r\nimport Header from \"./header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Chart from '../../../components/chart';\r\nimport { useMetricData } from '../../../hooks/metrics';\r\nimport {  useSelectEnterpriseEvent } from '../model';\r\n\r\nconst Analytics = ({ switches }: { switches: JSX.Element }) => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { enterpriseEvent: activeEvent } = useSelectEnterpriseEvent();\r\n      \r\n    const metricDataParam = (charts, i: number) => ({ timeseries: charts[i].timeSeriesQuery, interval: charts[i].timeSeriesQuery.interval, eId });\r\n\r\n    const charts = (() => {\r\n      const charts = activeEvent.getAnalyticsCharts();\r\n      return [ charts.revenue, charts.transactions, charts.reservations ];\r\n    })();\r\n\r\n    const metricDataStatuses = [\r\n      useMetricData(metricDataParam(charts, 0)),\r\n      useMetricData(metricDataParam(charts, 1)),\r\n      useMetricData(metricDataParam(charts, 2)),\r\n    ];\r\n\r\n    useMemo(() => {\r\n      const refreshMetricsData = (i: number) => {\r\n        metricDataStatuses[i].refresh(charts[i].timeSeriesQuery);\r\n      }\r\n      [0, 1, 2].forEach(refreshMetricsData);\r\n    }, [activeEvent.id]);\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Layout.Top >\r\n                {switches}\r\n                <Header />\r\n            </Layout.Top>\r\n            <Layout.Bottom>\r\n                <Grid placeItems=\"start stretch\" padding=\"1em\" height=\"100%\">\r\n                    <Grid cols=\"3\" gridGap=\"0 1em\">\r\n                        {charts.map((chart: any, i)=><Chart\r\n                            isPercent={false}\r\n                            className='slide-up'\r\n                            inChartLegend\r\n                            metricDataStatus={metricDataStatuses[i].metricDataStatus}\r\n                            {...chart}\r\n                        />)}\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout.Bottom>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Analytics;","import React, { useMemo } from 'react';\r\nimport { Grid, Header as Text, List, Empty } from '../../../style';\r\nimport { useSelector } from 'react-redux';\r\nimport { ScoreCard } from '../../../components/score-card/score-card';\r\nimport { overflow } from '../../../utils/text';\r\nimport { moment } from '../../../utils/time';\r\nimport { invertedTxtColor } from '../../../config';\r\nimport PieChart from '../../../components/chart/components/graph/pie-chart'\r\nimport { getEnterpriseEvents, useSelectEnterpriseEvent, Stats } from '../model';\r\nimport * as formatter from '../../../utils/pretty_format';\r\nimport { Select } from 'antd';\r\nimport { Loader } from '../../../style/loader'\r\nimport usePromise from '../../../hooks/promise_hook';\r\n\r\nconst enterpriseEvents = getEnterpriseEvents();\r\n\r\nconst Header = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { enterpriseEvent, selectEnterpriseEvent } = useSelectEnterpriseEvent();\r\n    const garages = enterpriseEvent.reservationOccupancy;\r\n    const { data, loading } = usePromise<Stats>(useMemo(() => enterpriseEvent.getLiveStats(eId), \r\n      [enterpriseEvent.id]));\r\n\r\n    return (\r\n        <Grid\r\n            cols='5'\r\n            style={{ gridColumn: '1/-1', marginBottom: '1em' }}\r\n            width='100%'\r\n            padding='1.5em 1.5em 0 1.5em'\r\n        >\r\n            <div\r\n              id='header'\r\n              className='grid'\r\n              style={{\r\n                width: '100%',\r\n                margin: '0 0 .75em 0',\r\n                gridColumn: '1/-1',\r\n                gridTemplateColumns: '1fr auto'\r\n              }}>\r\n              <Select\r\n                style={{ width: '300px', placeSelf: 'start', color: 'white'}}\r\n                disabled={loading}\r\n                placeholder=\"Select\"\r\n                onChange={eventId => selectEnterpriseEvent(eventId)}\r\n                value={enterpriseEvent.id}>\r\n                {enterpriseEvents.map(e => (\r\n                  <Select.Option\r\n                    key={e.id}\r\n                    className='capitalize'\r\n                    value={e.id}>\r\n                      {e.name}\r\n                  </Select.Option>))}\r\n              </Select>\r\n\r\n                <Text size={4.6} color={invertedTxtColor} className='hide-mobile'>  Updated at: {moment().format('hh:mm A')}</Text>\r\n            </div>\r\n\r\n            <ScoreCard title='Total Revenue' faIcon='fa fa-money' hoverLabel='Total Revenue' borderRight>\r\n                  {loading\r\n                    ? <Loader.Spinner color='inherit' />\r\n                    : <PieChart\r\n                       height={130}\r\n                       width={130}\r\n                       text={data? formatter.formatCentsToDollars(data.revenue.total): 'N/A'}\r\n                       data={data? [\r\n                           { label: `Normal Pricing (${formatter.formatCentsToDollars(data.revenue.normal)} total)`, value: data.revenue.normal },\r\n                           { label: `Dynamic Pricing (${formatter.formatCentsToDollars(data.revenue.dynamic)} total)`, value: data.revenue.dynamic }\r\n                       ]: [ { label: 'N/A', value: 'N/A'}]} />\r\n                  }\r\n               \r\n            </ScoreCard>\r\n\r\n            <ScoreCard title='Transactions' faIcon='fas fa-money-check-alt' hoverLabel='Revenue' borderRight>\r\n              {loading\r\n                ? <Loader.Spinner color='inherit' />\r\n                : <span className='txt-lgx'>{data? data.transactions: 'N/A'}</span>\r\n              }\r\n            </ScoreCard>\r\n\r\n            <ScoreCard title='Reservation Occupancy' faIcon='fa fa-car' hoverLabel='Occupancy Count' span={2}>\r\n                <Grid placeSelf='start' >\r\n                    <Grid\r\n                        customCols={loading ? '1fr' : '1fr  minmax(15em, auto)'}\r\n                        placeItems='stretch'\r\n                        width='100%'\r\n                        color='white'\r\n                        gridGap='.2em 1.5em'\r\n                    >\r\n                        <List\r\n                            loading={loading}\r\n                            empty={\r\n                                <div style={{ gridColumn: '1/-1' }}>\r\n                                    <Empty text={'No Garage Occupancy'} color=\"white\" style={{ width: '7em', margin: '0 auto' }} />\r\n                                </div>\r\n                            }\r\n                            pagination={{ items: 2 }}\r\n                            list={garages}\r\n                            map={(({ garageName, occupancy, staffs,  expStaffs }: any) => {\r\n                              return (\r\n                                <>\r\n                                <span className='txt-overflow'>{overflow(garageName, 23)}</span>\r\n                                <ScoreCard.PercentBar\r\n                                    status\r\n                                    percent={occupancy * 100}\r\n                                    text={ `${occupancy * 100 * 13} / ${1300}`}\r\n                                />\r\n                                <Grid\r\n                                    customCols='auto auto'\r\n                                    style={{ gridColumn: '1/-1', marginBottom: '1em' }}\r\n                                    width='100%'\r\n                                    mobileLayout={false}\r\n                                    placeItems='stretch' \r\n                                >\r\n                                    <span className='txt-left bold'>\r\n                                      Estimated Staff: {staffs}\r\n                                    </span>\r\n\r\n                                    <span className='txt-right bold'>\r\n                                    Actual Staff Assigned: {expStaffs}\r\n                                      </span>\r\n\r\n                                </Grid>\r\n                              </>\r\n                              )\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </ScoreCard>\r\n\r\n        </Grid>);\r\n}\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\nimport { Grid, Button, Text } from \"../../../style\";\r\nimport { primaryColor } from \"../../../config\";\r\nimport img from \"../../../assets/announ.svg\";\r\nimport { InputNumber, Switch } from 'antd';\r\nimport { useFormik } from 'formik';\r\nimport logger from '../../../utils/logger';\r\n\r\nexport const Editor = (props: any) => {\r\n    return (\r\n        <Grid customCols=\"3fr 2fr\" width=\"100%\" height=\"100%\" gridGap=\"0\">\r\n            <div style={{ background: primaryColor, height: \"100%\", padding: \"1em\", width: \"100%\" }}>\r\n                <img src={img} style={{ maxWidth: \"300px\" }} />\r\n            </div>\r\n            <Form {...props} />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst defaultValues = {\r\n    garages: [\r\n        {\r\n            id: '11',\r\n            name: 'North 10th St Garage',\r\n            dynamicPricing: false,\r\n            price: 10\r\n        },\r\n        {\r\n            id: '2',\r\n            name: 'South 7th St Garage',\r\n            dynamicPricing: false,\r\n            price: 15\r\n        },\r\n        {\r\n            id: '2',\r\n            name: 'West 4th St Garage',\r\n            dynamicPricing: false,\r\n            price: 15\r\n        }\r\n    ]\r\n};\r\n\r\nconst Form = ({ add, close, initialValues = defaultValues }: any) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const { handleSubmit, handleChange, values, setFieldValue } = useFormik({\r\n        initialValues,\r\n        onSubmit(values) {\r\n            submit(values)\r\n        }\r\n    })\r\n    const submit = async (values: any) => {\r\n        try {\r\n            setLoading(true)\r\n            await add(values);\r\n            close();\r\n        } catch (e) {\r\n            logger.log(e)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const error = false\r\n    const style = {\r\n        padding: \".5em 1em\", height: \"100%\", width: \"100%\", maxHeight: '500px',\r\n        placeItems: \"center stretch\", gridGap: \".4em\", background: \"white\"\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"grid\" style={{ ...style, gridGap: '1em', overflowY: 'auto' }}>\r\n            {\r\n                values.garages.map(({ name }: any, i: number) => (\r\n                    <Grid placeItems=\"stretch\" customCols='auto 1fr' gridGap='0.4em' style={{fontSize: '0.8em'}}>\r\n                        <Text style={{ gridRow: 'span 3', fontSize: '1.2em'}}>{i + 1}.</Text>\r\n                        <Text textAlign=\"left\" placeSelf=\"start\" bold style={{fontSize: '1.2em'}}>{name}</Text>\r\n                        <Grid margin=\"0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                            <Text textAlign=\"left\" placeSelf=\"start\" >Dynamic Pricing</Text>\r\n                            <Switch\r\n                                style={{ placeSelf: \"end\" }}\r\n                                defaultChecked\r\n                                onChange={(checked: boolean) => { }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                            <Text textAlign=\"left\" placeSelf=\"start\">Price ($)</Text>\r\n                            <InputNumber\r\n                                min={0}\r\n                                defaultValue={15}\r\n                                step={0.25}\r\n                                style={{ placeSelf: \"start end\" }}\r\n                                name={\"price\"}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                ))\r\n            }\r\n\r\n            <Grid cols=\"2\" size=\"0.7em\" placeItems={\"end stretch\"} height='100%' margin='0 0 2em 0'>\r\n                <Button.Normal\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                    onClick={() => close()}\r\n                >\r\n                    Cancel\r\n                </Button.Normal>\r\n                {loading ?\r\n                    <Button loading disabled>Loading</Button> :\r\n                    <Button.Normal\r\n                        type=\"submit\"\r\n                        disabled={error}\r\n                        onSubmit={(e: React.FormEvent<any>) => handleSubmit(e)}>\r\n                        Confirm\r\n            </Button.Normal>\r\n                }\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import React, { useMemo } from \"react\";\r\nimport Layout from '../../../layout';\r\nimport { Grid, Button } from \"../../../style\";\r\nimport Header from \"./header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Chart from '../../../components/chart';\r\nimport { useMetricData } from '../../../hooks/metrics';\r\nimport { defaultInterval } from '../../../utils/time';\r\nimport { Modal } from \"platyplex_ui\";\r\nimport { Editor } from \"./editor\";\r\nimport { TimeSeries } from '../../../model/domain/metrics';\r\nimport {  useSelectEnterpriseEvent } from '../model';\r\nimport chart from './chart.json';\r\n\r\nconst ts = (timeSeriesQuery: TimeSeries.PartialQuery | any) => ({\r\n    ...timeSeriesQuery,\r\n    interval: defaultInterval()\r\n})\r\n\r\nconst Analytics = ({ switches }: { switches: JSX.Element }) => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { enterpriseEvent: activeEvent } = useSelectEnterpriseEvent();\r\n\r\n    const { revenueAndTransactions: chart1, reservations: chart2 } = activeEvent.getLiveCharts();\r\n\r\n    const ms11 = useMetricData({\r\n      timeseries: ts(chart1.revenueTimeSeriesQuery),\r\n      eId\r\n    });\r\n    \r\n    const ms12 = useMetricData({\r\n      timeseries: ts(chart1.transactionTimeSeriesQuery),\r\n      eId\r\n    });\r\n\r\n    const ms21 = useMetricData({\r\n      timeseries: ts(chart[1].timeSeriesQuery),\r\n      eId\r\n    });\r\n\r\n  useMemo(() => {\r\n    ms11.refresh(chart1.revenueTimeSeriesQuery);\r\n    ms12.refresh(chart1.transactionTimeSeriesQuery);\r\n    ms21.refresh(chart[1].timeSeriesQuery)\r\n  }, [activeEvent.id]);\r\n \r\n  const EditModal = Modal({\r\n    title: \"Dynamic Pricing\",\r\n    message: <Editor add={()=>{}} close={() => EditModal.close()} />,\r\n    hideCancel: true,\r\n  });\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Layout.Top >\r\n                {switches}\r\n                <Header />\r\n            </Layout.Top>\r\n            <Layout.Bottom>\r\n                <Grid placeItems=\"start stretch\" padding=\"1em\" height=\"100%\">\r\n                    <Grid cols=\"2\" gridGap=\"0 1em\">\r\n                        <Button\r\n                            placeSelf=\"end\"\r\n                            rounded\r\n                            invert\r\n                            shadow\r\n                            onClick={EditModal.open}\r\n                            style={{ gridColumn: '1/-1' }}\r\n                            faIcon={`fa fa-edit`}\r\n                        > Dynamic Pricings</Button>\r\n                            <Chart.Multi\r\n                                className='slide-up'\r\n                                inChartLegend\r\n                                fixedAlignment={'5m'}\r\n                                metricDataStatuses={[ms11.metricDataStatus, ms12.metricDataStatus]}\r\n                                eId={eId}\r\n                                download={'event-revenue-transaction'}\r\n                                queries={{revenueTimeSeriesQuery : ms11.timeseries, transactionTimeSeriesQuery: ms12.timeseries}}\r\n                                {...chart1 as any} \r\n                            />\r\n\r\n                            <Chart\r\n                                inChartLegend\r\n                                isPercent={false}\r\n                                className='slide-up'\r\n                                metricDataStatus={ms21.metricDataStatus}\r\n                                {...chart2 as any}\r\n                                eId={eId} \r\n                                queries={{ timeSeriesQuery : ms21.timeseries}}\r\n                                download='garage-occupancy'\r\n                            />\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout.Bottom>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Analytics;","import React, { useState, useRef } from 'react';\r\nimport { Grid, Button } from '../../../style';\r\nimport img from '../../../assets/login.svg'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\n\r\n\r\nconst FacebookBtn = ({ login, className, ref }: any) => {\r\n  const [user, setUser] = useState({});\r\n  const response = (res: any) => {\r\n  }\r\n\r\n  let adapter = (profile: any) => {\r\n    let { givenName: name, familyName: lname, email, imageUrl: photo, googleId } = profile;\r\n    return { googleId, email, name };\r\n  }\r\n  return (\r\n    <div className={className}>\r\n      <FacebookLogin\r\n        render={(renderProps: any) => <Button\r\n          invert\r\n          onClick={renderProps.onClick}>\r\n          <i className=\"fab fa-facebook-square\"></i>&nbsp;\r\n        Signup With Facebook</Button>}\r\n        appId=\"1088597931155576\"\r\n        fields=\"name,email,picture\"\r\n        onClick={response}\r\n        callback={response} />\r\n    </div>);\r\n};\r\n\r\nconst GoogleBtn = ({ login, className }: any) => {\r\n  const [user, setUser] = useState({});\r\n\r\n  const response = (res: any) => {\r\n  }\r\n\r\n  let adapter = (profile: any) => {\r\n    let { givenName: name, familyName: lname, email, imageUrl: photo, googleId } = profile;\r\n    return { googleId, email, name };\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      <GoogleLogin\r\n        render={renderProps => <Button\r\n          invert onClick={renderProps.onClick}>\r\n          <i className=\"fab fa-google\"></i>&nbsp;\r\n         Signup With Google\r\n     </Button>}\r\n        clientId=\"432904370571-10sna4o5st6k2aee0q3p09bt05qjgbng.apps.googleusercontent.com\"\r\n        buttonText=\"Login with Google\"\r\n        onSuccess={response}\r\n        onFailure={console.log}\r\n        cookiePolicy={'single_host_origin'}\r\n      /></div>);\r\n};\r\n\r\n\r\nconst AuthBox = () => (\r\n  <Grid\r\n    height=\"100%\"\r\n    padding=\"3em\"\r\n    background=\"linear-gradient(to right top, #0bc062, #00b78b, #00aba7, #009cb4, #0d8cb0);\">\r\n    <img src={img} style={{ width: \"500px\", maxWidth: \"40vw\" }} />\r\n    <Grid cols=\"2\" height='50px'>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default AuthBox;","import React from 'react';\r\nimport { Input } from 'antd';\r\nimport { Button, Text } from '../../../style';\r\nimport { useFormik } from 'formik';\r\nimport { login } from '../../../store/actions/user'\r\nimport * as  Yup from 'yup';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst loginFields = [\r\n    {\r\n        id: \"email\",\r\n        label: \"Your email\",\r\n        placeholder: \"Example: John.Doe@parkstash.com\",\r\n        hide: false\r\n    },\r\n    {\r\n        id: \"authSecret\",\r\n        label: \"Your Password\",\r\n        placeholder: \"Example: ●●●●●●●\",\r\n        hide: true\r\n    }]\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string().required(\"Required!\").email(\"Must be a Valid Email\"),\r\n    authSecret: Yup.string().required(\"Required!\").min(6, \"Password must contain at least 6 characters\")\r\n});\r\n\r\ntype Values = 'authSecret' | 'email'\r\n\r\nconst Login = ({ passwordForgotToggler, loading, }: any) => {\r\n    const dispatch = useDispatch();\r\n    const { handleSubmit, handleChange, values, errors, touched, handleBlur } = useFormik({\r\n        initialValues: { email: \"\", authSecret: \"\", authType: \"password\" },\r\n        onSubmit(values) {\r\n           dispatch(login(values));\r\n        },\r\n        validationSchema\r\n    })\r\n\r\n    const error = loginFields.reduce((acc: boolean, { id }: any) => acc || Boolean(errors[id as Values]), false);\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n            className=\"shake\"\r\n            style={{ display: \"grid\", paddingTop: \"2em\", width: \"100%\", placeItems: \"center stretch\", gridGap: \".4em\" }}>\r\n            {loginFields.map(({ id, placeholder, label, hide }: any) => {\r\n                const error = errors[id as Values]\r\n            return (\r\n                <div style={{ paddingTop: \".5em\" }} key={id}>\r\n                     <Text textAlign=\"left\" bold>{label} <span className=\"red\">*</span></Text>\r\n                    <Input\r\n                        disabled={loading}\r\n                        type={hide ? 'password' : 'text'}\r\n                        name={id}\r\n                        onBlur={handleBlur}\r\n                        suffix={\r\n                            touched[id as Values] && <Tooltip title={error}>\r\n                                <i className={`fa fa-${error ? 'times-circle red' : 'check green'}`} style={{ position: \"relative\" }}></i>\r\n                            </Tooltip>\r\n                        }\r\n                        value={values[id as Values]}\r\n                        onChange={handleChange}\r\n                        placeholder={placeholder} \r\n                    />\r\n                </div>\r\n            )})}\r\n\r\n            {loading ? <Button loading disabled>Loading</Button> :\r\n                <Button.Normal\r\n                    type=\"submit\"\r\n                    disabled={error}\r\n                    onSubmit={(e: any) => handleSubmit(e)}>\r\n                    Confirm\r\n                </Button.Normal>\r\n            }\r\n\r\n            <div><span className=\"pointer hover-bold\" onClick={passwordForgotToggler}>Forgot Password?</span></div>\r\n        </form>)\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    const { garages } = state\r\n    return { garages }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(Login);\r\n","import React from 'react';\r\nimport { Input, Tooltip } from 'antd';\r\nimport { Button, Text, Grid } from '../../../style';\r\nimport { useFormik } from 'formik';\r\nimport { signup } from '../../../store/actions/user';\r\nimport * as  Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\n\r\nconst signupFields = [\r\n    {\r\n        id: \"name\",\r\n        label: \"Your Name\",\r\n        placeholder: \"Example: John Doe\",\r\n        hide: false\r\n    },\r\n    {\r\n        id: \"email\",\r\n        label: \"Your email\",\r\n        placeholder: \"Example: John Doe\",\r\n        hide: false\r\n    },\r\n    {\r\n        id: \"authSecret\",\r\n        label: \"Your Password\",\r\n        placeholder: \"Example: ●●●●●●●\",\r\n        hide: true\r\n    },\r\n    {\r\n        id: \"confirmPassword\",\r\n        label: \"Confirm Password\",\r\n        placeholder: \"Example: ●●●●●●●\",\r\n        hide: true\r\n    }\r\n]\r\ntype Values = 'name' | 'email' | 'authSecret' | 'confirmPassword'\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string().required(\"Required!\").email(\"Must be a Valid Email\"),\r\n    authSecret: Yup.string().required(\"Required!\").min(6, \"Password must contain at least 6 characters\"),\r\n    confirmPassword: Yup.string()\r\n        .required(\"Required!\")\r\n        .min(6, \"Password must contain at least 6 characters\")\r\n        .oneOf([Yup.ref('authSecret')], 'Passwords must match'),\r\n    name: Yup.string().required(\"Required!\")\r\n});\r\nconst Sigup = ({ loading, signup }: any) => {\r\n    const { handleSubmit, handleChange, errors, values, touched, handleBlur } = useFormik({\r\n        initialValues: { name: \"\", email: \"\", authSecret: \"\", confirmPassword: \"\", authType: \"password\" },\r\n        validationSchema,\r\n        onSubmit(values) {\r\n            signup(values)\r\n        }\r\n    });\r\n\r\n    const error = signupFields.reduce((acc: boolean, { id }: any) => acc || Boolean(errors[id as Values]), false);\r\n    return (\r\n        <form\r\n            className=\"shake grid\"\r\n            onSubmit={handleSubmit}\r\n            style={{background: \"white\", paddingTop: \"1em\", width: \"100%\", placeItems: \"center stretch\", gridGap: \".4em\" }}>\r\n            {signupFields.map(({ hide, id, placeholder, label }: any) => {\r\n                const error = errors[id as Values]\r\n                return (\r\n                    <div style={{ paddingTop: \".5em\" }} key={id}>\r\n                        <Text textAlign=\"left\" bold>{label} <span className=\"red\"> *</span></Text>\r\n                        <Input\r\n                            type={hide ? 'password' : 'text'}\r\n                            name={id}\r\n                            onBlur={handleBlur}\r\n                            suffix={\r\n                                touched[id as Values] && <Tooltip title={error}>\r\n                                    <i className={`fa fa-${error ? 'times-circle red' : 'check green'}`} style={{ position: \"relative\" }}></i>\r\n                                </Tooltip>\r\n                            }\r\n                            value={values[id as Values]}\r\n                            onChange={handleChange}\r\n                            placeholder={placeholder} />\r\n                    </div>)\r\n            })}\r\n\r\n            {loading ? <Button loading disabled>Loading</Button> :\r\n                <Button.Normal\r\n                    type=\"submit\"\r\n                    disabled={error}\r\n                    onSubmit={(e: any) => handleSubmit(e)}>\r\n                    Confirm\r\n                </Button.Normal>\r\n            }\r\n        </form>)\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: (I: any) => (any)) {\r\n    return {\r\n        signup: (values: any) => dispatch(signup(values))\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(Sigup);","import React, { useState } from \"react\";\r\nimport {  Button, Text, Notification } from \"../../../style\";\r\nimport img from \"../../../assets/email.svg\";\r\nimport { Input } from \"antd\";\r\nimport { primaryColor } from \"../../../config\";\r\nimport otpImg from '../../../assets/otp.svg';\r\nimport logger from \"../../../utils/logger\";\r\n\r\nconst ConfirmEmail = ({ back, confirmEmail, loading }: any) => {\r\n  const [otp, setOtp] = useState(\"\");\r\n  return (\r\n    <Wrapper \r\n    image={otpImg}\r\n    back={back}\r\n     action={() => confirmEmail(otp)} \r\n     loading={loading}>\r\n    \r\n      <Text textAlign=\"left\" bold>\r\n        Enter your Code\r\n      </Text>\r\n      <Input value={otp} onChange={(e) => setOtp(e.target.value.trim())} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Reset = ({ back, resetPassword, loading }: any) => {\r\n  const [secret, setSecret] = useState({\r\n    user_password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  const submit = () => {\r\n    try {\r\n      if (secret.user_password.length < 5) {\r\n        throw new Error(\"Password Length Should be at least 6 characters\");\r\n      }\r\n      if (secret.user_password !== secret.confirm_password) {\r\n        throw new Error(\"Passwords do not Match\");\r\n      }\r\n      resetPassword(secret.user_password);\r\n    } catch (e) {\r\n      logger.log(e)\r\n      Notification.error({ title: \"Error\", message: e.message });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper \r\n    back={back} \r\n    action={submit} \r\n    loading={loading}>\r\n  \r\n      <Text textAlign=\"left\" bold>\r\n        Enter your Password\r\n        </Text>\r\n      <Input\r\n        name=\"password\"\r\n        type=\"password\"\r\n        onChange={({ target: { value: user_password } }) =>\r\n          setSecret({ ...secret, user_password })\r\n        }\r\n      />\r\n      <br />\r\n\r\n      <Text textAlign=\"left\" bold>\r\n        Confirm your Password\r\n        </Text>\r\n      <Input\r\n        name=\"confirm-password\"\r\n        type=\"password\"\r\n        onChange={({ target: { value: confirm_password } }) =>\r\n          setSecret({ ...secret, confirm_password })\r\n        }\r\n      />\r\n    </Wrapper >\r\n  );\r\n};\r\n\r\nconst SelectEmail = ({ selectEmail, back, loading }: any) => {\r\n  const [user_email, setEmail] = useState(\"\");\r\n\r\n  return (\r\n    <Wrapper\r\n      back={back}\r\n      loading={loading}\r\n      action={() => selectEmail(user_email)}>\r\n  \r\n      <Text textAlign=\"left\" bold>\r\n        Enter Your Email <span className=\"red\">*</span>\r\n        </Text>\r\n      <div style={{ width: \"100%\" }}>\r\n        <Input\r\n          name=\"email\"\r\n          value={user_email}\r\n          onChange={(e) => setEmail(e.target.value.trim())}\r\n        />\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = ({ children, back, loading, action, image = img }: any) => {\r\n  return (\r\n    <div style={{ padding: \"1em 2em\" }} className=\"shake\">\r\n      <div\r\n        className=\"bold pointer txt-left\"\r\n        onClick={back}\r\n        style={{ color: primaryColor, width: \"100%\", padding: 0 }}\r\n      >\r\n       <i className=\"fa fa-chevron-left\"></i> &nbsp;Back\r\n      </div>\r\n      <img\r\n        src={image}\r\n        alt=\"Select Email\"\r\n        style={{ height: \"50%\", maxWidth: \"40vw\", width: \"300px\" }}\r\n      />\r\n      <form onSubmit={(e) => e.preventDefault()} style={{marginTop: \"3em\"}}>\r\n        {children}\r\n        <Button\r\n          padding={\".3em\"}\r\n          loading={loading}\r\n          disabled={loading}\r\n          margin=\".8rem 0\"\r\n          width=\"100%\"\r\n          onClick={action}>\r\n          Confirm\r\n       </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default {\r\n  SelectEmail,\r\n  Reset,\r\n  ConfirmEmail,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Text, Header, Notification } from \"../../../style\";\r\nimport { disabledTxtColor as disabled, primaryColor as color } from \"../../../config\";\r\nimport Login from \"./login\";\r\nimport Sigup from \"./signup\";\r\nimport ForgotPassword from \"./forgot-password\";\r\nimport api from \"../../../api\";\r\nimport { useSelector } from \"react-redux\";\r\nimport logger from \"../../../utils/logger\";\r\n\r\nconst states = {\r\n  SIGNUP: \"SIGNUP\",\r\n  LOGIN: \"LOGIN\",\r\n  PASSWORD_SELECT_EMAIL: \"PASSWORD_SELECT_EMAIL\",\r\n  PASSWORD_CONFIRM_EMAIL: \"PASSWORD_CONFIRM_EMAIL\",\r\n  PASSWORD_RESET: \"PASSWORD_RESET\",\r\n};\r\n\r\nconst UserSelectBox = () => {\r\n  const [state, setState] = useState(states.LOGIN);\r\n  const [passwordLoading, setLoading] = useState(false);\r\n  const loading = useSelector((state: any) => state.user.loading);\r\n\r\n  const [reset, setResetFields] = useState({\r\n    user_email: \"\",\r\n    authtoken: \"\",\r\n  });\r\n\r\n  const toggler = () =>\r\n    setState(state === states.LOGIN ? states.SIGNUP : states.LOGIN);\r\n\r\n  \r\n  const error = (e : any) => {\r\n    logger.log(e)\r\n    Notification.error({ title: \"Error\", message: String(e) })\r\n  }\r\n  const notify = (e : string) => ()=>Notification.success({ title: \"Success\", message: String(e) })\r\n  const finished = () =>  setLoading(false)\r\n  const changeState = (s: string) =>setState(s)\r\n\r\n  const selectEmail = (user_email: string) => {\r\n    setLoading(true);\r\n    api\r\n      .forgotPassword({ user_email })\r\n      .then((res: any) => {\r\n        if (res.success) {\r\n          changeState(states.PASSWORD_CONFIRM_EMAIL);\r\n          notify(\"4 Digit Code was sent to your email\")\r\n          setResetFields({ ...reset, user_email });\r\n        } else throw new Error(res.message);\r\n      })\r\n      .catch(error)\r\n      .finally(finished);\r\n  };\r\n\r\n  const confirmEmail = (otp: string) => {\r\n    const { user_email } = reset;\r\n    setLoading(true);\r\n    api\r\n      .confirmEmail({ user_email, otp })\r\n      .then((res: any) => {\r\n        if (res.success) {\r\n          setResetFields({ ...reset, authtoken: res.token });\r\n          changeState(states.PASSWORD_RESET);\r\n        } else throw new Error(res.message);\r\n      })\r\n      .catch(error)\r\n      .finally(finished);\r\n  };\r\n\r\n  const resetPassword = (user_password: string) => {\r\n    setLoading(true);\r\n    const { authtoken } = reset;\r\n    api\r\n      .resetPassword({ authtoken }, { user_password })\r\n      .then((res: any) => {\r\n        if (res.success) {\r\n          changeState(states.LOGIN);\r\n          notify(\"Your password was Reset\")\r\n        } else throw new Error(res.message);\r\n      })\r\n      .catch(error)\r\n      .finally(finished);\r\n  };\r\n\r\n  const passwordForgotToggler = () => setState(states.PASSWORD_SELECT_EMAIL);\r\n\r\n  const back = () => setState(states.LOGIN);\r\n\r\n  switch (state) {\r\n    case states.PASSWORD_SELECT_EMAIL:\r\n      return (\r\n        <ForgotPassword.SelectEmail\r\n          back={back}\r\n          selectEmail={selectEmail}\r\n          loading={passwordLoading}\r\n        />\r\n      );\r\n\r\n    case states.PASSWORD_RESET:\r\n      return (\r\n        <ForgotPassword.Reset\r\n          back={back}\r\n          resetPassword={resetPassword}\r\n          loading={passwordLoading}\r\n        />\r\n      );\r\n\r\n    case states.PASSWORD_CONFIRM_EMAIL:\r\n      return (\r\n        <ForgotPassword.ConfirmEmail\r\n          back={back}\r\n          confirmEmail={confirmEmail}\r\n          loading={passwordLoading}\r\n        />\r\n      );\r\n\r\n    case states.SIGNUP:\r\n      return (\r\n        <Wrapper state={state} toggler={toggler}>\r\n          <Sigup loading={loading} />\r\n        </Wrapper>\r\n      );\r\n\r\n    default:\r\n      return (\r\n        <Wrapper state={state} toggler={toggler}>\r\n          <Login\r\n            passwordForgotToggler={passwordForgotToggler}\r\n            loading={loading}\r\n          />\r\n        </Wrapper>\r\n      );\r\n  }\r\n};\r\n\r\nconst Wrapper = ({ children, state, toggler }: any) => {\r\n  const isActive = (s: string) => state === s;\r\n  return (\r\n    <div className=\"noselect\" style={{ width: \"100%\", padding: \"1.5em\" }}>\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <span\r\n          className={\"bold pointer \"}\r\n          onClick={!isActive(states.LOGIN) ? toggler : () => {}}\r\n          style={{ color: !isActive(states.LOGIN) ? disabled : color, fontSize: \"1.16em\", padding: '.3em .4em' }}\r\n        >\r\n          Login\r\n        </span>{\" \"}\r\n        &nbsp;\r\n        <span\r\n          className=\"bold pointer\"\r\n          onClick={!isActive(states.SIGNUP) ? toggler : () => {}}\r\n          style={{ color: !isActive(states.SIGNUP) ? disabled : color, fontSize: \"1.16em\" }}\r\n        >\r\n          Signup\r\n        </span>\r\n      </div>\r\n\r\n      <Header bold textAlign=\"left\" size={2}>\r\n        {state}\r\n      </Header>\r\n      <Text color={disabled} textAlign=\"left\">\r\n        {state} to continue to ParkStash Dasboard\r\n      </Text>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSelectBox;\r\n","import { useState, useEffect } from \"react\";\r\nimport API from \"../api\";\r\nimport logger from \"../utils/logger\";\r\n\r\nexport const useEnterprises = (userId = null) => {\r\n  const [state, setState] = useState({\r\n    enterprises: [],\r\n    loading: false,\r\n    error: false\r\n  });\r\n\r\n  const getEnterpises = async () => {\r\n    setState({ ...state, loading: true, error: false });\r\n    try {\r\n      const res = await API.getEnterprises();\r\n      setState({ ...state, loading: false, error: false, enterprises: res.enterprises })\r\n    } catch (e) {\r\n      logger.log(e)\r\n      error(e);\r\n    }\r\n  }\r\n\r\n  const error = (e: any) => setState({ ...state, loading: false, error: true, enterprises: [] })\r\n\r\n  useEffect(() => { getEnterpises();}, [userId]);\r\n  return {\r\n    ...state,\r\n    getEnterpises,\r\n    refresh: getEnterpises\r\n  };\r\n};\r\n\r\nexport default {\r\n  useEnterprises\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Button, Text } from \"../../../style\";\r\nimport img from \"../../../assets/university.svg\";\r\nimport wait from \"../../../assets/wait.svg\";\r\nimport { Select as Sel } from \"antd\";\r\nimport { primaryColor } from \"../../../config\";\r\nimport { useEnterprises } from \"../../../hooks/enterprises\";\r\nimport { Enterprise } from \"../../../model/domain/enterprise\";\r\nimport { addEnterprise, logout } from \"../../../store/actions/user\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst Pending = () => {\r\n  return (\r\n    <Wrapper>\r\n      <img\r\n        src={wait}\r\n        style={{ height: \"50%\", maxWidth: \"40vw\", width: \"300px\" }}\r\n      />\r\n      <Text textAlign=\"left\" bold>\r\n        Please wait till you get approved.\r\n      </Text>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Select = () => {\r\n  const userId = useSelector((state: any) => state.user.user.id);\r\n  const loading = useSelector((state: any) => state.user.loading);\r\n  const dispatch = useDispatch();\r\n  const { enterprises } = useEnterprises() as any;\r\n\r\n  const [ selected, setSelected ] = useState<any>(\"\");\r\n  return (  \r\n    <Wrapper>\r\n      <img\r\n        src={img}\r\n        style={{  maxWidth: \"40vw\", width: \"200px\" }}\r\n      />\r\n      <Text textAlign=\"left\" bold>\r\n        {\"Select your Organization\"}\r\n      </Text>\r\n      <div style={{ width: \"100%\" }}>\r\n        <Sel \r\n            placeholder=\"Select\" \r\n            style={{ width: \"95%\" }} \r\n            value={selected}\r\n            onChange={(e: any)=> setSelected(e)}\r\n        >\r\n          {enterprises?.map(({ id, title, imageUrl }: Enterprise) => (\r\n            <Sel.Option key={id} value={id}>{title}</Sel.Option>\r\n          ))}\r\n        </Sel>\r\n        <Grid cols=\"1\" margin=\"2em 0\">\r\n          <Button\r\n            loading={loading}\r\n            disabled={loading}\r\n            invert\r\n            width=\"95%\"\r\n            onClick={() => dispatch(addEnterprise(selected, userId))}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </Grid>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = ({ children }: any) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Grid\r\n      customRows=\"auto 1fr auto\"\r\n      style={{ padding: \"2em\" }}\r\n      className=\"shake\"\r\n    >\r\n      <div\r\n        className=\"bold pointer txt-right \"\r\n        onClick={()=>dispatch(logout())}\r\n        style={{ color: primaryColor, width: \"100%\"}}\r\n      >\r\n        Logout\r\n      </div>\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default {\r\n  Select,\r\n  Pending,\r\n};\r\n","import React from 'react';\r\nimport UserSelect from './user-select';\r\nimport userStates from '../../json/user-state.json'\r\nimport Enterpise from './enterprise-select/enterprise';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst UserHandleBox = ()=>{\r\n const state = useSelector((state: any) => state.user.userState)\r\n\r\n   switch(state){    \r\n        case userStates.ENTERPISE_SELECT:\r\n        return <Enterpise.Select/>\r\n\r\n        case userStates.ENTERPISE_PENDING:\r\n        return <Enterpise.Pending />\r\n         \r\n        default:\r\n        return <UserSelect />;\r\n    }\r\n};\r\n\r\nexport default UserHandleBox;","import React from 'react';\r\nimport { Card , Grid } from '../../style';\r\nimport Layout from '../../layout';\r\nimport AuthBox from './user-select/auth';\r\nimport UserHandleBox from './user-handle';\r\nimport bg from '../../assets/email.svg';\r\n\r\nconst Login = ()=>{\r\n    return<Layout background={bg} style={{\r\n        backgroundPosition: 'bottom left', \r\n        backgroundSize: '50%', \r\n    }}>\r\n        <Grid height='100%'>   \r\n            <Card   \r\n                padding=\"0\"\r\n                grid \r\n                shadow\r\n                placeItems={\"stretch\"}\r\n                customCols={\"3fr 2fr\"}\r\n            > \r\n            <AuthBox />\r\n            <UserHandleBox/>\r\n            </Card>\r\n        </Grid>\r\n    </Layout>\r\n}\r\n\r\nexport default Login","import { useState, useEffect } from \"react\";\r\nimport API from \"../api\";\r\nimport { User } from \"../model/domain/user\";\r\nimport { asyncHandler } from \"../utils\";\r\n\r\nexport const useControl = ({ eId = \"\", refresh = ()=>{}}) => {\r\n  const [state, setter] = useState({\r\n    enterpriseUsers: [],\r\n    loading: false,\r\n    error: false,\r\n  }) as any;\r\n\r\n  const setState = (obj: any) => setter({ ...state, ...obj });\r\n\r\n  const getEnterpriseUsers = async (eId: string) => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () => API.getEnterpriseUsers(eId),\r\n      notify: false,\r\n    });\r\n    setState({\r\n      loading: false,\r\n      error: res?.success || true,\r\n      enterpriseUsers: res?.enterpriseUsers || [],\r\n    });\r\n  };\r\n\r\n  const rejectEnterpriseUser = async (user: User) => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () => API.rejectEnterpriseUser(eId, user.id),\r\n      successMessage: \"User was Rejected\",\r\n      errorMessage: \"User was not Rejected\",\r\n      refresh\r\n    });\r\n    setState({ loading: false, error: res?.success || true });\r\n    getEnterpriseUsers(eId)\r\n  };\r\n\r\n  const removeEnterpriseUser = async (user: User) => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () => API.removeEnterpriseUser(eId, user.id),\r\n      successMessage: \"User was Rejected\",\r\n      errorMessage: \"User was not Rejected\",\r\n      refresh\r\n    });\r\n    setState({ loading: false, error: res?.success || true });\r\n    getEnterpriseUsers(eId)\r\n  };\r\n\r\n  const acceptEnterpriseUser = async (user: User) => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () => API.acceptEnterpriseUser(eId, user.id),\r\n      successMessage: \"User was Accepted\",\r\n      errorMessage: \"User was not Accepted\",\r\n      refresh\r\n    });\r\n    setState({ loading: false, error: res?.success || true });\r\n    getEnterpriseUsers(eId)\r\n  };\r\n\r\n  useEffect(() => {getEnterpriseUsers(eId);}, [eId]);\r\n\r\n  return {\r\n    ...state,\r\n    removeEnterpriseUser,\r\n    rejectEnterpriseUser,\r\n    acceptEnterpriseUser,\r\n  };\r\n};\r\n\r\nexport default {\r\n  useControl,\r\n};\r\n","import { Space, Popconfirm } from 'antd';\r\nimport { Button, Badge } from '../../style';\r\nimport React from 'react';\r\nimport { User } from '../../model/domain/user';\r\n\r\nconst columns = (accept:  any, reject: any, remove: any, loadingAction = false) => {\r\n    return [{\r\n        title: 'Name',\r\n        dataIndex: 'user',\r\n        key: 'user',\r\n        render: (user: User) => user.name\r\n    },\r\n    {\r\n        title: 'Email',\r\n        dataIndex: 'user',\r\n        key: 'user',\r\n        render: (user: User) =>user.email\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'role',\r\n        key: 'role',\r\n        render: (_: string, record: any) => {\r\n            const approved = record?.user?.apps?.enterpriseApp === 'enabled'\r\n\r\n            return (\r\n                <i className={`fas fa-${approved ? 'check' : 'times'}-circle ${!approved && 'red'}`}></i>);\r\n        }\r\n    },\r\n    {\r\n        title: 'Role',\r\n        dataIndex: 'role',\r\n        key: 'role',\r\n        render: (text: string) => <Badge inverted className=\"shadow txt-center\">{text}</Badge>,\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (_: any, record: any) => {\r\n            const approved = record?.user?.apps?.enterpriseApp === 'enabled';\r\n            return (\r\n                <Space size=\"middle\">\r\n                    <Button\r\n                        shadow={!loadingAction && !approved}\r\n                        disabled={loadingAction || approved}\r\n                        onClick={() => accept(record.user)}\r\n\r\n                    >\r\n                        <i className=\"fa fa-check\"></i>&nbsp;Accept\r\n                    </Button>\r\n                    <Popconfirm\r\n                        okButtonProps={{size: 'middle'}}\r\n                        cancelButtonProps={{size: 'middle'}}\r\n                        title=\"Are you sure\"\r\n                        onConfirm={() => approved ? remove(record.user) : reject(record.user)}\r\n                    >\r\n                    <Button\r\n                        bg=\"red\"\r\n                        shadow={!loadingAction}\r\n                        disabled={loadingAction}\r\n                    >\r\n                        <i className={`fa fa-${approved ? 'trash' : 'times'}`}></i> &nbsp;{approved ? \"Remove\" : \"Reject\"}\r\n                    </Button>\r\n                    </Popconfirm>\r\n                </Space>\r\n            )\r\n        },\r\n    },\r\n    ]\r\n};\r\n\r\nexport default columns;","import React, { useState } from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport { Card, Switch, Empty } from \"../../style\";\r\nimport { Table } from \"antd\";\r\nimport { primaryColor, mobileWidth} from \"../../config\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useControl } from \"../../hooks/control\";\r\nimport columns from \"./columns\";\r\nimport { useWidgets } from \"../../hooks/widget\";\r\nimport ScoreCards from \"../../components/score-card/score-cards\";\r\nimport { useRefresh } from \"../../hooks/refresh\";\r\n\r\nconst states = {\r\n  ACCEPTED: \"Enabled\",\r\n  ALL: \"ALL\",\r\n  DEFAULT: \"ALL\",\r\n  PENDING: \"Onboarding\",\r\n  states: [\"Enabled\", \"ALL\", \"Onboarding\"],\r\n};\r\n\r\nlet locale = {emptyText: <Empty text=\"No Users\" />};\r\n\r\nconst Controls = () => {\r\n  const eId = useSelector(({ user }: any) => user.enterprise.id);\r\n  const screen = \"adminControl\";\r\n  const resource = \"enterpriseUser\";\r\n\r\n  const { loading, scoreCards } = useWidgets({ eId, screen, resource });\r\n  const { needsRefresh, refresh} = useRefresh();\r\n  const {\r\n    enterpriseUsers,\r\n    loading: loadingUsers,\r\n    acceptEnterpriseUser,\r\n    removeEnterpriseUser,\r\n    rejectEnterpriseUser,\r\n  } = useControl({ eId, refresh });\r\n \r\n\r\n  const [state, setState] = useState({\r\n    active: states.DEFAULT,\r\n  });\r\n\r\n  const current = enterpriseUsers.filter(\r\n    ({\r\n      user: {\r\n        apps: { enterpriseApp },\r\n      },\r\n    }: any) =>\r\n      enterpriseApp === state.active.toLowerCase() ||\r\n      state.active === states.ALL\r\n  );\r\n\r\n  return (\r\n    <Layout sidebar >\r\n       <Layout.Top style={{paddingTop: '3em'}}>\r\n        <ScoreCards\r\n          loading={loading}\r\n          refresh={refresh}\r\n          scoreCards={scoreCards}\r\n        />\r\n        </Layout.Top>\r\n\r\n        <Layout.Bottom>\r\n          <Card shadow minWidth=\"60vw\" padding=\".5em\">\r\n          <Switch\r\n            active={state.active}\r\n            style={{margin: \"0 0 .5em 0\"}}\r\n            items={states.states}\r\n            onClick={(active: string) => setState({ ...state, active })}\r\n          />\r\n            <DIV>\r\n              <Table\r\n                 className='min-height-table'\r\n                locale={locale}\r\n                rowKey={(record) => record.user.id}\r\n                loading={loadingUsers}\r\n                style={{ color: primaryColor, maxWidth: \"90vw\" }}\r\n                dataSource={current}\r\n                columns={columns(\r\n                  acceptEnterpriseUser,\r\n                  rejectEnterpriseUser,\r\n                  removeEnterpriseUser,\r\n                  loading\r\n                )}\r\n              />\r\n            </DIV>\r\n          </Card>\r\n      </Layout.Bottom>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst DIV = styled.div`\r\n  @media (max-width: ${mobileWidth}) {\r\n    overflow-x: scroll;\r\n  }\r\n`;\r\n\r\nexport default Controls;\r\n","import React, { useEffect } from 'react';\r\nimport Layout from '../../layout';\r\nimport { Grid, Placeholder, Header, Button, List } from '../../style';\r\nimport { XyChart } from '../../model/domain/dashboard';\r\nimport { useSelector } from 'react-redux';\r\nimport ScoreCards from '../../components/score-card/score-cards';\r\nimport { useWidgets } from '../../hooks/widget';\r\nimport { Link } from 'react-router-dom';\r\nimport Chart from '../../components/chart';\r\nimport useTimeseries from '../../hooks/timeseries';\r\nimport { useMetricData } from '../../hooks/metrics';\r\nimport { gradient } from '../../config';\r\nimport chart from './chart.json';\r\nimport { defaultInterval } from '../../utils/time';\r\nimport { AdditionalChartProps } from '../../components/chart/types';\r\nimport { TimeSeries } from '../../model/domain/metrics';\r\n\r\nconst defaultTimeSeries: TimeSeries.Query = { \r\n    ...chart.timeSeriesQuery,\r\n    interval: defaultInterval()\r\n } as any;\r\n\r\nconst Overview = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const name = useSelector((state: any) => state.user.user.shortName);\r\n    const { charts, loading, scoreCards, scoreCardOptions, editScoreCards, removeScoreCard } = useWidgets({ eId, screen: \"overview\" });\r\n    const hideOnLoading = loading ? 'hide' : '';\r\n    const { timeseries, actions } =  useTimeseries(defaultTimeSeries);\r\n    const isPercent = timeseries?.metricType?.split('_')?.includes('percent') || false;\r\n    const { metricDataStatus, refresh } = useMetricData({ timeseries: timeseries, eId});\r\n    \r\n    const props: AdditionalChartProps = {\r\n      metricDataStatus,\r\n      filter: <span> \r\n        <Button\r\n            invert={timeseries.metricType !== 'garage_occupancy_count'}\r\n            noBorder={timeseries.metricType !== 'garage_occupancy_count'}\r\n            onClick={() => actions.setMetric('garage_occupancy_count')}\r\n            faIcon={'fas fa-sort-numeric-up'}\r\n            tooltip='Switch to count'\r\n            minWidth=\"3em\"\r\n            margin='0 0 0 1em'\r\n        />  \r\n        <Button\r\n           invert={timeseries.metricType !== 'garage_occupancy_percent'}\r\n           noBorder={timeseries.metricType !== 'garage_occupancy_percent'}\r\n            minWidth=\"3em\"\r\n            onClick={() => actions.setMetric('garage_occupancy_percent')}\r\n            faIcon={'fas fa-percentage'}\r\n            tooltip='Switch to percent'\r\n        />\r\n        </span>\r\n,\r\n      chartTypes: chart.chartTypes\r\n    }\r\n\r\n    useEffect(()=>refresh(timeseries), [ timeseries])\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Layout.Top>\r\n                <Header\r\n                    color=\"white\"\r\n                    margin=\"1em 0 0 0\"\r\n                    className=\"capitalize\"\r\n                    width=\"100%\"\r\n                    bold\r\n                    textAlign=\"left\"\r\n                >\r\n                    &nbsp; Welcome, {name}\r\n                </Header>\r\n                <div></div>\r\n                <ScoreCards\r\n                    loading={loading}\r\n                    eId={eId}\r\n                    removeScoreCard={removeScoreCard}\r\n                    editScoreCards={editScoreCards}\r\n                    scoreCards={scoreCards}\r\n                    scoreCardOptions={scoreCardOptions}\r\n                />\r\n            </Layout.Top>\r\n            <Layout.Bottom>\r\n                <Grid  margin='2em 0 0 0' gridGap='0.3em'>\r\n                    <Header\r\n                        className={hideOnLoading}\r\n                        color=\"white\"\r\n                        bold\r\n                        width=\"100%\"\r\n                        textAlign=\"left\"\r\n                    >\r\n                     &nbsp; Today's Garage Occupancy Overview\r\n                    </Header>\r\n\r\n                    <List    \r\n                        list={charts}\r\n                        loader={<Placeholder\r\n                            lines={7}\r\n                            number={1}\r\n                            style={{ minHeight: \"400px\", minWidth: \"100%\"}}\r\n                        />}\r\n                        loading={loading}\r\n                        map={((item: XyChart) => <Chart \r\n                            {...props} \r\n                            inChartLegend\r\n                            eId={eId}\r\n                            download={chart.download}\r\n                            isPercent={isPercent}\r\n                            {...item.lineChart as any}\r\n                            queries={{timeSeriesQuery : timeseries}}\r\n                        />)}\r\n                    />\r\n                    <Link\r\n                        to=\"/garages\"\r\n                        className={hideOnLoading}\r\n                        style={{ gridColumn: \"1/-1\", placeSelf: \"start\" }}\r\n                    >\r\n                        <Button\r\n                            rounded\r\n                            bold\r\n                            padding=\".5em\"\r\n                            shadow\r\n                            noHover\r\n                            bg={gradient}\r\n                        >\r\n                            See Details &nbsp; <i className=\"fa fa-chevron-right\"></i>\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Layout.Bottom>\r\n        </Layout>\r\n    );\r\n}\r\nexport default Overview;","import React, { Suspense, lazy, useEffect, useState } from 'react';\r\nimport { Garage } from './pages';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport ErrorBoundary from 'antd/lib/alert/ErrorBoundary';\r\nimport Announcement from './pages/announcement';\r\nimport Citations from './pages/citations';\r\nimport Events from './pages/events';\r\nimport Profile from './pages/profile';\r\nimport Login from './pages/login';\r\nimport { Loader } from './style';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport userStates from \"./json/user-state.json\";\r\nimport { auth } from './store/actions/user';\r\nimport Controls from './pages/controls';\r\nimport Overview from './pages/overview';\r\n\r\nfunction App() {\r\n  const userState = useSelector((state: any) => state.user.userState);\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({ loading: true });\r\n\r\n  useEffect(() => {\r\n    dispatch(auth());\r\n    setTimeout(() => setState({ ...state, loading: false }), 2000)\r\n  }, [])\r\n  return (\r\n    !state.loading ? <ErrorBoundary>\r\n      {userState === userStates.APPROVED ?\r\n        <Switch>\r\n          <Route path=\"/announcements\" render={() => <Announcement />} />\r\n          <Route path=\"/events\" render={() => <Events />} />\r\n          <Route path=\"/citations\" render={() => <Citations />} />\r\n          <Route path=\"/controls\" render={() => <Controls />} />\r\n          <Route path=\"/garages\" render={() => <Garage />} />\r\n          <Route path=\"/\" render={() => <Overview />} />\r\n        </Switch> :\r\n        <Route path=\"/\" render={() => <Login />} />}\r\n    </ErrorBoundary> : <Loader.Parkstash />\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","  \r\nimport React, { createContext } from 'react';\r\n\r\nexport const ComponentsContext = createContext({\r\n  editMode: false,\r\n  toggleEditMode: ()=>{}\r\n});\r\n\r\nexport class ComponentProvider extends React.Component {\r\n\r\n  toggleEditMode = ()=> this.setState({ editMode : !this.state.editMode});\r\n  \r\n  state = {\r\n    editMode : false,\r\n    toggleEditMode: this.toggleEditMode\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ComponentsContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </ComponentsContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const ComponentConsumer =ComponentsContext.Consumer;","import React from 'react';\r\nimport { ComponentProvider } from './context/components';\r\nimport { NavProvider } from './context/nav-context';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store'\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { primaryColor } from './config';\r\nimport './style/main.scss';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html,body{\r\n    font-size: 15px;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  .ant-btn-primary, .ant-btn{\r\n    border-radius: .3em;\r\n    box-shadow: 0 .1em .1em rgba(0,0,0,.2);\r\n  }\r\n  .ant-btn-primary {\r\n    border-color: ${primaryColor};\r\n    background: ${primaryColor};\r\n  }\r\n  .ant-pagination-item, .ant-pagination-item-active a, .ant-select-selector:hover{\r\n    border-radius: .3em;\r\n    color: black !important;\r\n    border-color: ${primaryColor} !important;\r\n  }\r\n  .ant-select-selector{\r\n    border-radius: .4em !important;\r\n  }\r\n  .ant-picker {\r\n    border-color: #d9d9d9;\r\n  }\r\n  .ant-select-show-search.ant-select-multiple .ant-select-selector{\r\n    height: 40px;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  input:focus, textarea:focus, .ant-picker-focused, input:hover, textarea:hover, .ant-picker:hover{\r\n    border-color: ${primaryColor} !important;\r\n  }\r\n  .ant-btn-primary:hover, .ant-btn-primary:focus, .ant-btn-primary:active, .ant-btn:hover, .ant-btn:focus, .ant-btn:active {\r\n    color: ${primaryColor} !important;\r\n    border-color: ${primaryColor};\r\n    background: white;\r\n    transition: 200ms ease;\r\n    box-shadow: 0 0 0;\r\n  }\r\n  \r\n  .ant-table-cell{\r\n    max-width: 300px;\r\n    font-size: 15px;\r\n  }`;\r\n\r\nconst Main = ({ children }: { children: JSX.Element | JSX.Element[]}) => (\r\n  <NavProvider>\r\n    <ComponentProvider>\r\n      <Provider store={store}>\r\n        <GlobalStyle />\r\n        {children}\r\n      </Provider>\r\n    </ComponentProvider>\r\n  </NavProvider>\r\n);\r\n\r\nexport default Main;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as Sentry from '@sentry/browser';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Providers from './providers';\r\n\r\nSentry.init({ dsn: \"https://66ec245dbeed4c95a166a788bcf4f7ae@o410541.ingest.sentry.io/5284571\" });\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}