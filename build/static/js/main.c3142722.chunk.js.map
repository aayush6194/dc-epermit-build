{"version":3,"sources":["assets/announ.svg","assets/email.svg","assets/parkstash_logo.svg","assets/eventss.svg","assets/login.svg","assets/otp.svg","assets/university.svg","assets/wait.svg","assets/parkstash_logo.png","config.ts","style/sidebar/index.tsx","store/reducer/user.ts","api/header.ts","api/request.ts","api/index.ts","utils/text.tsx","utils/logger.ts","store/actions/user.ts","store/reducer/garage.ts","store/reducer/announcement.ts","store/reducer/index.ts","store/index.ts","utils/time.ts","style/topnav.tsx","hooks/tz.ts","layout.tsx","utils/index.ts","hooks/garage.ts","pages/garage/listings/garage-card.tsx","hooks/places.ts","pages/garage/listings/google-map.tsx","components/label.tsx","pages/garage/listings/garage-form.tsx","pages/garage/listings/garage-add.tsx","pages/garage/listings/garage-edit.tsx","hooks/occupancy-table.ts","pages/garage/listings/index.tsx","components/chart/components/axis.tsx","components/chart/hooks/rect.ts","components/chart/hooks/scale.ts","components/chart/hooks/data.ts","components/chart/utils/color.ts","components/chart/utils/points.ts","components/chart/hooks/tooltip.ts","components/chart/components/tooltip.tsx","components/chart/types.ts","components/chart/components/grid.tsx","components/chart/components/graph/multi-line.tsx","components/chart/components/graph/stacked-area.tsx","components/chart/components/graph/stacked-bar.tsx","components/chart/components/graph/combined.tsx","components/chart/utils/chart.tsx","components/chart/components/graph/index.tsx","components/chart/components/legend-table.tsx","components/chart/hooks/resize.ts","style/button/index.tsx","style/generator.ts","components/chart/components/header.tsx","components/chart/components/loading.tsx","components/chart/index.tsx","components/chart/hooks/chart-type.ts","hooks/timeseries.ts","hooks/metrics.ts","components/filter.tsx","pages/garage/analytics/filter-options.ts","pages/garage/analytics/index.tsx","pages/garage/occupancy-table/columns.tsx","pages/garage/occupancy-table/default-table.ts","pages/garage/occupancy-table/format.ts","pages/garage/occupancy-table/table-form.tsx","pages/garage/occupancy-table/table-item.tsx","pages/garage/occupancy-table/table-list.tsx","pages/garage/occupancy-table/index.tsx","components/score-card/score-card.tsx","pages/garage/header.tsx","pages/garage/abnormality/columns.tsx","pages/garage/abnormality/table.tsx","pages/garage/index.tsx","pages/garage/abnormality/index.tsx","pages/announcement/columns.tsx","pages/announcement/table.tsx","store/actions/announcement.ts","pages/announcement/form.tsx","hooks/widget.ts","components/score-card/score-cards.tsx","hooks/refresh.ts","pages/announcement/index.tsx","pages/citations/filter-options.ts","pages/citations/analytics.tsx","pages/citations/index.tsx","pages/events/listings/columns.tsx","pages/events/listings/table.tsx","pages/events/listings/header.tsx","pages/events/listings/form.tsx","hooks/events.ts","pages/events/listings/index.tsx","components/chart/components/graph/pie-chart.tsx","pages/events/model.ts","utils/pretty_format.ts","hooks/promise_hook.ts","pages/events/analytics/header.tsx","pages/events/index.tsx","pages/events/analytics/index.tsx","pages/events/live/header.tsx","pages/events/live/editor.tsx","pages/events/live/index.tsx","pages/login/user-select/auth.tsx","pages/login/user-select/login.tsx","pages/login/user-select/signup.tsx","pages/login/user-select/forgot-password.tsx","pages/login/user-select/index.tsx","hooks/enterprises.ts","pages/login/enterprise-select/enterprise.tsx","pages/login/user-handle.tsx","pages/login/index.tsx","hooks/control.ts","pages/controls/columns.tsx","pages/controls/index.tsx","pages/overview/index.tsx","App.tsx","serviceWorker.ts","context/components.tsx","context/nav-context.tsx","providers.tsx","index.tsx"],"names":["module","exports","gradient","ActionTypes","Line","styled","hr","border","keyframes","ShowHover","span","HideHover","MyNavLink","NavLink","LeftNav","div","props","background","Sidebar","routes","useSelector","state","user","role","enterprise","location","useLocation","pathname","activeStyle","borderLeft","color","Item","hideOnMobile","src","imageUrl","className","medium","style","fontSize","name","padding","borderWidth","inverted","map","i","bool","to","icon","key","includes","active","reduce","acc","_","String","height","width","intialState","error","loading","userState","userStates","UNAUTH","calcUserState","undefined","apps","enterpriseApp","ENTERPISE_SELECT","ENTERPISE_PENDING","APPROVED","setLoggedIn","flag","localStorage","setItem","authHeader","authtoken","getItem","Key","USER","delay","f","Promise","resolve","setTimeout","delayedResponse","response","a","json","res","post","url","body","useDelay","fetch","method","headers","JSON","stringify","then","authGet","authPost","route","auth","eid","eId","garage","id","metricType","header","customPost","enterpriseId","userId","aid","dId","widgets","resource","metrics","tId","table","download","ts","overflow","txt","limit","length","title","substring","console","log","Sentry","asyncActions","apiCall","dispatch","showError","type","USER_REQUEST_PENDING","payload","success","Error","message","USER_REQUEST_SUCCESS","logger","Notification","USER_REQUEST_FAILED","formatUser","Boolean","api","getEnterprise","AUTH","token","authToken","enterprisePayload","GET_ENTERPRISE","logout","LOGOUT","garages","loadingAnnouncements","loadingAction","announcements","actions","combineReducers","action","removeItem","LOGIN","SIGNUP","ADD_ENTERPISE","RESET_ERROR","announcement","filter","item","idToFind","tempAnnouncement","index","cur","ReduxThunk","require","default","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","next","group","info","result","getState","groupEnd","moment","mo","currentTz","getTimezoneFromStore","tzChangeListeners","subscribe","tz","setDefault","forEach","l","defaultInterval","endTime","startTime","clone","set","toISOString","currentMonth","month","yearToDate","getInterval","days","add","getTimezone","FORMAT_DATETIME","abnormalities","date","Text","MiniNav","TopNavBar","useDispatch","minWidth","replace","placement","content","zIndex","maxWidth","customCols","placeItems","bold","textAlign","paddingBottom","marginBottom","borderBottom","placeSelf","size","gridColumn","format","trigger","count","onClick","borderRadius","margin","logo","useTimezone","useState","setTz","useEffect","listener","newTz","find","push","addTimezoneChangeListener","removeTimezoneChangeListener","Layout","children","sidebar","window","scrollTo","year","toString","marginRight","Top","noBackground","mobileLayout","Bottom","shiftUp","marginTop","Wrapper","asyncHandler","successMessage","errorMessage","refresh","useGarages","setter","setState","obj","getGarages","API","addGarage","editGarage","GarageCard","edit","getTableById","status","address","occupancy","abnormality","setTable","occupancyPercent","Number","current","maxCount","toFixed","tableId","garageOccupancyTable","shadow","borderRight","paddingRight","gridGap","disabled","cols","strokeWidth","successPercent","strokeColor","percent","clasName","baselinePercent","sourceType","updatedAt","prettyTime","usePlaces","defaultSearch","found","resultLocation","lat","lng","setError","search","setSearch","searchText","setSearchText","selectResult","resetSearch","getAddress","addr","results","formatted_address","geometry","catch","e","AnyReactComponent","showText","aria-hidden","SimpleMap","forward","setGeo","origin","pointerLocation","zoom","pointerMoved","start","gridRowStart","selectResultLocation","preventDefault","display","gridTemplateColumns","onSubmit","suffix","position","onChange","target","value","placeholder","justifySelf","top","bootstrapURLKeys","center","defaultZoom","__","Label","label","marginLeft","sources","defaultValue","maxOccupancy","occupancyTableId","occupancyUpdateSource","GarageInfoForm","tables","useFormik","initialValues","values","submit","handleSubmit","handleChange","setFieldValue","handleBlur","onBlur","checked","min","max","Group","Option","Normal","CreateGarage","setCount","interval","setInterval","clearInterval","GarageMultiStep","close","step","completed","geo","setGarage","InputComponents","GarageEditor","useOccupanyTable","getTables","garageOccupancyTables","addTable","garageOccupancyTableId","removeTable","editTable","Listings","AddModal","Modal","hideCancel","rounded","invert","open","faIcon","loader","number","list","EditGarage","XAxis","scale","tickFormat","axisStyleProps","maxTicks","range","tickValues","useMemo","dates","domain","mod","Math","floor","AxisBottom","tickLabelProps","fontWeight","fill","textAnchor","hideTicks","YAxisLeft","ticks","AxisLeft","dx","dy","YAxisRight","AxisRight","defaultAxisStyle","hideAxisLine","tickStroke","tickLength","hideZero","useRect","right","bottom","left","calcRect","innerWidth","innerHeight","xRange","yRange","rect","setRect","useScale","points","yMax","xAxis","getXBandScale","yAxis","scaleLinear","scaleBand","d","Date","getDates","useData","timeSeriesResult","getStackedPoints","stackedPoints","linearMax","timeSeries","reference","numPoints","numResource","stackedPoint","at","totalValue","j","point","displayLabel","isMissing","useCombinedData","timeSeriesResults","combinedPoint","getColor","colors","getKeys","Object","keys","k","points_","setSelected","units","xScale","dateFormatter","tooltip","useTooltip","reverse","bandStart","bandEnd","bandwidth","getLegend","unit","getUnit","n","toDollar","graphLocal","event","localPoint","x","y","handleTooltip","newSelected","iX","timestamp","legend","showTooltip","tooltipData","tooltipLeft","tooltipTop","Tooltip","tooltipOpen","isSelected","TooltipWithBounds","customRows","dangerouslySetInnerHTML","__html","Custom","from","stroke","pointerEvents","strokeDasharray","Charts","Grid","yScale","MultiLine","linePathX","data","r","cx","cy","LinePath","linePathY","defined","StackedArea","noneSelected","getY","AreaStack","datum","y0","y1","stacks","path","stack","opacity","StackedBar","colorScale","scaleOrdinal","BarStack","barStacks","barStack","bars","bar","Combined","y2Scale","points2","keyLine","getLineY","getLineX","getChart","chart","multiLine","stackedArea","stackedBar","combined","DrawArea","chartType","selected","tickFormatY","getYTickFormatter","tickFormatX","getXTickFormatter","tooltipFormatter","getTooltipDateFormatter","useToolTip","hideTooltip","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","chartProps","transform","inChartLegend","textTransform","shape","labelMargin","SVG","o","Multi","datas","timeSeriesResult2","data1","data2","dataComb","y2Axis","tickFormatYLeft","tickFormatYRight","fixedAlignment","alignmentPeriod","minusOneDay","formatter","d0","subtract","get","defaultFormatter","tableProps","dataSource","columns","dataIndex","render","pagination","useResize","filterWidth","setWidth","container","useRef","resize","clientWidth","addEventListener","removeEventListener","Bt","button","bg","cursor","designStyle","sizeStyle","fontProps","darkMode","textShadow","fontStyle","noBorder","noHover","Button","ref","elementProps","Spinner","ChartHeader","chartTypes","setChartType","isPercent","queries","link","setLink","csvExportUrl","charts","Loading","d100","Chart","metricDataStatus","useChartType","grid","text","metricDataStatuses","isLoading","curr","hasError","useMetricData","timeseries","setMetricDataStatus","end","shouldSwap","getMetricData","query","all","metricDescriptor","setEndTime","newEndtime","setStartTime","newStartTime","getAlignment","alignment","dayFilter","period","reducer","alignmentReducer","getDefaultTimeframe","timeframes","t1","t2","intoInterval","enteries","timeframe","Filter","toggle","loadingTimeSeries","reset","options","hideTimeSelection","aggregations","resources","custom","setCustom","timeframeLabel","setTimeframeLabel","disabledDate","dividerStyle","gridProps","maxHeight","offset","adjustX","adjustY","handlePresetChange","parse","OptGroup","entry","clearIcon","use12Hours","minuteStep","setMetric","mode","resourceIds","setGarages","parsedValue","setDayFilter","timeSelection","setAlignment","dropdownAlign","showMinute","hours","hour","defaultTimeSeries","crossSeriesReducer","defaultDayFilter","setTimeseries","SET_METRICTYPE","SET_GARAGES","SET_INTERVAL","SET_ALIGNMENT","SET_DAY_FILTER","validateDayFilter","REFRESH","useTimeseries","initialState","useReducer","timeSeriesQuery","Analytics","setOpen","setToggle","currentTimeseries","split","chart_","getTime","startHour","hour1","min1","endHour","hour2","min2","pad","digit","abs","to12hours","g","precision","defaultTable","aTable","temp","Array","OccupancyForm","input","getTitle","getTable","day","getOccupanciesByDay","newIntervals","items","elements","toArray","document","getElementsByClassName","sort","b","classList","secondChild","overflowY","bordered","random","TableItem","select","remove","associatedGarages","fullWidth","onConfirm","TableList","localeProps","garageLoading","float","renderItem","EditModal","OccupancyTable","loadingTables","locale","emptyText","spinning","indicator","minHeight","ScoreCard","adjacentLabel","hoverLabel","borderStyle","lineHeight","PercentBar","FlatValue","str","flatValueQuery","leftBorder","applicableResource","setRes","getValue","round","loadValue","flatValue","flatValueResult","charAt","toUpperCase","getIcon","duration","Header","activeGarages","totalOcc","currentOcc","total","empty","activate","t","record","okButtonProps","cancelButtonProps","okText","cancelText","defaultChecked","activePages","toggler","DIV","states","ACTIVE","ALL","PAST","DEFAULT","Abnormality","detected_on","abnormality_event","ab","Garage","ANALYTICS","activePage","setActivePage","splice","el","underlined","LISTINGS","OCCUPANCY_TABLE","ABNORMALITY","textOverflow","whiteSpace","summary","pageData","Summary","Row","defaultValues","launchAt","expiresAt","Form","setLoading","TextArea","rows","showTime","useWidgets","screen","scoreCards","scoreCardOptions","getWidgets","res2","dashboards","dashboard","metricDescriptors","saveWidgets","removeChart","removeScoreCard","addWidget","editScoreCards","mobileCols","useRefresh","setRefresh","needsRefresh","EXPIRED","Adder","img","AnnoucementEl","announcementId","currentAnnouncements","paddingTop","revenueTimeSeries","revenueTimeSeriesQuery","countTimeSeries","transactionCountTimeSeriesQuery","AdditionalFilter","selectProps","revenueMetric","countMetric","filterProps","transactionTimeSeriesQuery","Citations","GaragesList","show","setShow","price","staffExpected","staffOccupancy","minutes","events","nowISO","defaultGarage","gridRow","minute","second","useEvents","getEvents","notify","removeEvent","newEvents","addEvent","editEvent","refreshEvent","image","switches","modal","currentEvents","defaultMargin","PieChart","radius","centerY","centerX","rx","pieValue","outerRadius","innerRadius","cornerRadius","padAngle","pie","arcs","getAnalyticsCharts","me","this","analyticsQueryInterval","backgroundColor","xAxisLabel","yAxisLabel","revenue","transactions","reservations","getLiveCharts","liveQueryInterval","revenueAndTransactions","sumPoints","sum","getStats","epId","revenueQuery","transactionQuery","r1","r2","ts1","normal","dynamic","call","getAnalyticsStats","getLiveStats","getEnterpriseEvents","UTC","e1","reservationOccupancy","garageName","staffs","expStaffs","bindFunctions","bind","e2","selectedEnterpriseEventManager","selectedEnterpriseEvent","listeners","addSelectedEnterpriseChangeListener","fn","removeSelectedEnterpriseChangeListener","selectEnterpriseEvent","eventId","useSelectEnterpriseEvent","E","setE","enterpriseEvent","formatCentsToDollars","usePromise","promise","Pages","enterpriseEvents","eventIds","activeEvent","downloads","metricDataParam","Editor","dynamicPricing","chart1","chart2","ms11","ms12","ms21","Events","AuthBox","loginFields","hide","validationSchema","Yup","email","required","authSecret","connect","passwordForgotToggler","authType","errors","touched","signupFields","confirmPassword","oneOf","signup","back","alt","selectEmail","user_email","setEmail","trim","resetPassword","user_password","confirm_password","secret","setSecret","confirmEmail","otp","setOtp","otpImg","isActive","s","UserSelectBox","passwordLoading","setResetFields","finished","changeState","finally","useEnterprises","enterprises","getEnterpises","addEnterprise","wait","UserHandleBox","Login","backgroundPosition","backgroundSize","useControl","enterpriseUsers","getEnterpriseUsers","rejectEnterpriseUser","removeEnterpriseUser","acceptEnterpriseUser","accept","reject","approved","ACCEPTED","PENDING","Controls","loadingUsers","toLowerCase","rowKey","Overview","shortName","hideOnLoading","lines","lineChart","App","hostname","match","ComponentsContext","createContext","editMode","toggleEditMode","ComponentProvider","Provider","React","Component","Consumer","toggleSidebar","collapsed","toggleCollapsed","NavContext","NavProvider","GlobalStyle","createGlobalStyle","Main","dsn","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3142722.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/announ.7c05f84e.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.4be984e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/parkstash_logo.ab1ee9fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventss.d3335f65.svg\";","module.exports = __webpack_public_path__ + \"static/media/login.9ab46960.svg\";","module.exports = __webpack_public_path__ + \"static/media/otp.65b29cd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/university.22150a8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/wait.edf991a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/parkstash_logo.ab0d6bfb.png\";","export const mobileWidth = \"860px\";\r\nexport const tabletWidth = \"1100px\";\r\n\r\nexport const primaryColor = \"#33B482\"; // Lighter Bluish Green\r\nexport const secondaryColor = \"#037885\"; // Darker Bluish Green\r\nexport const gray = \"rgba(247, 249, 249, 0.65)\";\r\n\r\nexport const gradient = \"linear-gradient(to left, #00D69E, #00BAA4, #009CA0, #007F90, #1E6378, #2F4858)\";\r\nexport const gradient1 = \"linear-gradient(#00D69E, #00BAA4)\";\r\nexport const gradient2 = \"linear-gradient(#00BAA4, #009CA0, #007F90, #1E6378)\";\r\n\r\nexport const primaryTxtColor = \"#32325D\";\r\nexport const secodaryTxtColor = \"#32325D\";\r\nexport const invertedTxtColor = \"#FFFFFF\";\r\nexport const disabledTxtColor = \"#A6ACAF\";\r\nexport const textOverFlowLimit = 15;\r\n\r\nexport const API = \"https://test.findparkstash.com/api\";\r\n//export const API = \"http://localhost:3000/api\";\r\nexport const sentryAPI = \"https://66ec245dbeed4c95a166a788bcf4f7ae@o410541.ingest.sentry.io/5284571\";\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Avatar, Grid } from 'platyplex_ui';\r\nimport { useLocation } from \"react-router\";\r\nimport { mobileWidth, primaryColor, primaryTxtColor } from \"../../config\";\r\nimport { Badge } from \"platyplex_ui\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Enterprise } from \"../../model/domain/enterprise\";\r\n\r\nconst Sidebar = ({ routes = [] }) => {\r\n  const { user, role } = useSelector((state: any) => state.user);\r\n  const enterprise: Enterprise = useSelector(\r\n    (state: any) => state.user.enterprise\r\n  );\r\n  const location = useLocation().pathname;\r\n\r\n  const makeStr = (bool: boolean): string => String(bool);\r\n  const activeStyle = {\r\n    borderLeft: \".3em solid \" + primaryColor,\r\n    color: primaryColor,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <LeftNav background={\"\"}>\r\n        <Grid.Item hideOnMobile>\r\n          <HideHover>\r\n            <Avatar src={enterprise.imageUrl} />\r\n          </HideHover>\r\n          <ShowHover className={\"txt-md txt-center grid \"}>\r\n            <Avatar\r\n              medium\r\n              style={{ fontSize: \"0.7em\" }}\r\n              src={enterprise.imageUrl}\r\n            />\r\n            <div className=\"capitalize\"> {user.name}</div>\r\n            <Badge\r\n              style={{ fontSize: \".7em\", padding: \".1em .4em\", borderWidth: 2 }}\r\n              inverted\r\n              className={\"shadow capitalize \"}\r\n            >\r\n              {role || \"member\"}\r\n            </Badge>\r\n          </ShowHover>\r\n        </Grid.Item>\r\n\r\n        {routes.map(({ to, name, icon }: any, i) => {\r\n          return (\r\n            <MyNavLink\r\n              className={i > 4 ? \"hide-mobile\" : \"\"}\r\n              key={name}\r\n              style={to.includes(location) ? activeStyle : {}}\r\n              to={to[0] || \"/\"}\r\n              active={makeStr(\r\n                to.reduce((acc: boolean, _: any) => acc || false, false)\r\n              )}\r\n            >\r\n              <i\r\n                style={{ fontSize: \"1.6em\", padding: \"0 .3em\" }}\r\n                className={icon}\r\n              ></i>\r\n              <ShowHover className={\"txt-center hide-mobile \"}>\r\n                {name}\r\n              </ShowHover>\r\n              <div style={{ height: \"2px\" }}></div>\r\n              <div style={{ width: \"100%\", height: \"2px\" }}>\r\n                <Line />\r\n              </div>\r\n            </MyNavLink>\r\n          );\r\n        })}\r\n      </LeftNav>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Line = styled.hr`\r\n  transform: scaleX(0);\r\n`;\r\nconst border = keyframes`from { transform: scaleX(0); } to { transform: scaleX(1);}`;\r\n\r\nconst ShowHover = styled.span`\r\n  display: none;\r\n`;\r\n\r\nconst HideHover = styled.span``;\r\n\r\nconst MyNavLink = styled(NavLink)<{ active: string }>`\r\n  display: grid;\r\n  text-decoration: none;\r\n  place-items: center;\r\n  color: ${primaryTxtColor};\r\n  font-size: 1.35em;\r\n  cursor: pointer;\r\n  grid-template-columns: 1fr;\r\n  padding: 0.8em 0.4em;\r\n\r\n  @media (max-width: ${mobileWidth}) {\r\n    border-left: 0 !important;\r\n    grid-template-columns: 1fr;\r\n    padding-left: 0.3em;\r\n  }\r\n\r\n  @media (min-width: ${mobileWidth}) {\r\n    &:hover ${Line} {\r\n      color: ${primaryColor};\r\n      animation: ${border} 300ms ease-out;\r\n      transform: scaleX(1);\r\n    }\r\n  }\r\n`;\r\n\r\nconst LeftNav = styled.div<{ background: string }>`\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  font-size: .8em;\r\n  display: grid;\r\n  padding: .3em;\r\n  position: fixed;\r\n  z-index: 100;\r\n  left: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  color: ${primaryColor};\r\n  width: 6em;\r\n  grid-template-rows: repeat(16, auto);\r\n  align-items: center;\r\n  justify-items: stretch;\r\n  transition: 100ms ease-out;\r\n  background-color: white;\r\n  background-image: url(${(props) => props.background});\r\n  background-attachment: fixed;\r\n  @media (max-width: ${mobileWidth}) {\r\n    height: 55px;\r\n    width: 100vw;\r\n    top: inherit;\r\n    bottom: 0;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n    grid-template-rows: 1fr;\r\n  }\r\n  &:hover {\r\n    width: 17em;\r\n  }\r\n\r\n  &:hover ${HideHover} {\r\n    display: none;\r\n  }\r\n\r\n  &:hover ${ShowHover} {\r\n    display: block;\r\n  }\r\n\r\n  &:hover ${MyNavLink} {\r\n    grid-template-columns: auto 1fr;\r\n  }\r\n}\r\n`;\r\n\r\nexport default Sidebar;\r\n","import { User } from \"../../model/domain/user\";\r\nimport Key from \"../../json/keys.json\";\r\nimport userStates from \"../../json/user-state.json\";\r\nimport { Enterprise } from \"../../model/domain/enterprise\";\r\ninterface UserActions {\r\n  type: ActionTypes;\r\n  user?: User;\r\n  enterprise?: Enterprise,\r\n  token?: string;\r\n  loading: boolean;\r\n  error: boolean;\r\n  userState: \"APPROVED\" | \"UNAUTH\" | \"ENTERPISE_SELECT\" | \"ENTERPISE_PENDING\";\r\n}\r\n\r\nconst intialState = {\r\n  user: {},\r\n  enterprise: {},\r\n  error: false,\r\n  loading: false,\r\n  userState: userStates.UNAUTH\r\n};\r\n\r\nexport enum ActionTypes {\r\n  LOGIN = \"LOGIN\",\r\n  AUTH = \"AUTH\",\r\n  LOGOUT = \"LOGOUT\",\r\n  SIGNUP = \"SIGNUP\",\r\n  ADD_ENTERPISE = \"ADD_ENTERPISE\",\r\n  PASSWORD_RESET = \"PASSWORD_RESET\",\r\n  FORGOT_PASSWORD = \"FORGOT_PASSWORD\",\r\n  GET_ENTERPRISE = \"GET_ENTERPRISE\",\r\n  USER_REQUEST_FAILED = \"USER_REQUEST_FAILED\",\r\n  USER_REQUEST_PENDING = \"USER_REQUEST_PENDING\",\r\n  USER_REQUEST_SUCCESS = \"USER_REQUEST_SUCCESS\",\r\n  RESET_ERROR = \"RESET_ERROR\"\r\n};\r\n\r\nconst calcUserState = (user: User | undefined) => {\r\n  if (!user || user === undefined||  user.apps === undefined) return userStates.UNAUTH;\r\n  else if (user.apps.enterpriseApp === \"onboardRequestRequired\")\r\n    return userStates.ENTERPISE_SELECT;\r\n  else if (user.apps.enterpriseApp === \"onboarding\")\r\n    return userStates.ENTERPISE_PENDING;\r\n  return userStates.APPROVED;\r\n};\r\n\r\nconst setLoggedIn = (flag: boolean)=> localStorage.setItem('LOGGED_IN', String(flag))\r\n\r\nexport default function rootReducer(\r\n  state = intialState,\r\n  action: UserActions\r\n): any {\r\n  switch (action.type) {\r\n    case ActionTypes.LOGOUT:\r\n      setLoggedIn(false)\r\n      localStorage.removeItem(Key.USER);\r\n      return { ...state, user: undefined, userState: userStates.UNAUTH , loading: false};\r\n\r\n    case ActionTypes.LOGIN:\r\n    case ActionTypes.SIGNUP:\r\n      const { user, token } = action;\r\n      setLoggedIn(true)\r\n      localStorage.setItem(Key.USER, token || \"\");\r\n      return { ...state, user, userState: calcUserState(user), loading: false };\r\n\r\n    case ActionTypes.AUTH:\r\n      setLoggedIn(true)\r\n      return { ...state, user: action.user, userState: calcUserState(action.user), loading: false };\r\n\r\n    case ActionTypes.ADD_ENTERPISE:\r\n      return { ...state, userState: userStates.ENTERPISE_PENDING };\r\n    \r\n      case ActionTypes.GET_ENTERPRISE:\r\n        return { ...state, enterprise: action.enterprise };\r\n      \r\n    case ActionTypes.USER_REQUEST_PENDING:\r\n      return { ...state, loading: true, error: false };\r\n\r\n    case ActionTypes.USER_REQUEST_FAILED:\r\n      return { ...state, error: true, loading: false };\r\n\r\n    case ActionTypes.USER_REQUEST_SUCCESS:\r\n      return { ...state, loading: false };\r\n\r\n    case ActionTypes.RESET_ERROR:\r\n      return { ...state, error: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","\r\nimport Key from '../json/keys.json'\r\n\r\nfunction header() {\r\n    return { \"Content-Type\": \"application/json\" };\r\n  }\r\n  \r\n  function authHeader() {\r\n    let authtoken = localStorage.getItem(Key.USER) || \"\";\r\n    return { \"Content-Type\": \"application/json\", authtoken };\r\n  }\r\n  \r\n  \r\n  function authUploadHeader() {\r\n    let authtoken = localStorage.getItem(Key.USER) || \"\";\r\n    return {  'content-type': 'multipart/form-data', token: authtoken };\r\n  }\r\n  \r\n  export { header , authHeader, authUploadHeader };","import { authHeader , header, authUploadHeader } from './header';\r\nconst delay = (f: any) => new Promise(resolve => setTimeout(resolve, f));\r\n\r\nconst DELAY = 800; \r\n\r\nconst delayedResponse = async (response: Response) => {\r\n  await delay(DELAY)\r\n  return response.json()\r\n};\r\n\r\nconst response = (res: Response) => res.json()\r\n\r\nfunction post(url: string, body: object, useDelay = true) {\r\n  return fetch(url, { method: 'POST', headers: header(), body: JSON.stringify(body) })\r\n    .then(useDelay? delayedResponse: response);\r\n}\r\n\r\nfunction get(url: string, useDelay = true) {\r\n  return fetch(url, { method: 'GET', headers: header() })\r\n  .then(useDelay? delayedResponse: response);\r\n}\r\n\r\nfunction authGet(url: string, useDelay = true){\r\n  return fetch(url, { method: 'GET', headers: authHeader() })\r\n  .then(useDelay? delayedResponse: response);\r\n}\r\n\r\nfunction authCustom(url: string, header: any, useDelay = true){\r\n  return fetch(url, { method: 'GET', headers: header} )\r\n  .then(useDelay? delayedResponse: response);\r\n}\r\n\r\nfunction authDelete(url: string, params : string, useDelay = true){\r\n  return fetch(`${url}/${params}`, { method: 'DELETE', headers: authHeader()} )\r\n  .then(useDelay? delayedResponse: response);\r\n}\r\n\r\nfunction customPost(url: string, header: any, body: object, useDelay = true) {\r\n  return fetch(url, { method: 'POST', headers: {\"Content-Type\": \"application/json\", ...header} , body: JSON.stringify(body) })\r\n  .then(useDelay? delayedResponse: response);\r\n}\r\n\r\nfunction authPost(url : string, body : any, useDelay = true) {\r\n  return fetch(url, { method: 'POST', headers: authHeader(), body: JSON.stringify(body) })\r\n  .then(useDelay? delayedResponse: response);\r\n}\r\n\r\nfunction authPut(url : string, body : any, useDelay = true) {\r\n  return fetch(url, { method: 'PUT', headers: authHeader(), body: JSON.stringify(body) })\r\n  .then(response);\r\n}\r\n\r\nfunction authGetQuery(url: string, query : string){\r\n  return fetch(`${url}/?${query}`, { method: 'GET', headers: authHeader() })\r\n    .then((response : Response) => response.json());\r\n}\r\n\r\nfunction authGetParams(url: string, param : string){\r\n  return fetch(`${url}/${param}`, { method: 'GET', headers: authHeader() })\r\n    .then((response : Response) => response.json());\r\n}\r\n\r\nfunction authUpload(url : string, file : any) {\r\n  return fetch(url, { method: 'POST', body: file })\r\n  .then((response : Response) => response.json());\r\n}\r\n\r\n\r\nexport { get, authGet, post, authPost, authPut, customPost, authCustom, authGetParams, authGetQuery, authUpload, authDelete };","import { post, authGet, authPost, customPost } from './request';\r\nimport { API  } from '../config'\r\nimport { Announcement } from '../model/domain/announcements';\r\nimport { Garage, GarageOccupancyTable } from '../model/domain/garage';\r\nimport { FlatValue, TimeSeries } from '../model/domain/metrics';\r\n\r\nconst route = (route : string )=> API + route;\r\n\r\n //User\r\n const auth = ()=> authGet(route(\"/v1/users/me\"), false);\r\n const getUser = auth;\r\n\r\n //Password Forget\r\n const forgotPassword = (props: any) => post(route(\"/users/password/forgot\"), props);\r\n const confirmEmail = (props: any) => post(route(\"/users/password/verify-forgot\"), props);\r\n const resetPassword = (header: any, props: any) => customPost( route(\"/users/password/change\"), header, props);\r\n\r\n const login = (props : any)=> post(route(\"/v1/login\"), props);\r\n const signup = (props: any)=> authPost(route(\"/v1/signup\"), props); \r\n \r\n//Enterpises\r\nconst selectEnterpise = (enterpriseId: string, userId: string)=> authPost(route(`/v1/enterprises/${enterpriseId}/users/${userId}/onboard/request`), {role: \"member\"}); \r\nconst getEnterprises = ()=> authGet(route(\"/v1/enterprises\"), false);\r\nconst getEnterpriseByUserId = (userId : string)=> authGet(route(`/v1/enterprises/search/by-user?userId=${userId}`), false);\r\nconst getEnterpriseUsers = (eId : string)=> authGet(route(`/v1/enterprises/${eId}/users`));\r\nconst removeEnterpriseUser = (eid: string, userId : string)=> authPost(route(`/v1/enterprises/${eid}/users/${userId}/remove`),{});\r\nconst rejectEnterpriseUser = (eid: string, userId : string)=> authPost(route(`/v1/enterprises/${eid}/users/${userId}/onboard/reject`),{});\r\nconst acceptEnterpriseUser = (eid: string, userId : string)=> authPost(route(`/v1/enterprises/${eid}/users/${userId}/onboard/approve`), {});\r\n\r\n //Metrics\r\n const getTimeSeries = (eId: string, props:  any)=> authGet(route(`/v1/enterprises/${eId}/metrics/timeSeries?timeSeriesQuery=`+ JSON.stringify(props)));\r\n const getTimeSeriesMetricDescriptor = (eId: string, metricType:  string)=> authGet(route(`/v1/enterprises/${eId}/metrics/timeSeriesMetricDescriptors/${metricType}`));\r\n\r\n //Garages\r\n const getGarages = (eid: string)=> authGet(route(`/v1/enterprises/${eid}/garages`));\r\n const addGarage = (eid : string, garage: Garage)=> authPost(route(`/v1/enterprises/${eid}/garages`), garage);\r\n const editGarage = (eid : string, garage: Garage)=> authPost(route(`/v1/enterprises/${eid}/garages/${garage.id}/edit`), garage);\r\n\r\n //Occupancy Table\r\n const getOccupancyTables = (eId: string)=> authGet(route(`/v1/enterprises/${eId}/garageOccupancyTables`));\r\n const getOccupancyTableById = (eId: string, tId: string)=> authGet(route(`/v1/enterprises/${eId}/garageOccupancyTables/${tId}`), false);\r\n const addOccupancyTable = (eId: string, props: GarageOccupancyTable)=> authPost(route(`/v1/enterprises/${eId}/garageOccupancyTables`), props);\r\n const removeOccupancyTable = (eId: string,tId: string)=> authPost(route(`/v1/enterprises/${eId}/garageOccupancyTables/${tId}/remove`), {});\r\n const editOccupancyTable = (eId: string,tId: string, table: GarageOccupancyTable)=> authPost(route(`/v1/enterprises/${eId}/garageOccupancyTables/${tId}/edit`), table)\r\n\r\n //announcement\r\nconst getAnnoucements = (eid: string) => authGet(route(`/v1/enterprises/${eid}/announcements`));\r\nconst addAnnoucement = (eid: string, props : Announcement) => authPost(route(`/v1/enterprises/${eid}/announcements`), props);\r\nconst deleteAnnoucement = (eid : string, aid : string) => authPost(route(`/v1/enterprises/${eid}/announcements/${aid}/remove`), {});\r\nconst editAnnoucement = (eid : string, aid : string, props : any) => authPost(route(`/v1/enterprises/${eid}/announcements/${aid}/edit`), props);\r\n\r\n//Widgets\r\nconst getWidgets = (eId : string)=>authGet(route(`/v1/enterprises/${eId}/dashboards`), true);\r\nconst editWidgets = (eId : string, dId: string, widgets: any)=>authPost(route(`/v1/enterprises/${eId}/dashboards/${dId}/edit`), widgets);\r\nconst getScoreCardOptions = (eId : string, resource = undefined)=> authGet(route(`/v1/enterprises/${eId}/metrics/flatValueMetricDescriptors/${resource? `search/by-resourceType?resourceType=${resource}`: \"\"}`), false);\r\nconst getFlatValue = (eId: string, metrics: FlatValue.Query)=>authGet(route(`/v1/enterprises/${eId}/metrics/flatValue?flatValueQuery=` + JSON.stringify(metrics)), false)\r\nconst getFlatValueMetricDes = (eId: string, metrics: FlatValue.MetricDescriptor)=>authGet(route(`/v1/enterprises/${eId}/metrics/flatValueMetricDescriptors/` + metrics), false)\r\nconst downloadCSv = (eId : string, download: string, ts: string)=> authPost(route(`/v1/enterprises/${eId}/metrics/csv-export/${download}?${ts}`), {},false);\r\n\r\nexport default {\r\n  getGarages, getTimeSeries, addGarage, editGarage,\r\n  auth, getUser, login, signup, getTimeSeriesMetricDescriptor,\r\n  forgotPassword,confirmEmail, resetPassword, \r\n  selectEnterpise, getEnterprises, getEnterpriseByUserId, getEnterpriseUsers,\r\n  removeEnterpriseUser, rejectEnterpriseUser, acceptEnterpriseUser,\r\n  getAnnoucements, addAnnoucement, deleteAnnoucement, editAnnoucement,\r\n  getWidgets, editWidgets, getScoreCardOptions,\r\n  getFlatValue,  getFlatValueMetricDes,\r\n  getOccupancyTables, addOccupancyTable, removeOccupancyTable, editOccupancyTable, getOccupancyTableById,\r\n  downloadCSv\r\n }","\r\nimport React from 'react';\r\nimport { Tooltip } from \"antd\";\r\nconst LIMIT = 20;\r\n\r\nexport const overflowTxt = (txt: string) => `${txt?.substring(0, LIMIT)}${txt?.length > LIMIT ? '...' : ''}`;\r\n\r\nexport const overflow = (txt: string, limit = LIMIT) =>{\r\nif(txt?.length <= limit) return txt;\r\nreturn(\r\n<Tooltip title={txt}>\r\n  <span className=\"cursor capitalize\">\r\n      { `${txt?.substring(0, limit)}${txt?.length > limit ? '...' : ''}`}\r\n </span>\r\n</Tooltip>)\r\n}","import * as Sentry from '@sentry/browser';\r\n\r\nexport default {\r\n    log: (error: any) => {\r\n        console.log(error)\r\n        Sentry.captureException(error)\r\n    }\r\n}","import { ActionTypes } from '../reducer/user';\r\nimport api from '../../api';\r\nimport { Notification } from 'platyplex_ui';\r\nimport { User } from '../../model/domain/user';\r\nimport { overflow } from '../../utils/text';\r\nimport logger from '../../utils/logger';\r\nimport Key from \"../../json/keys.json\";\r\nimport { Dispatch } from 'react';\r\n\r\nexport const asyncActions = async (apiCall: () => Promise<any>, dispatch: any, showError = false) => {\r\n    try {\r\n        dispatch({ type: ActionTypes.USER_REQUEST_PENDING });\r\n        let payload = await apiCall();\r\n        if (!payload || !payload.success)\r\n            throw new Error(payload.message || \"Error\");\r\n\r\n        dispatch({ type: ActionTypes.USER_REQUEST_SUCCESS })\r\n        return await payload;\r\n    } catch (e) {\r\n        logger.log(e)\r\n        if (showError) {\r\n            Notification.error({ title: \"Error\", message: String(e?.message || e) });\r\n        }\r\n        dispatch({ type: ActionTypes.USER_REQUEST_FAILED })\r\n    }\r\n}\r\n\r\nconst formatUser = (user: User) => ({ ...user, name: overflow(user.name) });\r\nconst isLoggedIn = () =>  Boolean(localStorage.getItem(Key.USER));\r\n\r\nexport const auth = () => {\r\n    return async (dispatch: any) => {\r\n        if (isLoggedIn()) {\r\n            const payload = (await asyncActions(() => api.auth(), dispatch));\r\n            if (payload && payload.success) {\r\n                console.log(payload)\r\n                await getEnterprise(payload.user, dispatch)\r\n                dispatch({ type: ActionTypes.AUTH, user: formatUser(payload.user), token: payload.authToken });           \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst getEnterprise = async (user: User, dispatch: any) => {\r\n    if (user?.apps?.enterpriseApp === 'enabled') {\r\n        const { id } = user;\r\n        const enterprisePayload = (await asyncActions(() => api.getEnterpriseByUserId(id), dispatch));\r\n        if (enterprisePayload?.success)\r\n            await dispatch({ type: ActionTypes.GET_ENTERPRISE, enterprise: enterprisePayload.enterprise });\r\n    }\r\n}\r\n\r\nexport const login = (props: any) => {\r\n    return async (dispatch: any) => {\r\n        const payload = await asyncActions(() => api.login(props), dispatch, true);\r\n        if (payload && payload.success) {\r\n           localStorage.setItem(Key.USER, payload.authToken)           \r\n           dispatch(auth())\r\n        }\r\n    }\r\n}\r\n\r\nexport const signup = (props: any) => {\r\n    return async (dispatch: Dispatch<any>) => {\r\n        const payload = await asyncActions(async () => await api.signup(props), dispatch, true);\r\n\r\n        if (payload && payload.success) {\r\n            await getEnterprise(payload.user, dispatch)\r\n            dispatch({ type: ActionTypes.SIGNUP, user: formatUser(payload.user), token: payload.authToken })           \r\n        }\r\n    }\r\n}\r\n\r\nexport const addEnterprise = (enterpriseId: string, userId: string) => {\r\n    return async (dispatch: any) => {\r\n        const payload = (await asyncActions(() => api.selectEnterpise(enterpriseId, userId), dispatch, true));\r\n        if (payload && payload.success) {\r\n            dispatch({ type: ActionTypes.ADD_ENTERPISE })\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch: Dispatch<{type: ActionTypes}>) => dispatch({ type: ActionTypes.LOGOUT });","const intialState = {\r\n    garages : []\r\n}\r\n\r\nexport default function rootReducer(state = intialState, action : any) : any{\r\n    switch( action.type){\r\n        case 'GET_GARAGES':\r\n            return {\r\n                ...intialState, garages : [action.garages]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    };\r\n}","import { Announcement } from \"../../model/domain/announcements\";\r\nimport announcement from \"../../pages/announcement\";\r\n\r\ninterface State {\r\n    announcements: Announcement[];\r\n    loading: boolean;\r\n    error: boolean;\r\n}\r\n\r\ninterface Action {\r\n    type: string;\r\n    payload: {\r\n        announcement?: Announcement;\r\n        announcements?: Announcement[];\r\n        index? : number;\r\n    };\r\n    loadingAction: boolean;\r\n    loadingAnnouncements?: boolean;\r\n    error?: boolean;\r\n}\r\n\r\nconst intialState = {\r\n    error: false,\r\n    loadingAnnouncements: false,\r\n    loadingAction: false,\r\n    announcements: [] as Announcement[],\r\n};\r\n\r\nexport const actions = {\r\n    ACTION_ANNOUNCEMENT_PENDING: \" ACTION_ANNOUNCEMENT_PENDING\", //Includes Edit, Add, Delete\r\n    ACTION_ANNOUNCEMENT_ERROR: \"ACTION_ANNOUNCEMENT_ERROR\", //Includes Edit, Add, Delete\r\n\r\n    EDIT_ANNOUNCEMENT_SUCCESS: \"EDIT_ANNOUNCEMENT_SUCCESS\",\r\n    ADD_ANNOUNCEMENT_SUCCESS: \"ADD_ANNOUNCEMENT_SUCCESS\",\r\n    DELETE_ANNOUNCEMENT_SUCCESS: \"DELETE_ANNOUNCEMENT_SUCCESS\",\r\n\r\n    GET_ANNOUNCEMENTS_PENDING: \"GET_ANNOUNCEMENTS_PENDING\",\r\n    GET_ANNOUNCEMENTS_SUCCESS: \"GET_ANNOUNCEMENTS_SUCCESS\",\r\n    GET_ANNOUNCEMENTS_ERROR: \"GET_ANNOUNCEMENTS_ERROR\",\r\n};\r\n\r\nexport default function rootReducer(state = intialState, action: Action): any {\r\n\r\n    const { payload, type } = action;\r\n\r\n    switch (type) {\r\n        case actions.ACTION_ANNOUNCEMENT_PENDING:\r\n            return { ...state, loadingAction: true };\r\n\r\n        case actions.GET_ANNOUNCEMENTS_PENDING:\r\n            return { ...state, loadingAnnouncements: true };\r\n\r\n        case actions.ADD_ANNOUNCEMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loadingAction: false,\r\n                announcements: [...state.announcements, payload.announcement],\r\n            };\r\n\r\n        case actions.DELETE_ANNOUNCEMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loadingAction: false,\r\n                announcements: state.announcements.filter(\r\n                    (item: Announcement) => item !== payload.announcement\r\n                ),\r\n            };\r\n\r\n        case actions.EDIT_ANNOUNCEMENT_SUCCESS:\r\n            const { id: idToFind } = payload.announcement as Announcement;\r\n            const tempAnnouncement = [ ...state.announcements ];\r\n            const index = state.announcements.reduce((acc, cur, i)=> cur.id === idToFind? i : acc, -1)\r\n            tempAnnouncement[index as number]  = payload.announcement as Announcement\r\n            return {\r\n                ...state,\r\n                loadingAction: false,\r\n                announcements: tempAnnouncement\r\n            };\r\n\r\n        case actions.GET_ANNOUNCEMENTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loadingAnnouncements: false,\r\n                announcements: payload?.announcements || []\r\n            };\r\n\r\n        case actions.GET_ANNOUNCEMENTS_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loadingAnnouncements: false,\r\n                announcements: [],\r\n            };\r\n\r\n\r\n        case actions.ACTION_ANNOUNCEMENT_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loadingAction: false,\r\n                loadingAnnouncements: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport garage from './garage'\r\nimport user from './user'\r\nimport announcement from './announcement'\r\n\r\nexport default combineReducers({\r\n  garage,\r\n  user,\r\n  announcement\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport  rootReducer  from './reducer';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst logger = (store : any) =>( next : any) => (action : any) => {\r\n   console.group(action.type)\r\n   console.info('dispatching', action)\r\n   let result = next(action)\r\n   console.log('next state', store.getState())\r\n   console.groupEnd()\r\n   return result\r\n }\r\n\r\n \r\nconst ReduxThunk = require('redux-thunk').default\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n   \r\n applyMiddleware(ReduxThunk, logger)));\r\n\r\nexport default store;","import store from '../store';\r\nimport mo, { Moment as MomentType} from 'moment-timezone';\r\n\r\nexport const moment = mo;\r\n\r\nlet currentTz = getTimezoneFromStore();\r\nlet tzChangeListeners : any[] = [];\r\n\r\nstore.subscribe(() => {\r\n  const tz = getTimezoneFromStore();\r\n  if (currentTz !== tz) {\r\n    currentTz = tz;\r\n    moment.tz.setDefault(tz);\r\n    tzChangeListeners.forEach(l => l(currentTz));\r\n  }\r\n});\r\n\r\nexport const defaultInterval = () => {\r\n  const endTime = moment();\r\n  const startTime = endTime.clone()\r\n    .set('hours', 0)\r\n    .set('minute', 0)\r\n    .set('second', 0)\r\n    .set('millisecond', 0);\r\n  return { endTime: endTime.toISOString(), startTime: startTime.toISOString() };\r\n};\r\n\r\nexport const currentMonth = (month = 0) => {\r\n  const endTime = moment();\r\n  const startTime = endTime.clone()\r\n    .set('month', endTime.month() + month)\r\n    .set('date', 1)\r\n    .set('hours', 0)\r\n    .set('minute', 0)\r\n    .set('second', 0)\r\n    .set('millisecond', 0);\r\n  return { endTime: endTime.toISOString(), startTime: startTime.toISOString() };\r\n};\r\n\r\n\r\n\r\nexport const yearToDate = () => {\r\n  const endTime = moment();\r\n  const startTime = endTime.clone()\r\n    .set('month', 0)\r\n    .set('date', 1)\r\n    .set('hours', 0)\r\n    .set('minute', 0)\r\n    .set('second', 0)\r\n    .set('millisecond', 0);\r\n  return { endTime: endTime.toISOString(), startTime: startTime.toISOString() };\r\n};\r\n\r\nexport const getInterval = (days: number)=>{\r\n  const endTime = moment();\r\n  const startTime = endTime.clone().add(-days, 'day');\r\n  return { endTime : endTime.toISOString(), startTime : startTime.toISOString() }\r\n}\r\n\r\nfunction getTimezoneFromStore() {\r\n  //NOTE: since number of files reference timezone before even \r\n  //timezone of the enterprise is loaded, and never update themselves\r\n  //e.g. filter-options.ts, this was necessary.\r\n  //TODO: fix those files later and have this back to utc\r\n  return store.getState().user?.enterprise?.tz || 'America/Los_Angeles';\r\n}\r\n\r\ninterface TimezoneChangeListener {\r\n  (tz: string): void;\r\n}\r\nexport function addTimezoneChangeListener(listener: TimezoneChangeListener) {\r\n  const exists = !!tzChangeListeners.find(l => l === listener);\r\n  if (!exists) {\r\n    tzChangeListeners.push(listener);\r\n  }\r\n}\r\nexport function removeTimezoneChangeListener(listener: TimezoneChangeListener) {\r\n  tzChangeListeners = tzChangeListeners.filter(l => l === listener);\r\n}\r\n\r\nexport function getTimezone() {\r\n  return currentTz;\r\n}\r\n\r\nexport const NEW_FORMAT_DATETIME = 'MMM DD, YYYY @ hh:mm A';\r\nexport const FORMAT_DATETIME = 'MMM DD, YYYY @ hh:mm A';\r\nexport const FORMAT_TIME = 'hh:mm A';\r\nexport const FORMAT_DATETIME_2 = 'ddd MMM DD, YYYY hh:mm A';\r\n\r\nmoment.tz.setDefault(currentTz);\r\n\r\nexport type Moment = MomentType;","\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Avatar, Text as Txt , Header, Grid} from 'platyplex_ui';\r\nimport { mobileWidth,  gradient, disabledTxtColor } from '../config';\r\nimport { useLocation } from \"react-router\";\r\nimport logo from '../assets/parkstash_logo.svg';\r\nimport { Popover, Menu, Badge } from 'antd';\r\nimport { logout } from '../store/actions/user';\r\nimport { useDispatch } from 'react-redux';\r\nimport { moment } from '../utils/time';\r\n\r\nconst TopNavBar = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation().pathname;\r\n  return (\r\n    <MiniNav>\r\n      <Text className=\"capitalize bold txt-md txt-left\" style={{ minWidth: \"100px\", width: \"100%\" }}>\r\n        {location === \"/\" || location === \"/overview\" ? \"Overview\" : location.replace(\"/\", \"\")}\r\n      </Text>\r\n    \r\n      <Popover\r\n        placement=\"bottomRight\"\r\n        content={\r\n          <div style={{ zIndex: 1000, maxWidth: '300px'}}>\r\n            <Grid customCols='1fr auto' placeItems='start stretch'>\r\n              <Header bold padding='0 0 .5em 0' textAlign='left'>Abnormality</Header>\r\n              <i className='fas fa-bell txt-md'></i>\r\n            </Grid>\r\n            {abnormalities.map(({ garage, date }, i) => {\r\n              const style = i < (abnormalities.length - 1)? { \r\n                paddingBottom: '1em',  \r\n                marginBottom: '.5em', \r\n                borderBottom: \"1px solid \"+ disabledTxtColor\r\n              } : {};\r\n            return  (      \r\n                <Grid customCols='auto 1fr' placeItems='start stretch' style={style}>\r\n                  <i className='fas fa-car txt-md' style={{placeSelf: \"center\"}}></i>\r\n                  <Header bold textAlign='left' size={4}>{garage}</Header>\r\n                  <Txt style={{gridColumn: \"1/-1\"}} textAlign='right' >\r\n                    Abnormality Detected at 50% Occupancy.\r\n                  </Txt>\r\n                  <Txt style={{gridColumn: \"1/-1\"}} color={disabledTxtColor} textAlign='right'>\r\n                    {date.format('hh:mm A')}\r\n                  </Txt>\r\n                </Grid>\r\n             )})}\r\n          </div>\r\n        }\r\n        trigger=\"hover\"\r\n      >\r\n        <Badge count={3}>\r\n          <i className='fa fa-bell txt-shadow pointer txt-lg'></i>\r\n        </Badge>\r\n      </Popover>\r\n\r\n      <Popover\r\n        placement=\"bottomRight\"\r\n        content={\r\n          <Menu style={{ zIndex: 1000 }}>\r\n            <Menu.Item key=\"0\" className=\"noselect\">\r\n              <Grid customCols='auto 1fr' onClick={() => dispatch(logout())}>\r\n                <i className='fas fa-sign-in-alt txt-md'></i>\r\n                <span>Logout</span>\r\n              </Grid>\r\n            </Menu.Item>\r\n          </Menu>\r\n        }\r\n        trigger=\"hover\"\r\n      >\r\n        <div>\r\n          <Avatar \r\n            className='avatar shadow' \r\n            style={{ background: \"white\", borderRadius: \"50%\", margin: \"0 1em\" }} \r\n            url={logo} \r\n          />\r\n        </div>\r\n      </Popover>\r\n    </MiniNav>)\r\n}\r\n\r\nconst abnormalities = [{\r\n  garage: \"North 10th Street Garage\",\r\n  date: moment(),\r\n}, {\r\n  garage: \"North 10th Street Garage\",\r\n  date: moment(),\r\n},\r\n{\r\n  garage: \"North 10th Street Garage\",\r\n  date: moment(),\r\n}]\r\n\r\n\r\nconst Text = styled.div`\r\n    padding-left: 9.5em;\r\n    @media(max-width: ${mobileWidth}){\r\n       padding-left: 0;\r\n       font-size: 1.2em;\r\n    } \r\n  `;\r\n\r\nconst MiniNav = styled.div`\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  position: fixed;\r\n  font-size: 15px;\r\n  top: 0;\r\n  right : 0;\r\n  left: 0;\r\n  padding: 0 1.5em 0 0;\r\n  z-index: 9;\r\n  width: 100vw;\r\n  height: 4em; \r\n  background: ${gradient};  \r\n  color: white;\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 1fr auto auto;\r\n  grid-template-rows: 1fr;\r\n  place-items: center end;\r\n    @media(max-width: ${mobileWidth}){\r\n      top : inherit;\r\n      padding-left: 0\r\n      grid-gap: .5em;\r\n    } `;\r\n\r\nexport default TopNavBar;","import { addTimezoneChangeListener, removeTimezoneChangeListener, getTimezone  } from '../utils/time';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useTimezone = () => {\r\n  const [tz, setTz] = useState(getTimezone());\r\n\r\n  useEffect(() => {\r\n    const listener = (newTz: string) => {\r\n      setTz(newTz);\r\n    }\r\n\r\n    addTimezoneChangeListener(listener);\r\n\r\n    return () => removeTimezoneChangeListener(listener);\r\n  },[]);\r\n\r\n  return tz;\r\n}\r\n\r\nexport default useTimezone;","import React, { useEffect } from 'react';\r\nimport Sidebar from './style/sidebar';\r\nimport styled from 'styled-components';\r\nimport { mobileWidth, gradient, disabledTxtColor } from './config';\r\nimport TopNavBar from './style/topnav';\r\nimport useTimezone from './hooks/tz';\r\nimport { Grid, Text } from 'platyplex_ui';\r\nimport { moment } from './utils/time'\r\nimport routes from './json/routes.json';\r\ninterface LayoutContainer {\r\n    children : JSX.Element | JSX.Element[];\r\n    style?: React.CSSProperties;\r\n    sidebar? : boolean;\r\n    background? : string;\r\n} \r\ninterface Layout {\r\n    className? : string;\r\n    children : JSX.Element | JSX.Element[];\r\n    maxWidth? : number | string;\r\n    style? : React.CSSProperties\r\n}\r\n\r\ninterface Top extends Layout {\r\n    customCols? : string;\r\n    noBackground? : boolean;\r\n}\r\n\r\ninterface Bottom extends Layout {\r\n    shiftUp? : boolean;\r\n}\r\n\r\nconst Layout = ({ children, style, sidebar, background }: LayoutContainer) => {\r\n    const tz = useTimezone();\r\n    useEffect(() =>\r\n        window.scrollTo(0, 0), [])\r\n    return (<>\r\n        <div>\r\n            {sidebar && <>\r\n                <Sidebar routes={routes} />\r\n                <TopNavBar />\r\n            </>}\r\n        </div>\r\n        <Wrapper background={background} style={style} sidebar={sidebar}>\r\n            <div\r\n                className=\"left-on-desktop\"\r\n                style={{ width: '100%', height: '100%' }}\r\n            >\r\n                {children}\r\n            </div>\r\n            <Grid customCols='auto 1fr auto' placeSelf=\"end stretch\" padding='0 0 .75em 0'>\r\n                <div></div>\r\n                <Text color={disabledTxtColor} style={{ placeSelf: \"end center\" }} className=\"left-on-desktop\">\r\n                    © 2018-{moment().year().toString()} ParkStash, All Rights Reserved\r\n                </Text>\r\n                <div className=\"capitalize txt-xsm\" style={{ marginRight: \"1.5em\" }}>Timezone: {tz}</div>\r\n            </Grid>\r\n        </Wrapper>\r\n    </>\r\n    );\r\n};\r\n\r\nLayout.Top = ({ className, children, customCols = \"auto 1fr auto\", noBackground = false, maxWidth = '1500px', style = {} }: Top) => {\r\n    style = { ...style, maxWidth, minWidth: '85%' };\r\n    return (\r\n        <div className={className} style={{ paddingBottom: '10em', background: noBackground ? '' : gradient, width: '100%' }}>\r\n            <Grid mobileLayout={false} customCols={customCols} style={style} margin='auto'>\r\n                {children}\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nLayout.Bottom = ({ className, shiftUp = true, children, maxWidth = '1500px', style = {} }: Bottom) => {\r\n    return (\r\n        <Grid\r\n            margin='auto'\r\n            className={className}\r\n            placeItems=\"start stretch\"\r\n            style={{ ...style, marginTop: shiftUp ? '-10em' : '1em', maxWidth, minWidth: \"85%\", }}\r\n        >\r\n            {children}\r\n        </Grid>\r\n    )\r\n};\r\n\r\nconst Wrapper = styled.div<{ background?: string, sidebar?: boolean }>`\r\n${(props) => `\r\n    padding-top: ${props.sidebar ? '4em' : 0};\r\n    background: ${props.background ? `linear-gradient(rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.95)), url(${props.background}), white` : '#F0F3F4'};`}\r\n    margin: auto;\r\n    min-height: 100vh;\r\n    display: grid;\r\n    place-items: start stretch;\r\n    transition: all 0.5s ease-out;\r\n    background-attachment: fixed;\r\n    background-repeat: no-repeat;\r\n    background-position:  center;\r\n    background-size: cover;\r\n    grid-template-rows: 1fr auto;\r\n    @media(max-width: ${mobileWidth}){ \r\n        width: 100vw;\r\n        padding-bottom: 5em;\r\n    }`;\r\n\r\nexport default Layout;","import { Notification } from 'platyplex_ui';\r\nimport logger from \"./logger\";\r\n\r\n\r\nexport const asyncHandler = async ({\r\n  apiCall,\r\n  successMessage,\r\n  errorMessage,\r\n  refresh = ()=>{}\r\n}: any) => {\r\n  try {\r\n    const res = await apiCall();\r\n    if (!res.success) throw new Error(res.message);\r\n    if (successMessage) {\r\n      Notification.success({ title: \"Succcess\", message: successMessage });\r\n    }\r\n    refresh()\r\n    return res;\r\n  } catch (e) {\r\n    if (errorMessage) {\r\n      Notification.error({ title: \"Error\", message: errorMessage });\r\n    }\r\n    logger.log(e)\r\n    return { success: false }\r\n  }\r\n};","import { useState, useEffect } from 'react';\r\nimport API from '../api'\r\nimport { Garage } from '../model/domain/garage';\r\nimport { asyncHandler } from \"../utils\";\r\n\r\nexport const useGarages = ({ eId } : any) => {\r\n  const [state, setter] = useState({\r\n    garages: [] as Garage[],\r\n    loading: false,\r\n    error: false,\r\n  });\r\n\r\n  const setState = (obj: any) => setter({ ...state, ...obj });\r\n\r\n  const getGarages = async (eId: string) => {\r\n    setState({ loading: true, error: false });\r\n    const { garages = [], success = false } = await asyncHandler({\r\n      apiCall: () => API.getGarages(eId),\r\n    });\r\n    setState({ loading: false, error: !success, garages });\r\n  };\r\n\r\n  const addGarage = async (garage: Garage) => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () => API.addGarage(eId, garage),\r\n      successMessage: \"Garage was Added\",\r\n      errorMessage: \"Garage was not Added\",\r\n    });\r\n    setState({ loading: false, error: res?.success || false });\r\n    getGarages(eId)\r\n  };\r\n\r\n  const editGarage = async (garage: Garage) => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () =>API.editGarage(eId, garage),\r\n      successMessage: \"Garage was Edited\",\r\n      errorMessage: \"Garage was not Edited\",\r\n    });\r\n    setState({ loading: false, error: res?.success || false });\r\n    getGarages(eId)\r\n  };\r\n\r\n\r\n  const refresh = () => getGarages(eId);\r\n\r\n  useEffect(() => {\r\n      getGarages(eId);\r\n  }, [eId]);\r\n\r\n  return {\r\n    ...state,\r\n    addGarage,\r\n    editGarage,\r\n    refresh\r\n  };\r\n};\r\n\r\nexport default useGarages;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Garage } from \"../../../model/domain/garage\";\r\nimport { Card, Header, Text, Grid, Badge } from \"platyplex_ui\";\r\nimport { Progress, Tooltip } from \"antd\";\r\nimport { primaryColor, disabledTxtColor } from \"../../../config\";\r\nimport { moment } from '../../../utils/time';\r\n\r\ntype GarageCardProps = {\r\n  garage: Garage;\r\n  edit: {(): any},\r\n  getTableById: { (tableId: string): Promise<any> }/*TODO: surrey:fill promise type*/\r\n}\r\nconst GarageCard = (props: GarageCardProps) => {\r\n  const { edit, getTableById } = props;\r\n  const { imageUrl, status, name, address, occupancy, abnormality } = props.garage;\r\n  const [table, setTable] = useState(\"\");\r\n  const occupancyPercent = Number(((occupancy.current?.count || 0) / occupancy.maxCount * 100).toFixed(2));\r\n\r\n  const active = status === 'active';\r\n  \r\n  useEffect(() => {\r\n    if (occupancy.tableId)\r\n      getTableById(occupancy.tableId)\r\n        .then((res: any) => {\r\n          if (res?.success)\r\n            setTable(res?.garageOccupancyTable?.title || \"\");\r\n        })\r\n  }, []);\r\n\r\n  return (\r\n    <Card shadow style={{maxWidth: \"80vw\", width: '800px'}}>\r\n      <Grid customCols='auto 1fr' placeItems='start stretch'>\r\n        <Grid placeSelf='stretch' style={{borderRight: '2px solid ' + disabledTxtColor, paddingRight: '1em'}}>\r\n        {imageUrl && imageUrl[0]? \r\n        <img src={imageUrl[0]} style={{maxWidth: \"8em\"}}/> :\r\n          <i style={{fontSize: '9em', color: disabledTxtColor}} className='fas fa-parking'></i>\r\n        }\r\n        </Grid>\r\n        <Grid placeItems='stretch'>\r\n          <Grid gridGap='0' placeItems='stretch'>\r\n            <Header textAlign=\"left\">\r\n              <Grid customCols=\"auto auto 1fr auto\" placeSelf=\"end\" gridGap='0'>\r\n                <Text bold>{name} &nbsp;</Text>\r\n                <span className=\"noselect\">\r\n                  <i className=\"fa fa-edit pointer hoverr txt-sm\" onClick={edit}></i> &nbsp;\r\n                  <Tooltip title='Please contact us to delete a garage'>\r\n                    <i className=\"fa fa-trash pointer txt-sm\" style={{ color: \"gray\" }}></i> \r\n                  </Tooltip>&nbsp;\r\n            </span>\r\n                <div></div>\r\n                <Badge\r\n                  style={{ fontSize: \".65em\" }}\r\n                  disabled={!active}\r\n                >\r\n                  {active ? \"Active\" : \"Disabled\"}\r\n                </Badge>\r\n\r\n              </Grid>\r\n            </Header>\r\n\r\n            <Text color=\"gray\" textAlign=\"left\">\r\n              <i className=\"far fa-compass\" ></i> {address}\r\n            </Text>\r\n            {\r\n              table &&\r\n              <Text color=\"gray\" textAlign=\"left\">\r\n                <i className=\"fa fa-table\" ></i> {table}\r\n              </Text>\r\n            }\r\n          </Grid>\r\n\r\n          <Grid placeSelf=\"stretch\" cols=\"2\" placeItems=\"start\" gridGap=\".5em\">\r\n            <Progress\r\n              strokeWidth={15}\r\n              successPercent={0}\r\n              strokeColor={primaryColor}\r\n              percent={occupancyPercent}\r\n              format={() => <div className='bold'>{occupancyPercent}%</div>}\r\n              style={{\r\n                gridColumn: '1/-1',\r\n                width: \"100%\",\r\n                placeSelf: \"center stretch\",\r\n                paddingRight: '.5em'\r\n              }}\r\n            />\r\n            <Badge\r\n              inverted={active}\r\n              disabled={!active}\r\n              clasName={\"grid\"}\r\n            >\r\n                <Text bold color='inherit'>\r\n                  {occupancy.current?.count || \"N/A\"} \r\n                  <span style={{ fontSize: \"1.3em\" }}> / </span>\r\n                  {occupancy.maxCount}\r\n                </Text>\r\n            </Badge>\r\n\r\n     \r\n            <Badge disabled={!abnormality?.active}  style={{placeSelf :'center end'}}>\r\n                <i className='fa fa-bell'></i>&nbsp;\r\n                Abnormality{abnormality.active? `: ${abnormality.baselinePercent * 100}%` : ''}\r\n            </Badge>\r\n\r\n          </Grid>\r\n          <Grid cols='2'>\r\n            <Text placeSelf=\"center start\" color={disabledTxtColor}>\r\n              &nbsp;{occupancy.sourceType === 'integration' ? \"Automatic\" : \"Manual\"}\r\n            </Text>\r\n            {\r\n              occupancy.current?.updatedAt &&\r\n              <div style={{ color: \"grey\", fontSize: \".75em\", placeSelf: \"center end\" }}>\r\n                Last Updated: {occupancy.current!.updatedAt.prettyTime}\r\n                \r\n              </div>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GarageCard;\r\n","import { useState  } from \"react\";\r\nimport logger from \"../utils/logger\";\r\n\r\ntype Cood = {\r\n    lat: number,\r\n    lng: number\r\n}\r\n\r\nexport const usePlaces = () => {\r\n    const origin = { lat: 32, lng: -92 };\r\n    const defaultSearch = {\r\n        found: false,\r\n        result: \"\",\r\n        resultLocation: origin,\r\n    }\r\n    const [ error, setError] = useState(true);\r\n    const [search, setSearch] = useState(defaultSearch);\r\n    const [ searchText, setSearchText] = useState(\"\");\r\n\r\n    const getAddress = (addr: string) => {\r\n        setError(true)\r\n        const KEY = `AIzaSyAeJmDi-yAmMJ2N9n7zHDjl8nUcXzDunPM`;\r\n        const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${addr}&key=${KEY}`;\r\n        if (addr && addr.length > 0)\r\n            fetch(url)\r\n                .then((res) => res.json())\r\n                .then((res) => {\r\n                    if (res.status === \"OK\" && res.results && res.results.length > 0) {\r\n                        const result = res.results[0].formatted_address;\r\n                        const resultLocation = {\r\n                            lat: res.results[0].geometry.location.lat,\r\n                            lng: res.results[0].geometry.location.lng,\r\n                        } as Cood;\r\n                        setSearch({ ...search, result, resultLocation, found: true });\r\n                    } else throw new Error();\r\n                })\r\n                .catch((e) => {\r\n                    logger.log(e)\r\n                    setSearch({ ...search, result: \"No Result\", found: false })\r\n                });\r\n        else setSearch({ ...search, result: \"\" });\r\n    };\r\n\r\n    const resetSearch = () => setSearch(defaultSearch);\r\n    const selectResult = (result : string)=>{\r\n        setSearchText(result);\r\n        setError(false)\r\n    }\r\n\r\n    return {\r\n        searchText,\r\n        search,\r\n        error,\r\n        selectResult,     \r\n        resetSearch,\r\n        getAddress,\r\n        setSearchText\r\n    };\r\n};\r\n\r\nexport default {\r\n    usePlaces\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { Input, Tooltip } from \"antd\";\r\nimport { Card, Button } from \"platyplex_ui\";\r\nimport { usePlaces } from \"../../../hooks/places\";\r\n\r\nconst AnyReactComponent = ({ showText, className }: any) => (\r\n  <div>\r\n    <i\r\n      className={\"fa fa-map-marker txt-lg red \" + className}\r\n      aria-hidden=\"true\"\r\n    ></i>\r\n    {showText && (\r\n      <Card width=\"5em\" padding=\".4em\">\r\n        Click Me to Move\r\n      </Card>\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst SimpleMap = ({ forward, setGeo }: any) => {\r\n  const origin = { lat: 32, lng: -92 };\r\n  const {\r\n    searchText,\r\n    selectResult,\r\n    error,\r\n    search,\r\n    setSearchText,\r\n    resetSearch,\r\n    getAddress,\r\n  } = usePlaces();\r\n\r\n  const [state, setter] = useState({\r\n    location: origin,\r\n    pointerLocation: origin,\r\n    zoom: 17,\r\n    pointerMoved: false,\r\n  });\r\n  const setState = (obj: any) => setter({ ...state, ...obj });\r\n\r\n  const start = { gridColumn: 1, gridRowStart: 1 };\r\n  const selectResultLocation = (e: any) => {\r\n    e.preventDefault();\r\n    if (search.found) {\r\n      setState({\r\n        location: search.resultLocation,\r\n        pointerLocation: search.resultLocation,\r\n      });\r\n      selectResult(search.result);\r\n    }\r\n    resetSearch();\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"grid\",\r\n        height: \"50vh\",\r\n        width: \"100%\",\r\n        gridTemplateColumns: \"1fr\",\r\n      }}\r\n    >\r\n      <form\r\n        onSubmit={selectResultLocation}\r\n        style={{\r\n          ...start,\r\n          zIndex: 10,\r\n          marginTop: \".3em\",\r\n          width: \"100%\",\r\n          height: \"4em\",\r\n        }}\r\n      >\r\n        <Input\r\n          suffix={\r\n            <Tooltip title={\"Please enter the Full Address\"}>\r\n              <i className={`fa fa-${error ? 'times-circle red' : 'check green'}`} style={{ position: \"relative\" }}></i>\r\n            </Tooltip>\r\n          }\r\n          onChange={({ target }: any) => {\r\n            setSearchText(target.value);\r\n            setState({ pointerMoved: false });\r\n            getAddress(target.value);\r\n          }}\r\n          placeholder=\"Enter your Garage Address\"\r\n          value={searchText}\r\n          style={{ height: \"3em\", width: \"80%\", borderRadius: \"4em\" }}\r\n        />\r\n        {search.result.length > 0 && (\r\n          <Card\r\n            onClick={selectResultLocation}\r\n            className=\"pointer noselect\"\r\n            shadow\r\n            margin=\"0 .5em\"\r\n          >\r\n            {search.result}\r\n          </Card>\r\n        )}\r\n      </form>\r\n      <Button\r\n        shadow={state.pointerMoved && !error}\r\n        disabled={!state.pointerMoved || error}\r\n        onClick={() => {\r\n          setGeo({ ...state.pointerLocation, address: searchText });\r\n          forward();\r\n        }}\r\n        style={{\r\n          ...start,\r\n          zIndex: 10,\r\n          justifySelf: \"center\",\r\n          height: \"2.3em\",\r\n          position: \"relative\",\r\n          top: \"calc(100% - 4em)\",\r\n        }}\r\n      >\r\n        Next &nbsp;\r\n        <i className=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>\r\n      </Button>\r\n      <div style={{ ...start, justifySelf: \"stretch\" }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyB4z2lv6jvxicb7dsQ-K8fFxRcjt07YxQI\" }}\r\n          center={state.location}\r\n          defaultZoom={state.zoom}\r\n          onChange={({ zoom, center: location }: any) =>\r\n            setState({ zoom, location })\r\n          }\r\n          onClick={({ _, __, lat, lng }: any) =>\r\n            setState({ pointerLocation: { lat, lng }, pointerMoved: true })\r\n          }\r\n        >\r\n          <AnyReactComponent\r\n            className={!state.pointerMoved ? \"grow\" : \"\"}\r\n            lat={state.pointerLocation.lat}\r\n            lng={state.pointerLocation.lng}\r\n            showText={!state.pointerMoved}\r\n          />\r\n        </GoogleMapReact>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleMap;\r\n","import { Tooltip } from \"antd\";\r\nimport React from 'react';\r\n\r\nexport const Label = ({ label = 'placeholder' , icon = 'fa fa-info-circle'}) =>(\r\n<Tooltip title={label}>\r\n    <i className='fa fa-info-circle' style={{marginLeft: '7px'}}></i>\r\n</Tooltip>)\r\n\r\nexport default Label;","import React from 'react';\r\nimport { Grid, Text, Button } from \"platyplex_ui\";\r\nimport * as  Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { Switch, InputNumber, Input, Select, Radio, DatePicker } from 'antd';\r\nimport { Tooltip } from 'antd';\r\nimport { Garage, GarageOccupancyTable } from '../../../model/domain/garage';\r\nimport Label from '../../../components/label';\r\n\r\nconst sources = {\r\n    integration: 'integration',\r\n    table: 'table'\r\n}\r\nconst defaultValue = {\r\n    name: \"\", \r\n    status: 'active', \r\n    maxOccupancy: 420, \r\n    occupancyTableId: null, \r\n    occupancyUpdateSource: 'table',\r\n    abnormality: {\r\n        active: false,\r\n        percent: 0\r\n    }\r\n};\r\n\r\nconst GarageInfoForm = (props: any) => {\r\n    const { loading, tables = [], garage } = props;\r\n\r\n    const { handleSubmit, handleChange, setFieldValue, values, handleBlur } = useFormik({\r\n        initialValues: (garage || defaultValue) as any,/*TODO: surrey: use AddGarageModel interface*/\r\n        onSubmit(values) {\r\n            props.submit(values);\r\n        },\r\n    })\r\n\r\n\r\n    const error = values.name.length < 6;\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n            className=\"shake\"\r\n            style={{\r\n                height: \"100%\",\r\n                display: \"grid\",\r\n                background: \"white\",\r\n                padding: \"1em 2em\",\r\n                width: \"100%\",\r\n                placeItems: \"center stretch\",\r\n                gridGap: \".4em\"\r\n            }}>\r\n\r\n            <div style={{ placeSelf: \"stretch\", display: \"grid\", placeItems: \"stretch\" }} >\r\n                <Text textAlign=\"left\" bold>Enter the Name of your Garage<span className=\"red\">*</span></Text>\r\n                <Input\r\n                    style={{ placeSelf: \"end\" }}\r\n                    type={'text'}\r\n                    name={'name'}\r\n                    onBlur={handleBlur}\r\n                    suffix={\r\n                        <Tooltip title={\"Garage must contain at least 6 characters\"}>\r\n                            <i className={`fa fa-${error ? 'times-circle red' : 'check green'}`} style={{ position: \"relative\" }}></i>\r\n                        </Tooltip>\r\n                    }\r\n                    value={values.name}\r\n                    onChange={handleChange}\r\n                    placeholder={\"Example: SJSU Garage 1\"} />\r\n            </div>\r\n\r\n            <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                <Text textAlign=\"left\" placeSelf=\"end start\" bold>\r\n                    Activate Garage\r\n                        <span className=\"red\">*</span>\r\n                        <Label label={'Activated garage can be used for parking'}/>\r\n                </Text>\r\n                <Switch\r\n                    checked={values.status === 'active'}\r\n                    style={{ placeSelf: \"end\" }}\r\n                    onChange={(checked: boolean) => setFieldValue(\"status\", checked? 'active': 'inactive')}\r\n                />\r\n            </Grid>\r\n\r\n            <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                <Text textAlign=\"left\" placeSelf=\"end start\" bold>\r\n                    Automate Garage \r\n                    <span className=\"red\">*</span>\r\n                    <Label label={'Automatic Garages needs to be integrated with the thirdparty APIs(Eg: Genetec)'}/>\r\n                </Text>\r\n                <Switch\r\n                    checked={values.occupancyUpdateSource === sources.integration}\r\n                    style={{ placeSelf: \"end\" }}\r\n                    onChange={(checked: boolean) => \r\n                        setFieldValue(\"occupancyUpdateSource\", checked? sources.integration: sources.table)\r\n                    }\r\n                />\r\n            </Grid>\r\n\r\n            <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\">\r\n                <Text textAlign=\"left\" placeSelf=\"end start\" bold>\r\n                    Abnormality \r\n                    <Label label={'Abnomality allows to get garage alert when a cetrain threshold is reached'}/>\r\n                </Text>\r\n\r\n                <Grid margin=\"0 0 0 .5em\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\">\r\n                    <Grid gridGap='0' customCols='1fr auto'  margin=\"0 0 .5em 0\">\r\n                    <Text textAlign=\"left\" placeSelf=\"end start\">\r\n                        Abnormality Baseline %\r\n                    </Text>\r\n                    <InputNumber\r\n                        min={0}\r\n                        max={100}\r\n                        style={{ placeSelf: \"end\" }}\r\n                        value={Number((values.abnormality?.percent * 100).toFixed(0))}\r\n                        onChange={(e) => setFieldValue(\"abnormality\", {\r\n                            active : true,\r\n                            percent: Number((Number(e)/100).toFixed(2))\r\n                        })}\r\n                        name={\"abnormality\"}\r\n                    />\r\n                    </Grid>\r\n\r\n                    <Text textAlign=\"left\" placeSelf=\"end start\">\r\n                        Abnormality Calculation Threshold\r\n                    </Text>\r\n                    <Radio.Group \r\n                        style={{placeSelf: 'start', placeItems: 'start', display: 'grid'}}\r\n                    >\r\n                        <Radio  value={1} style={{fontSize:'1.2em'}}>\r\n                        Same as last year (if data exists).\r\n                        </Radio>\r\n                        <Radio  value={2} style={{fontSize:'1.2em'}}>Last 3 weeks moving average.</Radio>\r\n                        <Radio value={3} style={{fontSize:'1.2em'}}>On/after set custom date\r\n                            &nbsp; <DatePicker/>\r\n                        </Radio>\r\n                    </Radio.Group>\r\n                  \r\n            </Grid>\r\n            </Grid>\r\n\r\n    \r\n            <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\">\r\n                <Text textAlign=\"left\" placeSelf=\"end start\" bold>\r\n                    Garage Occupancy Table\r\n                    <Label label={'Occupancy table is the  manual fallback occupancy data for the garage'}/>\r\n                </Text>\r\n                <Select\r\n                    defaultValue={values.occupancyTableId as any}\r\n                    onChange={(id: string) => setFieldValue(\"occupancyTableId\", id === 'null'? null: id)}\r\n                >   \r\n                    <Select.Option value={'null'}>{\"None\"}</Select.Option>\r\n                    {tables.map(({ id, title }: GarageOccupancyTable) => <Select.Option value={id}>{title}</Select.Option>)}\r\n                </Select>\r\n            </Grid>\r\n\r\n            <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                <Text textAlign=\"left\" placeSelf=\"end start\" bold>\r\n                    Max Garage Occupancy\r\n                        <span className=\"red\">*</span>\r\n                </Text>\r\n                <InputNumber\r\n                    min={1}\r\n                    style={{ placeSelf: \"end\" }}\r\n                    value={values.maxOccupancy}\r\n                    onChange={(e) => setFieldValue(\"maxOccupancy\", e)}\r\n                    name={\"maxOccupancy\"}\r\n                />\r\n            </Grid>\r\n            {loading ? <Button loading disabled style={{ fontSize: \".8em\" }}>Loading</Button> :\r\n                <Button.Normal\r\n                    style={{ fontSize: \".8em\" }}\r\n                    type=\"submit\"\r\n                    disabled={error}\r\n                    onSubmit={(e: any) => handleSubmit(e)}>\r\n                    Finish\r\n                </Button.Normal>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default GarageInfoForm;","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Text } from \"platyplex_ui\";\r\nimport SimpleMap from './google-map';\r\nimport useGarages from '../../../hooks/garage';\r\nimport { Progress } from 'antd';\r\nimport GarageInfoForm from './garage-form';\r\n\r\nconst CreateGarage = ({ submit }: any) => {\r\n    const [count, setCount] = useState(0);\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCount(count => count + 5);\r\n        }, 300);\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (count === 90) {\r\n            submit();\r\n        }\r\n    }, [count]);\r\n\r\n    return (\r\n        <Grid\r\n            width=\"100%\"\r\n            background=\"white\"\r\n            height=\"100%\"\r\n        >\r\n            <div style={{ width: \"100%\" }}>\r\n                <Text bold>Creating your Garage</Text>\r\n                <Progress style={{ width: \"70%\" }} percent={count} />\r\n            </div>\r\n        </Grid>);\r\n}\r\nexport const GarageMultiStep = ({ close, refresh, eId, tables }: any) => {\r\n    const [state, setState] = useState({\r\n        step: 0,\r\n        completed: false\r\n    });\r\n\r\n    const { addGarage } = useGarages({ eId });\r\n\r\n    const [garage, setGarage] = useState<any>({\r\n        name: \"\",\r\n        active: false,\r\n        maxOccupancy: 0,\r\n        geo: [0, 0]\r\n    });\r\n\r\n    const setGeo = ({ lat, lng, address }: any) => {\r\n        setGarage({ ...garage, geo: [lat, lng], address });\r\n    }\r\n\r\n    const setInfo = (info: any) => {\r\n        setGarage({ ...garage, ...info });\r\n        forward()\r\n    }\r\n\r\n    const submit = async () => {\r\n        await addGarage(garage);\r\n        refresh();\r\n        close();\r\n    }\r\n    const forward = () => {\r\n        if (state.step < InputComponents.length) {\r\n            setState({ step: state.step + 1, completed: false });\r\n        }\r\n    }\r\n\r\n    const InputComponents = [\r\n        <SimpleMap forward={forward} setGeo={setGeo} />,\r\n        <GarageInfoForm submit={setInfo} tables={tables} />,\r\n        <CreateGarage submit={submit} />\r\n    ]\r\n\r\n    return (\r\n        <Grid  width=\"100%\" height=\"100%\" gridGap=\"0\">\r\n            {InputComponents[state.step]}\r\n        </Grid>);\r\n}\r\n","import React from 'react';\r\nimport { Grid } from \"platyplex_ui\";\r\nimport useGarages from '../../../hooks/garage';\r\nimport { Garage } from '../../../model/domain/garage';\r\nimport GarageInfoForm from './garage-form';\r\n\r\nexport const GarageEditor = ({ close, eId, garage, refresh, tables }: any) => {\r\n    const { editGarage, loading } = useGarages({ eId });\r\n    const submit = async (garage: Garage) => {\r\n        await editGarage(garage);\r\n        close();\r\n        refresh();\r\n    }\r\n\r\n    return (\r\n        <Grid width=\"100%\" height=\"100%\" gridGap=\"0\">\r\n            <GarageInfoForm submit={submit} tables={tables} garage={garage} loading={loading} />\r\n        </Grid>);\r\n}","import { useState, useEffect } from \"react\";\r\nimport API from \"../api\";\r\nimport { asyncHandler } from \"../utils\";\r\nimport { GarageOccupancyTable } from \"../model/domain/garage\";\r\n\r\ninterface State {\r\n    tables?: GarageOccupancyTable[] | any;\r\n    loading?: boolean;\r\n    error?: boolean;\r\n}\r\n\r\nexport const useOccupanyTable = ({ eId }: any) => {\r\n    const [state, setter] = useState<State>({\r\n        tables: [],\r\n        loading: false,\r\n        error: false,\r\n    });\r\n\r\n    const setState = (obj: State) => setter({ ...state, ...obj });\r\n\r\n    const getTables = async (eId: string) => {\r\n        setState({ loading: true, error: false });\r\n        const res = await asyncHandler({\r\n            apiCall: () => API.getOccupancyTables(eId),\r\n            errorMessage: \"Failed: Loading Table\",\r\n        });\r\n\r\n        setState({\r\n            loading: false,\r\n            tables: res?.garageOccupancyTables || [],\r\n            error: !(res?.success || true)\r\n        });\r\n    };\r\n\r\n    const addTable = async (table : any) => {\r\n        setState({ loading: true, error: false });\r\n        const res = await asyncHandler({\r\n            apiCall: () => API.addOccupancyTable(eId, table),\r\n            errorMessage: \"Could not Edit Table\",\r\n            successMessage: \"Table was Edited\",\r\n        });\r\n        let tables : GarageOccupancyTable[] = state.tables;\r\n\r\n        if(res?.success)\r\n            tables = [...state.tables, {...table, id: res.garageOccupancyTableId}];\r\n\r\n        setState({\r\n            loading: false,\r\n            tables,\r\n            error: !(res?.success || true),\r\n        });\r\n    }\r\n\r\n\r\n    const removeTable = async (tId: string) => {\r\n        setState({ loading: true, error: false });\r\n        const res = await asyncHandler({\r\n            apiCall: () => API.removeOccupancyTable(eId, tId),\r\n            errorMessage: \"Could not Delete Table\",\r\n            successMessage: \"Table was Deleted\",\r\n        });\r\n        let tables = [...state.tables];\r\n\r\n        if(res?.success)\r\n            tables = tables.filter((table : any)=> table.id !== tId)\r\n\r\n        setState({\r\n            loading: false,\r\n            tables,\r\n            error: !(res?.success || true),\r\n\r\n        });\r\n    }\r\n    const getTableById = async (id : string) =>{\r\n        return await asyncHandler({\r\n            apiCall: () => API.getOccupancyTableById(eId, id),\r\n            errorMessage: \"Failed: Loading Table\",\r\n        });\r\n    }\r\n\r\n    const editTable = async (table: GarageOccupancyTable) => {\r\n        setState({ loading: true, error: false });\r\n        const res = await asyncHandler({\r\n            apiCall: () => API.editOccupancyTable(eId, table.id, table),\r\n            errorMessage: \"Could not Edit Table\",\r\n            successMessage: \"Table was Edited\",\r\n        });\r\n        let tables : GarageOccupancyTable[] = [...state.tables];\r\n\r\n        const index = tables.reduce((acc: number, item: GarageOccupancyTable, i: number)=> table.id === item.id? i : acc, -1)\r\n\r\n        if(res?.success && index > -1){\r\n            tables[index] = table;\r\n        }\r\n           \r\n        setState({\r\n            loading: false,\r\n            tables,\r\n            error: !(res?.success || true),\r\n        });\r\n    }\r\n\r\n    useEffect(() => {getTables(eId)}, [eId]);\r\n    return {\r\n        ...state,\r\n        getTables,\r\n        removeTable,\r\n        addTable,\r\n        editTable,\r\n        getTableById\r\n    };\r\n};\r\n\r\nexport default {\r\n    useOccupanyTable\r\n};\r\n","import React from \"react\";\r\nimport { Garage } from \"../../../model/domain/garage\";\r\nimport { Grid, Button, Modal, Placeholder, List } from \"platyplex_ui\";\r\nimport useGarages from \"../../../hooks/garage\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GarageCard from \"./garage-card\";\r\nimport { GarageMultiStep } from \"./garage-add\";\r\nimport { GarageEditor } from \"./garage-edit\";\r\nimport { useOccupanyTable } from \"../../../hooks/occupancy-table\";\r\n\r\nconst Listings = () => {\r\n  const eId = useSelector((state: any) => state.user.enterprise.id);\r\n  const { garages, loading, refresh } = useGarages({ eId });\r\n  const { tables, getTableById } = useOccupanyTable({ eId });\r\n\r\n  const props = { eId, tables, refresh };\r\n\r\n  const AddModal = Modal({\r\n    title: \"Add Your Garage\",\r\n    message: <GarageMultiStep close={() => AddModal.close()} {...props} />,\r\n    hideCancel: true,\r\n  });\r\n\r\n  const edit = (garage: Garage) => {\r\n    const EditGarage = Modal({\r\n      title: \"Edit Your Garage\",\r\n      message: <GarageEditor close={() => EditGarage.close()}  {...props} garage={garage} />,\r\n      hideCancel: true,\r\n    });\r\n    EditGarage.open();\r\n  }\r\n\r\n  return (\r\n    <Grid placeItems=\"start stretch\" padding=\"1em\" height=\"100%\">\r\n      <Grid>\r\n        <div className=\"grid\" style={{ placeSelf: \"center\", width: 'auto' }}>\r\n            <Button     \r\n              margin=\"1em\"\r\n              rounded\r\n              invert\r\n              placeSelf='end'\r\n\r\n              disabled={loading}\r\n              shadow\r\n              onClick={AddModal.open}\r\n              minWidth=\"4.5em\"\r\n              faIcon=\"fa  fa-plus\"\r\n            > Add\r\n          </Button>\r\n          <List\r\n            loading={loading}\r\n            loader={<Placeholder number={5} style={{ maxWidth: \"80vw\", width: '800px' }}  /> as any}\r\n            list={garages}\r\n            map={(garage: Garage, i: number) => (\r\n            <GarageCard \r\n              key={i} \r\n              garage={garage} \r\n              edit={() => edit(garage)} \r\n              getTableById={getTableById} />\r\n            )}\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Listings;\r\n","import React, { useMemo } from 'react';\r\nimport { AxisBottom, AxisLeft, AxisRight } from '@vx/axis';\r\nimport {  ScaleBand } from 'd3-scale';\r\n\r\nexport const XAxis = ({ scale,  tickFormat, axisStyleProps}: { scale:  ScaleBand<string>, tickFormat: any, axisStyleProps: any}) => {\r\n  const width = (() => {\r\n    const range = scale.range();\r\n    return range[1] - range[0]\r\n  })();\r\n\r\n  const maxTicks =  width < 900? 5: 10;\r\n\r\n  const tickValues = useMemo(() => {\r\n    const dates = scale.domain();\r\n    \r\n    const mod = Math.floor(dates.length / maxTicks);\r\n    const tickFilter = ((_: any, index: number)=> dates.length < 10 || index % mod == 0);\r\n\r\n    return dates.filter(tickFilter);\r\n  }, [maxTicks]);\r\n\r\n  const  tickLabelProps = () => ({\r\n    fontWeight: 'bold',\r\n    fill: 'gray',\r\n    fontSize: 10,\r\n    textAnchor: 'middle'\r\n  })\r\n\r\n  return (\r\n      <AxisBottom\r\n        tickFormat={tickFormat}\r\n        tickLabelProps={tickLabelProps}\r\n        scale={scale}\r\n        tickValues={tickValues} {...axisStyleProps}\r\n        hideTicks={false}\r\n      />\r\n  );\r\n};\r\n\r\nexport const YAxisLeft = ({ scale, tickFormat, axisStyleProps }: any) => {\r\n  const tickValues = scale.ticks(10);\r\n  axisStyleProps = axisStyleProps || {};\r\n  const  tickLabelProps = () => ({\r\n    fontWeight: 'bold',\r\n    fill: 'gray',\r\n    fontSize: 11,\r\n    dx: -18,\r\n    dy: 5\r\n  })\r\n  return (\r\n      <AxisLeft\r\n        scale={scale}\r\n        tickLabelProps={tickLabelProps}\r\n        tickFormat={tickFormat}\r\n        tickValues={tickValues} \r\n        {...axisStyleProps}\r\n      />\r\n  );\r\n};\r\n\r\nexport const YAxisRight = ({ scale, tickFormat, axisStyleProps }: any) => {\r\n  const tickValues = scale.ticks(10);\r\n  const  tickLabelProps = () => ({\r\n    fontWeight: 'bold',\r\n    fill: 'gray',\r\n    fontSize: 11,\r\n    dx: 12,\r\n    dy: 5\r\n  })\r\n  return (\r\n      <AxisRight\r\n        scale={scale}\r\n        tickFormat={tickFormat}\r\n        tickLabelProps={tickLabelProps}\r\n        tickValues={tickValues} {...axisStyleProps}/>\r\n  );\r\n};\r\n\r\nexport const defaultAxisStyle = {\r\n  hideAxisLine: true,\r\n  tickStroke: 'gray',\r\n  tickLength: 6,\r\n  hideTicks: true,\r\n  hideZero: false\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useRect = ({ height, width }: { height: number; width: number; }): DrawAreaRect => {\r\n  //if axis ticks get cutoff, increase the margin of appropriate direction\r\n  const margin = {\r\n    top: 10,\r\n    right: 35,\r\n    bottom: 40,\r\n    left: 35\r\n  };\r\n\r\n  const calcRect = (width: any) =>({\r\n    width,\r\n    height,\r\n    innerWidth: width - margin.left - margin.right,\r\n    innerHeight: height - margin.top - margin.bottom,\r\n    margin,\r\n    xRange: [margin.left, width - margin.right],\r\n    yRange: [height - margin.bottom, margin.top]\r\n  })\r\n  const [ rect, setRect ] = useState(calcRect(width));\r\n  useEffect(()=>setRect(calcRect(width)), [width]);\r\n  return rect as any;\r\n}\r\n\r\n//given the height and width of the graph i.e. the drawArea + axis, computes margins\r\nexport interface DrawAreaRect {\r\n  readonly width: number;\r\n  readonly height: number;\r\n  readonly innerWidth: number;\r\n  readonly innerHeight: number;\r\n  readonly margin: {\r\n    readonly left: number;\r\n    readonly top: number;\r\n    readonly right: number;\r\n    readonly bottom: number;\r\n  }\r\n  readonly xRange: [number, number];\r\n  readonly yRange: [number, number];\r\n}","import { scaleLinear, scaleBand } from '@vx/scale';\r\nimport { DrawAreaRect } from './rect';\r\n\r\ntype Scale = { yMax: number, rect: DrawAreaRect, points: any, zoom? : number };\r\n\r\nexport const useScale = ({ rect,  points, yMax, zoom = 1.15 }: Scale) => ({\r\n  xAxis: getXBandScale({rect, points}),\r\n  yAxis: {\r\n    scale: scaleLinear({\r\n      domain: [0, zoom * yMax],\r\n      range: rect.yRange,\r\n    })\r\n  }\r\n});\r\n\r\nfunction getXBandScale({ rect, points }: { rect: DrawAreaRect, points: any }) {\r\n  const getDate = (d: any) => (new Date(d?.date || '2010')).toISOString();;\r\n  const getDates = (points: any[]) => {\r\n    const dates = []\r\n    for (let i = points.length - 1; i >= 0; i--) {\r\n      dates.push(getDate(points[i]))\r\n    }\r\n    return dates;\r\n  }\r\n\r\n  return {\r\n    scale: scaleBand<string>({\r\n      domain: getDates(points),\r\n      range: rect.xRange,\r\n      padding: 0.2,\r\n    })\r\n  }\r\n}","import { useMemo } from \"react\";\r\nimport { TimeSeries } from \"../../../model/domain/metrics\";\r\nimport logger from \"../../../utils/logger\";\r\n\r\nexport const useData = (timeSeriesResult: any) => useMemo(() => getStackedPoints(timeSeriesResult), [timeSeriesResult]);\r\n\r\nconst getStackedPoints = (timeSeriesResult: TimeSeries.Result) => {\r\n  const stackedPoints: any[] = [];\r\n  let max = 0;\r\n  let linearMax = 0;\r\n\r\n  try {\r\n    if (!timeSeriesResult) return { points: stackedPoints, max, linearMax };\r\n    const { timeSeries } = timeSeriesResult\r\n    const reference = timeSeries[0]\r\n    const numPoints = reference.points.length;\r\n    const numResource = timeSeries.length\r\n\r\n    for (let i = 0; i < numPoints; i++) {\r\n      let stackedPoint = { date: reference.points[i].at };\r\n      let totalValue = 0;\r\n\r\n      for (let j = 0; j < numResource; j++) {\r\n        const point = timeSeries[j].points[i];\r\n        const resource = timeSeries[j].displayLabel;\r\n\r\n        if (point.isMissing) {\r\n          stackedPoint[resource] = null;\r\n        } else {\r\n          totalValue += point.value;\r\n          linearMax = Math.max(linearMax, point.value)\r\n          stackedPoint[resource] = point.value;\r\n        }\r\n      }\r\n      stackedPoints.push(stackedPoint);\r\n      max = max < totalValue ? totalValue : max;\r\n    }\r\n  } catch (e) {\r\n    logger.log(e)\r\n  }\r\n  return { points: stackedPoints, max, linearMax };\r\n}\r\n\r\nexport const useCombinedData = (timeSeriesResults: TimeSeries.Result[]) => useMemo(() => {\r\n  const points: any = [];\r\n  let max = 0;\r\n  const hasError = timeSeriesResults.reduce((acc, ts: TimeSeries.Result) => !ts?.timeSeries || acc, false);\r\n  if (hasError) return { points, max };\r\n\r\n  const reference = timeSeriesResults[0].timeSeries[0]\r\n  const numPoints = reference.points.length;\r\n  const numResource = timeSeriesResults.length\r\n\r\n  const formatLabel = (s: string) => s.replace(/_/g, ' ')\r\n  for (let i = 0; i < numPoints; i++) {\r\n    let combinedPoint = { date: reference.points[i].at };\r\n\r\n    for (let j = 0; j < numResource; j++) {\r\n      const point = timeSeriesResults[j].timeSeries[0].points[i];\r\n      const resource = formatLabel(timeSeriesResults[j].metricType);\r\n\r\n      if (point.isMissing) {\r\n        combinedPoint[resource] = null;\r\n      } else {\r\n        combinedPoint[resource] = point.value;\r\n      }\r\n    }\r\n\r\n    points.push(combinedPoint);\r\n  }\r\n\r\n  return { points, max };\r\n}, [timeSeriesResults]);","import { colors } from '../json/colors.json';\r\n\r\nexport const getColor = (index: number) => colors[index % colors.length];","export const getKeys = (points: any[]) => {\r\n    if(points?.length < 1) return [];\r\n    return Object.keys(points[0]).filter(k => k !== 'date')\r\n}\r\n","import { getColor } from \"../utils/color\";\r\nimport { localPoint } from '@vx/event';\r\nimport { useTooltip } from '@vx/tooltip';\r\nimport { getKeys } from \"../utils/points\";\r\nimport {  ScaleBand } from 'd3-scale';\r\nimport { useMemo } from 'react';\r\ninterface TooltipData {\r\n    timestamp: string;\r\n    legend: { label: string, value: string, color: string }[];\r\n}\r\n\r\ninterface TooltipProps {\r\n   points: {[key: string]: string | number; date: string;}[],\r\n   setSelected? : any;\r\n   units?: string[];\r\n   xScale: ScaleBand<string>;\r\n   dateFormatter: {(d: string): string;}\r\n}\r\n/*\r\n      |                            |\r\n      |                            |\r\n      |                            |\r\n      |         |||          |||   |  \r\n      |         |||          |||   |  \r\n      |   |||   |||    |||   |||   |  \r\n      |   |||   |||    |||   |||   |  \r\n      |   |||   |||    |||   |||   |   \r\n      |   |||   |||    |||   |||   |  \r\n    ---------------------------------------------\r\n                *      *     *     *\r\n                a      b     c     d\r\n                \r\n      let x be the X position of the cursor then,\r\n      if (x <= a) {\r\n        show tooltip at middle of first bar\r\n      } else if (x <= b) {\r\n        show tooltip at middle of second bar\r\n      } else if (x <= c) {\r\n        show tooltip at middle of third bar\r\n      } else {\r\n        show tooltip at middle of last bar\r\n      }\r\n*/\r\nexport default ({points: points_, setSelected, units, xScale, dateFormatter }: TooltipProps) => {\r\n    const tooltip = useTooltip<TooltipData>();\r\n\r\n    //[tuesday, monday, sunday] -> [sunday, monday, tuesday]\r\n    //[sunday, monday, tuesday] -> [sunday, monday, tuesday]\r\n    const points = useMemo(() => {\r\n      return points_[0].date > points_[points_.length - 1].date\r\n        ? [...points_].reverse()\r\n        : points_;\r\n    }, [points_]);\r\n\r\n    /*\r\n      |                                       |\r\n      |                                       |\r\n      |                                       |\r\n      |         |||    |||   |||         |||  |  \r\n      |         |||    |||   |||         |||  |  \r\n      |   |||   |||    |||   |||   |||   |||  |  \r\n      |   |||   |||    |||   |||   |||   |||  |  \r\n      |   |||   |||    |||   |||   |||   |||  |  \r\n      |   |||   |||    |||   |||   |||   |||  |   \r\n    ---------------------------------------------\r\n          ^                                ^\r\n          |                                | \r\n        (band start)                    (band end)\r\n    */\r\n    const bandStart = xScale(points[0].date) || 0;\r\n    const bandEnd = xScale(points[points.length - 1].date) || 0 + xScale.bandwidth();\r\n\r\n    const getUnit = (i: number) => units? units[i % units.length] : '';\r\n\r\n    const getLegend = (i: number) => {\r\n        const keys = getKeys(points);\r\n        const toPercent = (n: number) => (n * 100).toFixed(2) + '%';\r\n        const toDollar = (n: number) => '$'+ (n / 100).toFixed(0) ;\r\n        const point = points[i] || {};\r\n\r\n        return keys.map((label: string, index: number) => {\r\n            let value = point[label] as any;\r\n            const isMissing = value == null;\r\n            const unit = getUnit(index);\r\n            value = unit === '%'\r\n              ? toPercent(value)\r\n              : unit === 'cents'\r\n              ? toDollar(value)\r\n              : value + ''; \r\n\r\n            return { label, value, color: getColor(index), isMissing }\r\n        })\r\n    }\r\n\r\n    //offsetting local point x, y so as to have `bandStart` as effective start\r\n    //helps calculation below.\r\n    const graphLocal = (event: any) => {\r\n      const { x, y } = localPoint(event) || { x: 0, y: 0};\r\n\r\n      return { x: x - bandStart, y };\r\n    }\r\n\r\n    return {\r\n        ...tooltip,\r\n        handleTooltip: (event: any, newSelected = -1) => {\r\n          let { x, y } = graphLocal(event) || {};\r\n          setSelected(newSelected);\r\n          \r\n          const i = x > bandEnd\r\n            ? points.length - 1\r\n            : x < 0\r\n            ? 0\r\n            : Math.floor(x! / xScale.step());\r\n\r\n          /*\r\n              |                                       |\r\n              |                                       |\r\n              |                                       |\r\n              |         |||    |||   |||         |||  |  \r\n              |         |||    |||   |||         |||  |  \r\n              |   |||   |||    |||   |||   |||   |||  |  \r\n              |   |||   |||    |||   |||   |||   |||  |  \r\n              |   |||   |||    |||   |||   |||   |||  |  \r\n              |   |||   |||    |||   |||   |||   |||  |   \r\n            ---------------------------------------------\r\n                                *\r\n                                ^\r\n                                |\r\n                                iX for i = 2 (mid point of the third bar line)\r\n          */\r\n          const iX = bandStart + i * xScale.step() + xScale.bandwidth() / 2;          \r\n\r\n          const timestamp = xScale.domain()[i];\r\n\r\n            //const i = bisect(timestamp);\r\n            const legend = getLegend(i);\r\n\r\n            // try replacing iX with x + bandStart, and if thats\r\n            // better then replce this\r\n            tooltip.showTooltip({\r\n                tooltipData: { timestamp: dateFormatter(timestamp), legend },\r\n                tooltipLeft: iX,\r\n                tooltipTop: y,\r\n            });\r\n\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport { TooltipWithBounds } from '@vx/tooltip';\r\nimport { Text, Grid } from 'platyplex_ui';\r\nimport { primaryColor } from '../../../config';\r\nimport { Line } from '@vx/shape';\r\n\r\nconst Tooltip = ({ tooltipOpen, tooltipLeft, tooltipTop, tooltipData, isSelected}: any) => {\r\n    if (!tooltipOpen && !tooltipData) return null;\r\n\r\n    return (\r\n        <TooltipWithBounds top={tooltipTop} left={tooltipLeft}>\r\n            <Grid placeItems=\"start\" customRows=\"auto 1fr\" gridGap=\".4em\" style={{zIndex: 10000}}>\r\n                <Text>{tooltipData.timestamp}</Text>\r\n                {tooltipData.legend\r\n                    .map(({ color, label, value, isMissing }: any, index: number) => (\r\n                        isMissing || value === '-1'? null :\r\n                            <div key={index} style={{ padding: 2, fontWeight: isSelected && isSelected(index)? 'bold': 'normal' }}>\r\n                                <span className='round' style={{ background: color }}></span>&nbsp;\r\n                                <span className='capitalize'><span dangerouslySetInnerHTML={{__html : label}}/>: &nbsp;{value}</span>\r\n                            </div>\r\n                    ))}\r\n            </Grid>\r\n        </TooltipWithBounds>\r\n    );\r\n}\r\n\r\nTooltip.Custom = ({ top, left, children}: any) => {\r\n    return (\r\n        <TooltipWithBounds top={top} left={left}>\r\n            {children}\r\n        </TooltipWithBounds>\r\n    );\r\n}\r\n\r\n\r\nTooltip.Line = ({ tooltipData, height, tooltipLeft: x }: any) => {\r\n    if (!tooltipData) return null;\r\n    return (\r\n        <g>\r\n            <Line\r\n                from={{ x, y: 0 }}\r\n                to={{ x, y: height }}\r\n                stroke={primaryColor}\r\n                strokeWidth={2}\r\n                pointerEvents=\"none\"\r\n                strokeDasharray=\"5,\"\r\n            />\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default Tooltip;","import { TimeSeries } from \"../../model/domain/metrics\";\r\nimport {  ScaleLinear, ScaleBand } from 'd3-scale';\r\nimport { MetricDataStatus } from \"../../hooks/metrics\";\r\nimport { LineChart } from \"../../model/domain/dashboard\";\r\n\r\nexport enum Charts {\r\n    stackedArea = \"stackedArea\",\r\n    multiLine = \"multiLine\",\r\n    stackedBar = \"stackedBar\",\r\n    combined = \"combined\"\r\n}\r\n\r\nexport interface AdditionalChartProps {\r\n    filter?: boolean | React.ReactElement | null;\r\n    filterWidth?: number;\r\n    metricDataStatus: MetricDataStatus;\r\n    className?: string;\r\n    loading? : boolean;\r\n    legend?: false | { label : string};\r\n    isPercent?: boolean;\r\n    download? : string;\r\n    eId?: string; \r\n    inChartLegend? : boolean;\r\n    queries?: any; \r\n    chartTypes?: Charts[] | string[];\r\n}\r\n\r\nexport interface AdditionalMultiChartProps {\r\n  filter?: boolean | React.ReactElement | null;\r\n  filterWidth?: number;\r\n  loading? : boolean;\r\n  fixedAlignment: string;\r\n  metricDataStatuses: MetricDataStatus[];\r\n  className?: string;\r\n  inChartLegend? : boolean; \r\n  download? : string;\r\n  queries?: any;\r\n  eId?: string; \r\n  legend?:  false | { label : string };\r\n}\r\n\r\nexport type ChartProps = AdditionalChartProps & LineChart;\r\nexport type MultiMetricsChartProps = AdditionalMultiChartProps & LineChart;\r\n\r\nexport interface DrawAreaProps {\r\n  size: { height: number, width: number };\r\n  data: {\r\n    timeSeriesResult: TimeSeries.Result;\r\n  };\r\n  inChartLegend?: boolean;\r\n  chartType: Charts | string;\r\n}\r\n\r\nexport interface MultiDrawAreaProps {\r\n  size: { height: number, width: number };\r\n  fixedAlignment: string;\r\n  datas: {\r\n    timeSeriesResult: TimeSeries.Result;\r\n  } [];\r\n  chartType: Charts | string;\r\n  inChartLegend?: boolean;\r\n}\r\n\r\ntype EventHandler = (e :React.SyntheticEvent) => void;\r\n\r\nexport interface GraphEvent {\r\n    onTouchStart : EventHandler;\r\n    onTouchMove : EventHandler;\r\n    onMouseMove : EventHandler;\r\n    onMouseLeave : EventHandler;\r\n};\r\n\r\nexport type Graph = {\r\n    yScale: ScaleLinear<number, number>;\r\n    isSelected?: (i : number) => boolean;\r\n    noneSelected?: boolean;\r\n    points: any;\r\n    xScale: ScaleBand<string>;\r\n    event? : (i: number ) => GraphEvent\r\n};\r\n\r\nexport interface Points {\r\n  [key: string]: string | number;\r\n  date: string;\r\n};\r\n\r\nexport type CombinedGraph = Graph & { y2Scale: ScaleLinear<number, number>; points2: any }","import React from 'react'\r\nimport { GridRows } from '@vx/grid';\r\nconst accentColor = \"lightgray\";\r\n\r\nexport default function Grid({ yScale, width }: any) {\r\n    return <></>;\r\n    return (\r\n        <GridRows<any>\r\n            scale={yScale}\r\n            width={width}\r\n            stroke={accentColor}\r\n            strokeOpacity={0.5}\r\n            pointerEvents=\"none\"\r\n        />\r\n    );\r\n}","import React, { useEffect } from 'react'\r\nimport { LinePath } from '@vx/shape';\r\nimport { getColor } from '../../utils/color';\r\nimport { Graph } from '../../types';\r\nimport { getKeys } from '../../utils/points';\r\n\r\nexport default function MultiLine({ points, isSelected, event, xScale, yScale }: Graph) {\r\n  const keys = getKeys(points);\r\n  const linePathX = (d: any) => xScale(d.date)! + xScale.bandwidth() / 2 || 0;\r\n  const linePathY = (d: any, key: string) => yScale(d[key]);\r\n  const reducer = (datum: any): boolean => datum !== null;\r\n\r\n  return (\r\n    <>\r\n      {points.map((data: any) => {\r\n        const left = linePathX(data);\r\n        return keys.map((key, i) => {\r\n          const top = yScale(data[key]);\r\n          if (data[key] == null) return null;\r\n          return (\r\n            <g key={`circle-${i}`}>\r\n              <circle\r\n                r={7 - points.length / 40}\r\n                cx={left}\r\n                cy={top}\r\n                {...(event ? event(i) : {})}\r\n                stroke={isSelected && isSelected(i) ? getColor(i) : ''}\r\n                fill={getColor(i) + (isSelected && isSelected(i)? '66' : 'BB')}\r\n              />\r\n            </g>\r\n          );\r\n        })\r\n\r\n      })}\r\n\r\n      {keys?.map((key, index) => (\r\n        <LinePath\r\n          x={linePathX}\r\n          y={(d) => linePathY(d, key)}\r\n          {...(event ? event(index) : {})}\r\n          data={points}\r\n          key={index}\r\n          defined={(d: any) => reducer(d[key])}\r\n          strokeWidth={isSelected && isSelected(index) ? 4 : 2}\r\n          stroke={getColor(index)}\r\n        />\r\n      )\r\n      )}\r\n    </>);\r\n}","import React from 'react'\r\nimport { AreaStack } from '@vx/shape';\r\nimport { getColor } from '../../utils/color';\r\nimport { Graph } from '../../types';\r\nimport { getKeys } from '../../utils/points';\r\n\r\n\r\nexport function StackedArea({ xScale, yScale, points, isSelected, noneSelected, event}: Graph) {\r\n  const keys = getKeys(points);\r\n  const reducer = (datum: any): boolean =>  datum.data;\r\n  const getY = (d: any, index: number) => d[index];\r\n  const getAreaStackX = (d: any) => xScale(d.data.date)!;\r\n  \r\n  return (\r\n    <AreaStack\r\n      keys={keys}\r\n      data={points}\r\n      defined={reducer}\r\n      x={getAreaStackX}\r\n      y0={d => yScale(getY(d, 0))}\r\n      y1={d => yScale(getY(d, 1))}\r\n    >\r\n      {({ stacks, path }) =>\r\n        stacks.map((stack, index) => {\r\n          const opacity = isSelected && isSelected(index)? '70' : noneSelected ? '50': '25';\r\n          const color = getColor(index) + opacity;\r\n            return (\r\n            <path\r\n              key={`stack-${index}`}\r\n              d={path(stack) || ''}\r\n              stroke={color}\r\n              strokeWidth={2}\r\n              {...event && event(index)}\r\n              fill={color}\r\n            />\r\n          )\r\n        })\r\n      }\r\n    </AreaStack>);\r\n}\r\n\r\nexport default StackedArea;","import React from 'react'\r\nimport { BarStack, AreaStack } from '@vx/shape';\r\nimport { scaleOrdinal } from '@vx/scale';\r\nimport { colors } from '../../json/colors.json';\r\nimport { Group } from '@vx/group';\r\nimport { getColor } from '../../utils/color';\r\nimport { Graph } from '../../types';\r\nimport { getKeys } from '../../utils/points';\r\n\r\nexport function StackedBar({ yScale, points, xScale, event, isSelected, noneSelected }: Graph) {\r\n  const keys = getKeys(points);\r\n  const getDate = (d: any) => (new Date(d?.date)).toISOString();\r\n\r\n  const colorScale = scaleOrdinal<string, string>({\r\n    domain: keys,\r\n    range: colors,\r\n  });\r\n\r\n  const reducer = (datum: any): boolean => datum.data;\r\n  const getY = (d: any, index: number) => d[index];\r\n  const getAreaStackX = (d: any) => xScale(d.data.date)!;\r\n\r\n  return (\r\n    <Group >\r\n      <BarStack<any, string>\r\n        keys={keys}\r\n        data={points}\r\n        xScale={xScale}\r\n        yScale={yScale}\r\n        color={colorScale}\r\n        x={getDate}\r\n      >\r\n        {barStacks => {\r\n          return barStacks.map(barStack => {\r\n            const index = barStack.index;\r\n            return barStack.bars.map((bar) => {\r\n              if (bar.bar.data[bar.key] == null) return null;\r\n              return (\r\n                <rect\r\n                  key={`bar-stack-${barStack.index}-${bar.index}`}\r\n                  x={bar.x}\r\n                  y={bar.y}\r\n                  opacity={noneSelected || (isSelected && isSelected(barStack.index))? 0.7 : 0.3}\r\n                  height={bar.height}\r\n                  width={bar.width}\r\n                  fill={getColor(index)}\r\n                />\r\n              )\r\n            })\r\n          })\r\n        }\r\n      }\r\n      </BarStack>\r\n\r\n      <AreaStack\r\n        keys={keys}\r\n        data={points}\r\n        defined={reducer}\r\n        x={getAreaStackX}\r\n        y0={d => yScale(getY(d, 0))}\r\n        y1={d => yScale(getY(d, 1))}\r\n      >\r\n        {({ stacks, path }) => stacks.map((stack, index) =>  (\r\n              <path\r\n                key={`stack-${index}`}\r\n                d={path(stack) || ''}\r\n                opacity={0}\r\n                {...event && event(index)}\r\n              />\r\n            )\r\n          )}\r\n      </AreaStack>\r\n    </Group>);\r\n};\r\n\r\nexport default StackedBar;","import React from 'react'\r\nimport { BarStack, LinePath } from '@vx/shape';\r\nimport { getColor } from '../../utils/color';\r\nimport { CombinedGraph } from '../../types';\r\nimport { scaleOrdinal } from '@vx/scale';\r\nimport { colors } from '../../json/colors.json';\r\nimport { Group } from '@vx/group';\r\nimport { getKeys } from '../../utils/points';\r\n\r\nexport function Combined({ y2Scale, yScale, points, points2, xScale , event}: CombinedGraph) {\r\n  const colorScale = scaleOrdinal<string, string>({\r\n    domain: getKeys(points),\r\n    range: colors,\r\n  });\r\n  const getBarStackX = (d: any) => (new Date(d?.date)).toISOString();\r\n  const keyLine = getKeys(points2)[0] || '';\r\n  const getLineY = (d: any) => y2Scale(d[keyLine]);\r\n  const getLineX = (d: any) => xScale(d.date)! + xScale.bandwidth() / 2;\r\n  const lineReducer = (datum: any): boolean => datum != null;\r\n\r\n  return (\r\n    <>\r\n      <Group >\r\n        <BarStack<any, string>\r\n          keys={getKeys(points)}\r\n          data={points}\r\n          xScale={xScale}\r\n          yScale={yScale}\r\n          color={colorScale}\r\n          x={getBarStackX}\r\n        >\r\n          {barStacks =>\r\n            barStacks.map(barStack => {\r\n              const index = barStack.index;\r\n              return barStack.bars.map((bar) => {\r\n                if (bar.bar.data[bar.key] == null) return null;\r\n                return (\r\n                  <rect\r\n                    key={`bar-stack-${barStack.index}-${bar.index}`}\r\n                    x={bar.x}\r\n                    y={bar.y}\r\n                    {...(event && event(-1))}\r\n                    opacity={0.6}\r\n                    height={bar.height}\r\n                    width={bar.width}\r\n                    fill={getColor(index)}\r\n                  />\r\n                )\r\n              })\r\n            }\r\n            )}\r\n        </BarStack>\r\n      </Group>\r\n\r\n      <LinePath<any>\r\n        x={getLineX}\r\n        y={getLineY}\r\n        data={points2}\r\n        defined={(d: any) => lineReducer(d[keyLine])}\r\n        strokeWidth={3}\r\n        {...(event && event(-1))}\r\n        stroke={getColor(1) + 'A0'}\r\n      />\r\n\r\n      {points2.map((d: any, i: number) => {\r\n        const left = getLineX(d);\r\n        const top = getLineY(d);\r\n        if(d[keyLine] == null) return null;\r\n        return (\r\n          <g key={`circle-${i}`}>\r\n            <circle\r\n              r={7 - points2.length/40}\r\n              cx={left}\r\n              cy={top}\r\n              fill={getColor(1) +  'BB'}\r\n            />\r\n          </g>\r\n        );\r\n      })}\r\n    </>);\r\n}\r\n\r\nexport default Combined;","import React from 'react';\r\nimport { Charts } from \"../types\";\r\nimport MultiLine from \"../components/graph/multi-line\";\r\nimport StackedArea from \"../components/graph/stacked-area\";\r\nimport StackedBar from \"../components/graph/stacked-bar\";\r\nimport Combined from '../components/graph/combined';\r\n\r\nexport const getChart = (chart:Charts | string, props: any) => {\r\n    switch (chart) {\r\n      case Charts.multiLine:\r\n        return <MultiLine {...props} />;\r\n  \r\n      case Charts.stackedArea:\r\n        return <StackedArea {...props} />;\r\n  \r\n      case Charts.stackedBar:\r\n        return <StackedBar {...props} />;\r\n      case Charts.combined:\r\n        return <Combined {...props}/>;\r\n      default:\r\n        return \"Error\";\r\n    }\r\n  }","import React, { useState } from 'react'\r\nimport { XAxis, YAxisLeft, YAxisRight, defaultAxisStyle } from '../axis';\r\nimport { useRect } from '../../hooks/rect';\r\nimport { useScale } from '../../hooks/scale';\r\nimport { useData, useCombinedData } from '../../hooks/data';\r\nimport useToolTip from '../../hooks/tooltip';\r\nimport Tooltip from '../tooltip';\r\nimport { DrawAreaProps, Graph, MultiDrawAreaProps, CombinedGraph, Charts } from '../../types';\r\nimport Grid from '../grid';\r\nimport { getChart } from '../../utils/chart';\r\nimport { TimeSeries } from '../../../../model/domain/metrics';\r\nimport { moment, getTimezone } from '../../../../utils/time';\r\nimport { LegendOrdinal } from '@vx/legend';\r\nimport { scaleOrdinal } from \"@vx/scale\";\r\nimport { colors } from '../../json/colors.json';\r\nimport { getKeys } from '../../utils/points';\r\n\r\nconst DrawArea = (props: DrawAreaProps) => {\r\n  const { size, chartType, data } = props;\r\n  const { timeSeriesResult } = data as any;\r\n  const { height, width } = size;\r\n  const rect = useRect({ height, width });\r\n  const { max, points, linearMax } = useData(timeSeriesResult);\r\n  const [selected, setSelected] = useState(-1);\r\n  const isSelected = (index: number) => selected === index;\r\n\r\n  const { xAxis, yAxis } = useScale({ rect: rect, yMax: chartType === Charts.multiLine ? linearMax : max, points });\r\n  const tickFormatY = getYTickFormatter(timeSeriesResult);\r\n  const tickFormatX = getXTickFormatter(timeSeriesResult);\r\n  const tooltipFormatter = getTooltipDateFormatter(timeSeriesResult);\r\n\r\n  const { tooltipData, hideTooltip, handleTooltip, tooltipLeft, tooltipTop, tooltipOpen } = useToolTip({\r\n    points,\r\n    setSelected,\r\n    units: [timeSeriesResult.unit],\r\n    xScale: xAxis.scale,\r\n    dateFormatter: tooltipFormatter\r\n  });\r\n\r\n  const event = (index = -1) => ({\r\n    onTouchStart: (e: any) => handleTooltip(e, index),\r\n    onTouchMove: (e: any) => handleTooltip(e, index),\r\n    onMouseMove: (e: any) => handleTooltip(e, index),\r\n    onMouseLeave: () => {\r\n      setSelected(-1);\r\n      hideTooltip();\r\n    }\r\n  })\r\n\r\n  const chartProps: Graph = {\r\n    yScale: yAxis.scale,\r\n    points,\r\n    xScale: xAxis.scale,\r\n    isSelected,\r\n    noneSelected: selected === -1,\r\n    event\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: height + 'px', width: '100%', position: 'relative' }}>\r\n        <SVG height={height} width={'100%'} {...event(-1)}>\r\n          <Tooltip.Line\r\n            height={height}\r\n            tooltipData={tooltipData}\r\n            tooltipLeft={tooltipLeft}\r\n          />\r\n\r\n          <g transform={`translate(0,${rect.height - rect.margin.bottom})`}>\r\n            <XAxis\r\n              scale={xAxis.scale}\r\n              tickFormat={tickFormatX}\r\n              axisStyleProps={defaultAxisStyle} />\r\n          </g>\r\n\r\n          <g transform={`translate(${rect.margin.left},0)`}>\r\n            <Grid yScale={yAxis.scale} width={rect.innerWidth} />\r\n            <YAxisLeft\r\n              scale={yAxis.scale}\r\n              tickFormat={tickFormatY}\r\n              axisStyleProps={defaultAxisStyle} />\r\n          </g>\r\n          {/*always have this below the <Grid />*/}\r\n          {getChart(chartType, chartProps)}\r\n\r\n        </SVG>\r\n        <Tooltip\r\n          tooltipOpen={tooltipOpen}\r\n          tooltipLeft={tooltipLeft}\r\n          tooltipTop={tooltipTop}\r\n          tooltipData={tooltipData}\r\n          isSelected={isSelected}\r\n          noneSelected={selected === -1}\r\n        />\r\n      </div>\r\n      {props.inChartLegend &&\r\n        <LegendOrdinal\r\n          scale={scaleOrdinal({\r\n            range: colors,\r\n            domain: getKeys(points)\r\n          })\r\n          }\r\n          style={{\r\n            fontSize: '13px',\r\n            display: 'grid',\r\n            textTransform: 'capitalize',\r\n            placeItems: 'center',\r\n            gridTemplateColumns: `repeat(${getKeys(points).length}, 1fr)`\r\n          }}\r\n          shape='circle'\r\n          labelMargin=\"0 15px 0 0\"\r\n        />\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nconst MultiDrawArea = (props: MultiDrawAreaProps) => {\r\n  const { size, chartType, datas } = props;\r\n  const [{ timeSeriesResult }, { timeSeriesResult: timeSeriesResult2 }] = datas;\r\n  const { height, width } = size;\r\n  const rect = useRect({ height, width });\r\n  const data1 = useData(timeSeriesResult);\r\n  const data2 = useData(timeSeriesResult2);\r\n  const dataComb = useCombinedData([timeSeriesResult, timeSeriesResult2]);\r\n\r\n  const { xAxis, yAxis } = useScale({\r\n    rect,\r\n    yMax: data1.max,\r\n    points: data1.points\r\n  });\r\n\r\n  const { yAxis: y2Axis } = useScale({\r\n    rect,\r\n    yMax: data2.max,\r\n    points: data2.points\r\n  });\r\n\r\n  const tickFormatYLeft = getYTickFormatter(timeSeriesResult);\r\n  const tickFormatYRight = getYTickFormatter(timeSeriesResult2);\r\n  const tickFormatX = getXTickFormatter({...timeSeriesResult2, ...props.fixedAlignment? {alignmentPeriod: props.fixedAlignment} : {}} as any);\r\n  const tooltipFormatter = getTooltipDateFormatter(timeSeriesResult);\r\n\r\n  const { tooltipData, hideTooltip, handleTooltip, tooltipLeft, tooltipTop, tooltipOpen } = useToolTip({\r\n    points: dataComb.points,\r\n    units: [timeSeriesResult.unit, ''],\r\n    setSelected: () => { },\r\n    xScale: xAxis.scale,\r\n    dateFormatter: tooltipFormatter\r\n  });\r\n\r\n\r\n  const event = (index = -1) => ({\r\n    onTouchStart: (e: any) => handleTooltip(e, index),\r\n    onTouchMove: (e: any) => handleTooltip(e, index),\r\n    onMouseMove: (e: any) => handleTooltip(e, index),\r\n    onMouseLeave: () => hideTooltip()\r\n  });\r\n  const chartProps: CombinedGraph = {\r\n    yScale: yAxis.scale,\r\n    points: data1.points,\r\n    points2: data2.points,\r\n    y2Scale: y2Axis.scale,\r\n    xScale: xAxis.scale,\r\n    event\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: height + 'px', width: '100%', position: 'relative' }}>\r\n        <SVG height={height} width={'100%'} {...event(-1)}>\r\n          <Tooltip.Line\r\n            height={height}\r\n            tooltipData={tooltipData}\r\n            tooltipLeft={tooltipLeft} />\r\n\r\n          <g transform={`translate(0,${rect.height - rect.margin.bottom})`}>\r\n            <XAxis\r\n              scale={xAxis.scale}\r\n              tickFormat={tickFormatX}\r\n              axisStyleProps={defaultAxisStyle} />\r\n          </g>\r\n\r\n          <g transform={`translate(${rect.margin.left},0)`}>\r\n            <Grid yScale={yAxis.scale} width={rect.innerWidth} />\r\n            <YAxisLeft\r\n              scale={yAxis.scale}\r\n              tickFormat={tickFormatYLeft}\r\n              axisStyleProps={defaultAxisStyle} />\r\n          </g>\r\n\r\n          <g transform={`translate(${rect.width - rect.margin.right},0)`}>\r\n            <YAxisRight\r\n              scale={y2Axis.scale}\r\n              tickFormat={tickFormatYRight}\r\n              axisStyleProps={defaultAxisStyle} />\r\n          </g>\r\n\r\n          {/*always have this below the <Grid />*/}\r\n          {getChart(chartType, chartProps)}\r\n\r\n        </SVG>\r\n        <Tooltip\r\n          tooltipOpen={tooltipOpen}\r\n          tooltipLeft={tooltipLeft}\r\n          tooltipTop={tooltipTop}\r\n          tooltipData={tooltipData} />\r\n      </div>\r\n      {props.inChartLegend &&\r\n        <LegendOrdinal\r\n          scale={scaleOrdinal({\r\n            range: colors,\r\n            domain: getKeys(dataComb.points)\r\n          })\r\n          }\r\n          style={{\r\n            fontSize: '13px',\r\n            display: 'grid',\r\n            placeItems: 'center',\r\n            textTransform: 'capitalize',\r\n            gridTemplateColumns: `repeat(${getKeys(dataComb.points).length}, 1fr)`\r\n          }}\r\n          shape='circle'\r\n          labelMargin=\"0 15px 0 0\"\r\n        />\r\n      }\r\n    </>\r\n  );\r\n}\r\ninterface SVGProps {\r\n  height: number | string,\r\n  width: number | string,\r\n  children: any,\r\n  onTouchStart: { (e: React.SyntheticEvent): void };\r\n  onTouchMove: { (e: React.SyntheticEvent): void };\r\n  onMouseMove: { (e: React.SyntheticEvent): void };\r\n  onMouseLeave: { (e: React.SyntheticEvent): void };\r\n}\r\n\r\nconst SVG = (o: SVGProps) => (\r\n  <svg width={o.width} height={o.height}>\r\n    <rect\r\n      x={0}\r\n      y={0}\r\n      width={o.width}\r\n      height={o.height}\r\n      fill={'transparent'}\r\n      onTouchStart={o.onTouchStart}\r\n      onTouchMove={o.onTouchMove}\r\n      onMouseMove={o.onMouseMove}\r\n      onMouseLeave={o.onMouseLeave} />\r\n    {o.children}\r\n  </svg>\r\n);\r\n\r\nDrawArea.Multi = MultiDrawArea;\r\nexport default DrawArea;\r\n\r\nfunction getYTickFormatter(ts: TimeSeries.Result) {\r\n  const identity = (n: any) => n % 1 != 0? null: n;\r\n  const centsFormatter = (n: number) => '$' + (n / 100).toFixed(0);\r\n  const percentFormatter = (n: number) => (n * 100).toFixed(1) + '%';\r\n\r\n  return ts.unit === '%'\r\n    ? percentFormatter\r\n    : ts.unit === 'cents'\r\n      ? centsFormatter\r\n      : identity;\r\n}\r\n\r\n/*\r\n  How TimeSeries Dates should be interpreted:\r\n\r\n  Data points are returned in descending order w.r.t \r\n  `at` field in time series points i.e. data at position 0 is\r\n  greater than data at position 1. Say following 2 successive data points:\r\n\r\n  [\r\n    { at: x, value: v1 isMissing: false },\r\n    { at: y, value: v2, isMissing: false }\r\n  ]\r\n\r\n  then,\r\n  \r\n  x is always greater than y.\r\n\r\n  Moreover, every time series result has `alignmentPeriod` field,\r\n  and according to that, successive data points differ w.r.t `at` field.\r\n\r\n  Following table shows the difference between x and y field for various\r\n  alignmentPeriods.\r\n\r\n  alignmentPeriod  |   x - y\r\n  =============================\r\n      1h           |   1 hours\r\n      1d           |   1 day\r\n      1w           |   1 week\r\n      1m           |   1 month\r\n\r\n  Another thing is that, the value associated with a\r\n  time series point whose `at` field is t1, is some aggregation of data points\r\n  that was collected between (t1, t2], and t2 - t1 is the alignmentPeriod.\r\n\r\n  Thus, for above, v1 is the aggregation of data points between x and y i.e. \r\n  including x but not y.\r\n\r\n  Similarly, v2 is the aggregation of data points between y and z i.e. including\r\n  y and not z; and y - z is the alignment period.\r\n\r\n  This brings to the point of how it affects label. \r\n\r\n  Say our alignmentPeriod was 1w, and the data points were marked at following:\r\n  [ \r\n    { at: 2020-01-14T00:00:00Z, value: v1, isMissing: false },\r\n    { at: 2020-01-07T00:00:00Z, value: v2, isMissing: false }\r\n  ]\r\n\r\n  then v1 is the accumulation of data between (07T00, 14T00].\r\n\r\n  What that means is, datapoints between Jan 7 00:01 AM and Jan 14 00:00 AM\r\n  are being considered. So, infact what we ought to show in the user friendly\r\n  label is not Jan 7 to Jan 14 but rather Jan 7 to Jan 13.\r\n\r\n  So, the display label math turns out to be [d - 1 - 1 week, d - 1].\r\n  \r\n  We do this math for 1m, 1w and 1d. Others aren't necessary, since the\r\n  time difference is already very small\r\n\r\n*/\r\n\r\nconst minusOneDay = (d: string) => moment(d).add(-1, 'day').toISOString();\r\n\r\nconst getXTickFormatter = (() => {\r\n  const f = (date: string, formatter: string) => moment.tz(date, getTimezone()).format(formatter);\r\n\r\n  const map: { [key in TimeSeries.AlignmentPeriod]: { (d: string): string } } = {\r\n    '1m': (d: string) => f(minusOneDay(d), 'MMM'),\r\n    '1w': (d: string) => {\r\n      d = minusOneDay(d);\r\n      const d0 = moment(d).subtract(6, 'day').toISOString();\r\n      return `${f(d0, 'MMM DD')} - ${f(d, 'MMM DD')}`;\r\n    },\r\n    '1d': (d: string) => {\r\n      d = minusOneDay(d);\r\n      return moment.tz(d, getTimezone()).get('month') === 0 ? f(d, 'MMM, YYYY') : f(d, 'MMM DD');\r\n    },\r\n    '4h': (d: string) => f(d, 'MMM DD'),\r\n    '1h': (d: string) => f(d, 'MMM DD h A'),\r\n    '30m': (d: string) => f(d, 'ddd h A'),\r\n    '5m': (d: string) => f(d, 'h:mm A')\r\n  };\r\n\r\n  const defaultFormatter = map['30m'];\r\n\r\n  return (ts: TimeSeries.Result) => {\r\n    return map[ts.alignmentPeriod] || defaultFormatter;\r\n  }\r\n})();\r\n\r\nconst getTooltipDateFormatter = (() => {\r\n  const f = (date: string, formatter: string) => moment.tz(date, getTimezone()).format(formatter);\r\n\r\n  const map: { [key in TimeSeries.AlignmentPeriod]: { (d: string): string } } = {\r\n    '1m': (d: string) => f(minusOneDay(d), 'MMM, YYYY'),\r\n    '1w': (d: string) => {\r\n      d = minusOneDay(d);\r\n      const d0 = moment(d).subtract(6, 'day').toISOString();\r\n      return `${f(d0, 'MMM DD, YYYY')} - ${f(d, 'MMM DD, YYYY')}`;\r\n    },\r\n    '1d': (d: string) => f(minusOneDay(d), 'MMM DD, YYYY'),\r\n    '4h': (d: string) => f(d, 'MMM DD, YYYY, ddd h A'),\r\n    '1h': (d: string) => f(d, 'MMM DD, YYYY, ddd h A'),\r\n    '30m': (d: string) => f(d, 'MMM DD, ddd h A'),\r\n    '5m': (d: string) => f(d, 'MMM DD, h:mm A')\r\n  };\r\n\r\n  const defaultFormatter = map['30m'];\r\n\r\n  return (ts: TimeSeries.Result) => {\r\n    return map[ts.alignmentPeriod] || defaultFormatter;\r\n  }\r\n})();","import React from \"react\";\r\nimport { Card } from 'platyplex_ui';\r\nimport { Table } from \"antd\";\r\nimport { getColor } from \"../utils/color\";\r\nimport { getKeys } from \"../utils/points\";\r\n\r\nexport default ({ points, legend }: { points: any, legend?: { label: string } }) => {\r\n  const tableProps = {\r\n    loading: points && points.length > 0 ? false : true,\r\n    style: { width: '100%' },\r\n    dataSource: getKeys(points).map((key: string, i: number) => ({ label: key, key: i, color: getColor(i) })),\r\n    columns: [\r\n      {\r\n        title: legend?.label,\r\n        dataIndex: 'label',\r\n        key: 'label',\r\n        render: (item: string) => <span className='capitalize'>{item}</span>\r\n      },\r\n      {\r\n        title: 'Color',\r\n        dataIndex: 'color',\r\n        key: 'color',\r\n        render: (color: string) => <span className='round' style={{ background: color }}></span>\r\n      }\r\n    ]\r\n  }\r\n\r\n  if (!legend) return null;\r\n  return (\r\n    <Card shadow width=\"100%\" >\r\n      <Table\r\n        pagination={false}\r\n        {...tableProps}\r\n      />\r\n    </Card>\r\n  )\r\n};","import { useState, useRef, useEffect } from \"react\";\r\n\r\nexport const useResize = ({ filterWidth } : { filterWidth?: number}) =>{\r\n    const [width, setWidth] = useState(300);\r\n    const container = useRef<any>(null);\r\n    const resize = () => setWidth(container?.current?.clientWidth);\r\n    useEffect(resize, [container?.current?.clientWidth, filterWidth]);\r\n    useEffect(() => {\r\n      window?.addEventListener(\"resize\", resize);\r\n      return () => window.removeEventListener(\"resize\", resize);\r\n    }, []);\r\n  \r\n    return {\r\n       container,\r\n       width\r\n    };\r\n  };","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport { primaryColor } from \"../../config\";\r\nimport { sizeStyle, fontStyle } from \"../generator\";\r\nimport { designStyle, elementProps } from \"../generator\";\r\nimport { Loader } from \"platyplex_ui\";\r\nimport { Tooltip } from \"antd\";\r\n\r\nconst Bt = styled.button<{ props: any; fontProps: any }>`\r\n  ${(props: any) => designStyle(props)}\r\n  ${(props) => sizeStyle(props)}\r\n  ${(fontProps) => fontStyle(fontProps, false)}\r\n  ${({ bg, invert, disabled, color, noBorder, noHover }: any) => `\r\n  background:  ${bg || primaryColor};\r\n  border: 2px solid ${noBorder ? 'white' : bg || primaryColor};\r\n  color : ${ bg ? \"white\" : color || \"white\"};\r\n  cursor: pointer;\r\n  box-shadow: 0 3px 1px -2px rgba(0,0,0,0.2), 0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12);\r\n  ${invert ? `background: white; color: ${primaryColor};` : ''}\r\n  ${bg && invert ? `background: white; color: ${bg !== \"white\" ? bg : primaryColor};` : ''}\r\n  ${!disabled ? `\r\n    &:hover {\r\n      ${!noHover ? `\r\n        border-color: ${bg || primaryColor};\r\n        background: ${!invert ? color || \"white\" : bg || primaryColor};\r\n        color: ${bg ? (invert ? \"white\" : bg) : !invert ? primaryColor : color || \"white\"};` : ''}\r\n      box-shadow: 0 0 0 0;\r\n      transform: scale(0.99);\r\n      transition: 350ms ease-out;\r\n  }`\r\n      : \"background: #F0F3F4; border-color: #F0F3F4; color: darkgray;\"\r\n    }\r\n\r\n&:focus{\r\n    outline:0;\r\n}`}`;\r\n\r\nexport const Button = (props: any) => {\r\n  let {\r\n    onSubmit,\r\n    children,\r\n    margin = '0.15em',\r\n    padding = '0.3em 0.4em',\r\n    minWidth = '6.5em',\r\n    disabled,\r\n    loading = false,\r\n    noHover = false,\r\n    tooltip\r\n  } = props;\r\n\r\n\r\n  const { color, size, bold, textAlign, placeSelf, textShadow, noBorder = false, faIcon } = props;\r\n  const fontProps = { color, size, bold, textAlign, placeSelf, textShadow };\r\n\r\n  props = { ...props, ...{ margin, padding, minWidth, noHover } }\r\n\r\n  return (\r\n    <Tooltip title={tooltip}>\r\n    <Bt\r\n      type={props.type || \"submit\"}\r\n      {...props}\r\n      fontProps={fontProps}\r\n      disabled={disabled}\r\n      onSubmit={onSubmit}\r\n      {...elementProps(props)}\r\n    >\r\n      {loading && (\r\n        <>\r\n          <Loader.Spinner size={4} />\r\n          &nbsp;\r\n        </>\r\n      )}\r\n      {faIcon && <i className={faIcon}></i>}\r\n      {children}\r\n    </Bt>\r\n    </Tooltip>\r\n  );\r\n};\r\nButton.Normal = styled.button`\r\n  padding: 0.3rem;\r\n  color: white;\r\n  cursor: pointer;\r\n  background: ${primaryColor};\r\n  border: 0.15em solid ${primaryColor};\r\n  border-radius: 0.25em;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.25), 0 3px 3px rgba(0, 0, 0, 0.22);\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n  ${(props) =>\r\n    !props.disabled\r\n      ? `&:hover {\r\n    background: white;\r\n    color: ${primaryColor};\r\n    box-shadow: 0 0 0 0;\r\n    transform: scale(0.99);\r\n    transition: 350ms ease-out;\r\n}`\r\n      : \"background: #F0F3F4; border-color: #F0F3F4; color: darkgray; box-shadow: 0 0 0 !important;\"}\r\n`;\r\nexport default Button;\r\n","\r\nimport { primaryTxtColor,   mobileWidth } from '../config';\r\nimport { Ref } from 'react';\r\n\r\nexport interface GridStyle {\r\n    cols? : number | string | undefined;\r\n    rows? : number | string;\r\n    customCols? : string;\r\n    customRows? : string;\r\n    gridGap? : number | string;\r\n    mobileCols? : string;\r\n    mobileLayout? : boolean;\r\n    placeItems? : string, \r\n    hideOnMobile? : boolean,\r\n};\r\n\r\nexport const gridStyle = ({ cols, customCols, customRows, gridGap, mobileCols, mobileLayout, placeItems, hideOnMobile }: GridStyle)=>`\r\n    display: grid;\r\n    grid-gap: ${gridGap || '1em'} ;\r\n    grid-template-columns: repeat(${cols ? cols : \"1\"}, 1fr);\r\n    ${customCols? `grid-template-columns: ${customCols};`: ``}\r\n    ${customRows? `grid-template-rows: ${customRows};` : ``}\r\n    place-items: center;\r\n    ${placeItems? `place-items: ${placeItems};` : ``}\r\n    @media(max-width: ${mobileWidth}){\r\n        ${hideOnMobile? `display: none; !important` : ''}\r\n        ${mobileLayout !== false?  `grid-template-columns: 1fr;` : ``}\r\n        ${mobileCols? `grid-template-columns: ${mobileCols};` : ``}  \r\n    }\r\n`;\r\n\r\n\r\nexport interface FontStyle {\r\n    size? : number | string | undefined;\r\n    color? : string;\r\n    bold? :boolean;\r\n    textAlign? :  number | string;\r\n    placeSelf? : string,\r\n    textShadow? : string,\r\n};\r\n\r\nexport const fontStyle = ({ color, size, bold, textAlign,  placeSelf, textShadow } : FontStyle | any, darkMode : boolean)=>`\r\n    text-align: ${textAlign || 'center'};\r\n    ${`color : ${color || primaryTxtColor}`};\r\n    font-size: ${size || '1em'};\r\n    ${textShadow? `text-shadow: 1.2px 1.2px 2px black;` : \"\"}\r\n    font-weight: ${bold ? `bolder` : 'normal'};\r\n    ${placeSelf? `place-self: ${placeSelf};` : ''}`;\r\n\r\nexport interface SizeStyle {\r\n    width? : number | string | undefined;\r\n    height? : number | string;\r\n    max? : boolean;\r\n    padding? :  number | string;\r\n    margin? :  number | string,\r\n    minWidth? :  number | string,\r\n};\r\n\r\nexport const sizeStyle = ({width, height, max, padding, margin, minWidth} : any)=>`\r\n    width: ${width || \"auto\"};\r\n    min-width : ${minWidth || \"auto\"};\r\n    height: ${height || \"auto\"};\r\n    margin: ${margin || \"0\"} ;\r\n    padding: ${padding || \"0\"};\r\n\r\n`;\r\n\r\nexport interface DesignStyle {\r\n    shadow? : boolean;\r\n    rounded? : boolean;\r\n    bg? : string;\r\n    background? : string;\r\n    cursor? :  string;\r\n    hideOnMobile? : boolean,\r\n};\r\n\r\nexport const designStyle = ({shadow, rounded, bg, background, hideOnMobile, cursor} : DesignStyle)=>`\r\n    ${shadow? `box-shadow: 0 .25em .5em rgba(0,0,0,.5);` : \"\"}\r\n    pointer : ${cursor? 'cursor': 'default'};\r\n    transition: 200ms ease-out;\r\n    border-radius: ${rounded? '1.2em' : `.25em`};\r\n    border: 0px;\r\n    ${background?  `background: ${background};` : \"\"}\r\n    background-repeat: no-repeat;\r\n    @media(max-width: ${mobileWidth}){\r\n        ${hideOnMobile? `display: none;` : ''}\r\n    }\r\n`;\r\n\r\nexport interface ElementProps {\r\n    className? : string;\r\n    onClick?: ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined;\r\n    style?: React.CSSProperties;\r\n    ref? : Ref<any>\r\n};\r\n\r\n\r\nexport const elementProps = (props: ElementProps | any) => {\r\n    const {style, className, onClick, ref}  = props;\r\n    const property = {...style? { style }: {}, ...className? {className} : {}, ...onClick? {onClick} : {}, ...ref? ref: {}};\r\n    return property;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Header, Grid, Notification } from 'platyplex_ui';\r\nimport { primaryColor } from \"../../../config\";\r\nimport { overflow } from \"../../../utils/text\";\r\nimport { Charts } from \"../types\";\r\nimport charts from '../json/charts.json'\r\nimport api from \"../../../api\";\r\nimport logger from \"../../../utils/logger\";\r\nimport { Button } from \"../../../style\";\r\n\r\nconst ChartHeader = ({\r\n  chartType,\r\n  chartTypes,\r\n  setChartType,\r\n  title, filter,\r\n  isPercent,\r\n  loading = false,\r\n  download,\r\n  eId,\r\n  queries\r\n}: any) => {\r\n  const [link, setLink] = useState('')\r\n\r\n\r\n  useEffect(() => {\r\n    if (eId && download && queries) {\r\n      const ts = Object.keys(queries)\r\n        .reduce((acc, key, i) => acc + `${i > 0 ? '&' : ''}${key}=${JSON.stringify(queries[key])}`, '')\r\n      api.downloadCSv(eId, download, ts)\r\n        .then((res: any) => {\r\n          if (res.success) {\r\n            setLink(res.csvExportUrl)\r\n          }\r\n        })\r\n        .catch((e) => logger.log(e))\r\n    }\r\n  }, [eId, queries])\r\n\r\n  return (\r\n    <Header\r\n      className=\"grid\"\r\n      color={primaryColor}\r\n      style={{\r\n        gridColumn: \"1/-1\",\r\n        width: \"100%\",\r\n        gridTemplateColumns: \"1fr auto auto\",\r\n        placeItems: \"start \",\r\n      }}\r\n      bold\r\n      size={4}\r\n    >\r\n      <Grid mobileLayout={false} customCols=\"auto 1fr auto\" gridGap=\".5em\" padding=\".2em .5em\"\r\n        width={'100%'}\r\n        style={{\r\n          placeItems: 'start',\r\n          borderRadius: \"1em\",\r\n          textTransform: \"capitalize\",\r\n          placeSelf: \"start\",\r\n        }}\r\n      >\r\n        <Header bold size={3.75} textAlign='left'>{overflow(title, 25)}</Header>\r\n        <div style={{ placeSelf: \"end\" }}>\r\n          {download && <Button\r\n            invert\r\n            minWidth=\"3em\"\r\n            margin='0 1em'\r\n            noBorder={true}\r\n            onClick={() => {\r\n              window.open(link)\r\n              Notification.success({ title: 'Success', message: 'Exporting Data to Excel' })\r\n            }}\r\n            faIcon={'fas fa-file-download'}\r\n            tooltip='Download the current data on Excel'\r\n          />}\r\n\r\n          {chartTypes?.length > 1 &&\r\n            charts.map(({ key, faIcon, label }) => (\r\n              chartTypes && <span key={key}>{chartTypes.includes(key) &&\r\n                <Button\r\n                  invert={chartType !== key}\r\n                  minWidth=\"3em\"\r\n                  disabled={loading || (isPercent && key !== Charts.multiLine)}\r\n                  noBorder={chartType !== key}\r\n                  onClick={() => setChartType(key as Charts)}\r\n                  faIcon={faIcon}\r\n                  tooltip={label}\r\n                />}\r\n              </span>\r\n            ))\r\n          }\r\n        </div>\r\n        {filter}\r\n      </Grid>\r\n    </Header>\r\n  )\r\n};\r\nexport default ChartHeader;","import React from \"react\";\r\nimport {Header, Loader } from 'platyplex_ui';\r\nconst Loading = ({ style }: any) => (\r\n    <div className=\"grid\" style={style}>\r\n      <div>\r\n        <Loader.Spinner />\r\n        <Header bold>Loading..</Header>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\nexport default Loading;","import React, { CSSProperties, useEffect, useState } from \"react\";\r\nimport { Card, Empty as EmptyEl } from 'platyplex_ui'\r\nimport Graph from \"./components/graph\";\r\nimport LegendTable from \"./components/legend-table\";\r\nimport { Charts, ChartProps, MultiMetricsChartProps } from \"./types\";\r\nimport { useResize } from \"./hooks/resize\";\r\nimport ChartHeader from \"./components/header\";\r\nimport Loader from './components/loading';\r\nimport { useChartType } from \"./hooks/chart-type\";\r\nimport { useData, useCombinedData } from \"./hooks/data\";\r\n\r\nconst d100: CSSProperties = { height: '100%', width: '100%', textAlign: 'center', marginTop: \"1em\" };\r\nconst height = 400;\r\n\r\nconst Chart = ({ filter, loading, download, eId,  queries, metricDataStatus, legend, filterWidth, title, isPercent, chartTypes = [Charts.stackedBar], inChartLegend }: ChartProps) => {\r\n  const { chartType, setChartType } = useChartType({ chartTypes, isPercent })\r\n  const { container, width } = useResize({ filterWidth });\r\n  const { points } = useData(metricDataStatus.data?.timeSeriesResult);\r\n  return (\r\n    <>\r\n      <Card\r\n        placeSelf=\"stretch\"\r\n        shadow\r\n        grid\r\n        customCols={\"1fr\"}\r\n        gridGap={\"0 1em\"}\r\n        className=\"slide-up noselect\"\r\n      >\r\n        <ChartHeader\r\n          chartType={chartType}\r\n          chartTypes={chartTypes}\r\n          setChartType={setChartType}\r\n          title={title}\r\n          loading={loading}\r\n          isPercent={isPercent}\r\n          filter={filter}\r\n          download={download}\r\n          eId={eId}\r\n          queries={ queries}\r\n        />\r\n        <div style={{ width: \"100%\", marginTop: \"1em\" }} ref={container}>\r\n          {metricDataStatus?.loading\r\n            ? <Loader style={{ ...d100, height }} />\r\n            : metricDataStatus?.error || !metricDataStatus?.data!?.timeSeriesResult\r\n              ? <EmptyEl text=\"Error Occured\" style={{ ...d100, height }} />\r\n              : <Graph\r\n                  inChartLegend={inChartLegend}\r\n                  chartType={chartType}\r\n                  size={{ height, width }}\r\n                  data={metricDataStatus.data as any}\r\n                />\r\n          }\r\n        </div>\r\n      </Card>\r\n      <LegendTable\r\n        legend={legend ? legend : undefined}\r\n        points={points}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst MultiMetricsChart = ({ filter, metricDataStatuses, legend, filterWidth, title, inChartLegend, fixedAlignment, download, eId, queries}: MultiMetricsChartProps) => {\r\n  const { container, width } = useResize({ filterWidth });\r\n  const isLoading = metricDataStatuses.reduce((acc, curr) => acc || curr.loading, false);\r\n  const hasError = metricDataStatuses.reduce((acc, curr) => acc || curr.error || !curr?.data?.timeSeriesResult, false);\r\n  const datas = metricDataStatuses.map(({ data }) => data);\r\n  const timeSeries = metricDataStatuses.map(({ data }) => data?.timeSeriesResult)\r\n  const { points } = useCombinedData(timeSeries as any);\r\n  return (\r\n    <>\r\n      <Card\r\n        placeSelf=\"stretch\"\r\n        shadow\r\n        grid\r\n        customCols={\"1fr auto\"}\r\n        gridGap={\"0 1em\"}\r\n        className=\"slide-up noselect\"\r\n      >\r\n        <ChartHeader\r\n          title={title}\r\n          filter={filter}\r\n          download={download}\r\n          eId={eId}\r\n          queries={queries}\r\n        />\r\n        <div style={{ width: \"100%\", marginTop: \"1em\" }} ref={container}>\r\n          {isLoading\r\n            ? <Loader style={{ ...d100, height }} />\r\n            : hasError\r\n              ? <EmptyEl text=\"Error Occured\" style={{ ...d100, height }} />\r\n              :\r\n              <Graph.Multi\r\n                fixedAlignment={fixedAlignment}\r\n                inChartLegend={inChartLegend}\r\n                chartType={Charts.combined}\r\n                size={{ height, width }}\r\n                datas={datas as any}\r\n              />\r\n          }\r\n        </div>\r\n      </Card>\r\n      <LegendTable\r\n        legend={legend ? legend : undefined}\r\n        points={points}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nChart.Multi = MultiMetricsChart\r\nexport default Chart;","import { useState, useEffect } from \"react\";\r\nimport { Charts } from \"../types\";\r\n\r\nexport const useChartType = ({ chartTypes, isPercent}: any) =>{\r\n    const [chartType, setChartType] = useState<Charts>(chartTypes[0] || Charts.stackedBar);\r\n    useEffect(() => {\r\n      if (isPercent)\r\n        setChartType(Charts.multiLine)\r\n    }, [isPercent]);\r\n\r\n    return { chartType, setChartType };\r\n  }; ","import { useReducer } from \"react\";\r\nimport { TimeSeries } from \"../model/domain/metrics\";\r\nimport { moment, defaultInterval } from '../utils/time';\r\n\r\nexport const defaultTimeSeries: TimeSeries.Query = {\r\n  metricType: \"garage_occupancy_count\",\r\n  resourceIds: [],\r\n  crossSeriesReducer: \"NONE\",\r\n  interval: defaultInterval()\r\n};\r\n\r\nconst defaultDayFilter: TimeSeries.DayFilterQuery = {\r\n  days: [true, true, true, true, true, true, true],\r\n  hours: [8, 18]\r\n}\r\n\r\nexport enum actions {\r\n  SET_GARAGES,\r\n  SET_ALIGNMENT,\r\n  SET_METRICTYPE,\r\n  SET_INTERVAL,\r\n  REFRESH,\r\n  SET_DAY_FILTER\r\n};\r\n\r\nexport function reducer(state: TimeSeries.Query, action: any) {\r\n  const { startTime: start, endTime: end } = state.interval;\r\n  const setTimeseries = (props: any) => ({ ...state, ...props });\r\n\r\n  const getInterval = (props: any) => {\r\n    let { startTime = start, endTime = end } = props;\r\n    startTime = moment(startTime);\r\n    endTime = moment(endTime);\r\n    const shouldSwap = startTime > endTime;\r\n    return {\r\n      startTime: (shouldSwap ? endTime : startTime).toISOString(),\r\n      endTime: (shouldSwap ? startTime : endTime).toISOString()\r\n    };\r\n  };\r\n\r\n  switch (action.type) {\r\n    case actions.SET_METRICTYPE:\r\n      return setTimeseries({ metricType: action.payload.metricType });\r\n\r\n    case actions.SET_GARAGES:\r\n      return setTimeseries({ resourceIds: action.payload.resourceIds });\r\n\r\n    case actions.SET_INTERVAL:\r\n      return setTimeseries({ interval: getInterval(action.payload.interval) });\r\n\r\n    case actions.SET_ALIGNMENT:\r\n      const alignment = action.payload || null;\r\n      return setTimeseries({ alignment });\r\n\r\n    case actions.SET_DAY_FILTER:\r\n      const dayFilter = !action.payload ? null : validateDayFilter({ ...state.dayFilter, ...action.payload });\r\n      return setTimeseries({ dayFilter });\r\n\r\n    case actions.REFRESH:\r\n      return action.payload\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nconst validateDayFilter = (dayFilter: TimeSeries.DayFilterQuery) => {\r\n  const { hours: [start, end] } = dayFilter;\r\n\r\n  if (end === 0) {\r\n    dayFilter = { ...dayFilter, hours: [start, 24] }\r\n  }\r\n\r\n  if (start === 24) {\r\n    dayFilter = { ...dayFilter, hours: [0, end] }\r\n  }\r\n\r\n  if (dayFilter.hours[0] > dayFilter.hours[1]) {\r\n    dayFilter = { ...dayFilter, hours: [end, start] }\r\n  }\r\n\r\n  return dayFilter;\r\n}\r\nconst useTimeseries = (initialState = defaultTimeSeries) => {\r\n  const [timeseries, dispatch] = useReducer(reducer, initialState);\r\n  const setGarages = (resourceIds: string[]) => dispatch({ type: actions.SET_GARAGES, payload: { resourceIds } });\r\n\r\n  const setMetric = (metricType: string) => dispatch({ type: actions.SET_METRICTYPE, payload: { metricType } });\r\n  const setAlignment = (e: any) => dispatch({ type: actions.SET_ALIGNMENT, payload: e });\r\n  const setDayFilter = (e = defaultDayFilter) => dispatch({ type: actions.SET_DAY_FILTER, payload: e })\r\n  const setInterval = (interval: any) => dispatch({ type: actions.SET_INTERVAL, payload: { interval } })\r\n  const refresh = (timeseries: any) => dispatch({ type: actions.REFRESH, payload: timeseries })\r\n  return {\r\n    timeseries,\r\n    actions: {\r\n      setGarages,\r\n      setAlignment,\r\n      setMetric,\r\n      setInterval,\r\n      setDayFilter,\r\n      refresh\r\n    }\r\n  }\r\n}\r\n\r\nexport default useTimeseries;","import { useState, useEffect } from \"react\";\r\nimport API from \"../api\";\r\nimport { TimeSeries } from \"../model/domain/metrics\";\r\nimport { moment, Moment, defaultInterval } from '../utils/time';\r\nimport logger from \"../utils/logger\";\r\n\r\nexport interface MetricDataStatus {\r\n  error: boolean;\r\n  loading: boolean;\r\n  data: {\r\n    timeSeriesResult: TimeSeries.Result | null;\r\n    metricDescriptor: TimeSeries.MetricDescriptor;\r\n  } | null;\r\n}\r\n\r\nexport const useMetricData = ({ timeseries, interval = defaultInterval(), eId }: any) => {\r\n  const [state, setState] = useState<TimeSeries.Query>({ interval, ...timeseries, });\r\n  const {\r\n    interval: { startTime, endTime },\r\n  } = state;\r\n  \r\n  const [metricDataStatus, setMetricDataStatus] = useState<MetricDataStatus>({\r\n    error: false,\r\n    loading: false,\r\n    data: null,\r\n  });\r\n\r\n  const setInterval = (interval: any) => setState({ ...state, interval });\r\n\r\n  const setEndTime = (newEndtime: Moment | null) => {\r\n    if (newEndtime) {\r\n      setState({\r\n        ...state,\r\n        interval: getInterval(moment(startTime), newEndtime)\r\n      });\r\n    }\r\n  };\r\n\r\n  const setStartTime = (newStartTime: Moment | null) => {\r\n    if (newStartTime) {\r\n      setState({\r\n        ...state,\r\n        interval: getInterval(newStartTime, moment(endTime)),\r\n      });\r\n    }\r\n  };\r\n\r\n  const getInterval = (start: Moment, end: Moment) => {\r\n    const shouldSwap = start > end;\r\n    return {\r\n      startTime: (shouldSwap ? end : start).toISOString(),\r\n      endTime: (shouldSwap ? start : end).toISOString()\r\n    };\r\n  };\r\n\r\n  const getMetricData = async (query: TimeSeries.Query) => {\r\n    try {\r\n      setMetricDataStatus({ data: null, loading: true, error: false });\r\n      const res = await Promise.all(\r\n        [API.getTimeSeries(eId, query), API.getTimeSeriesMetricDescriptor(eId, query.metricType)]);\r\n      const [{ timeSeriesResult }, { metricDescriptor }] = res;\r\n      setMetricDataStatus({\r\n        loading: false,\r\n        error: false,\r\n        data: {\r\n          timeSeriesResult,\r\n          metricDescriptor\r\n        }\r\n      });\r\n    } catch (e) {\r\n      logger.log(e)\r\n      setMetricDataStatus({\r\n        loading: false,\r\n        error: true,\r\n        data: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => { getMetricData({ ...state }) }, [state]);\r\n  return {\r\n    metricDataStatus,\r\n    interval: state.interval,\r\n    setEndTime,\r\n    setMetricDataStatus,\r\n    setStartTime,\r\n    timeseries: state,\r\n    setInterval,\r\n    refresh: (d: any) => {\r\n      const query = { ...{ interval: state.interval }, ...d };\r\n      setState(query)\r\n    }\r\n  };\r\n};\r\n\r\nexport default { useMetricData };","import React, { useState, useEffect } from 'react';\r\nimport { Header, Card, Text, Button, Grid } from 'platyplex_ui';\r\nimport { DatePicker, TimePicker, Divider, Select } from \"antd\";\r\nimport { moment, Moment, FORMAT_TIME } from '../utils/time';\r\nimport { Garage } from '../model/domain/garage';\r\nimport Label from './label';\r\nimport { TimeSeries } from '../model/domain/metrics';\r\n\r\nconst Filter = ({ \r\n    open, \r\n    toggle, \r\n    filterWidth, \r\n    loading: loadingTimeSeries, \r\n    submit, \r\n    reset, \r\n    actions, \r\n    timeseries, \r\n    options, \r\n    hideTimeSelection }: any) => {\r\n    const { timeframes, aggregations, metrics, resources } = options;\r\n    const [custom, setCustom] = useState(false);\r\n    const [timeframeLabel, setTimeframeLabel] = useState('')\r\n    const disabledDate = (cur: Moment | null) => cur ? cur > moment() : false;\r\n\r\n    const style = { height: \"calc(100% - 4em)\", width: filterWidth, position: \"fixed\", zIndex: 5, top: '4em', right: 0 };\r\n    const props = { style: { width: '100%' }, disabled: loadingTimeSeries };\r\n    const dividerStyle = { marginBottom: '.5em', fontSize: '.95em', color: 'gray' }\r\n    const gridProps = hideTimeSelection ? { customCols: '1fr', gridGap: 0, maxHeight: '100%' } : { cols: 2, gridGap: '0 1em' };\r\n    const reverse = {\r\n        points: ['bl', 'tl'], // align dropdown bottom-left to top-left of input element\r\n        offset: [0, -4], // align offset\r\n        overflow: {\r\n            adjustX: 0,\r\n            adjustY: 0, // do not auto flip in y-axis\r\n        },\r\n    }\r\n\r\n    const handlePresetChange = (e: any) => {\r\n        if (e.value === null) {\r\n            setCustom(true);\r\n            setTimeframeLabel('Custom');\r\n        }\r\n        else {\r\n            setCustom(false);\r\n            actions.setInterval(e.value);\r\n        }\r\n    }\r\n\r\n    useEffect(() => setTimeframeLabel(getDefaultTimeframe(timeframes, timeseries.interval)), [timeseries])\r\n\r\n    if (!open) return null;\r\n    return (\r\n        <Card grid shadow style={style} margin=\"0\" placeItems=\"stretch\" gridGap='0' className='slide-in'>\r\n            <Header textAlign=\"left\" className=\"slide-up\">\r\n                <i className=\"fa fa-times pointer\" onClick={() => toggle()}></i>\r\n                <span className=\"pad\">Filters</span>\r\n            </Header>\r\n            {timeframes && <div>\r\n                <Divider style={dividerStyle}>Timeframe </Divider>\r\n                <div className=\"slide-up\">\r\n\r\n                    <Text textAlign=\"left\" bold>Presets\r\n                     <Label label={'Interval for the graph data'} />\r\n                    </Text>\r\n                    <Select\r\n                        onChange={(e: any) => handlePresetChange(JSON.parse(e))}\r\n                        {...props}\r\n                        value={timeframeLabel}\r\n                    >\r\n                        {timeframes.map(({ label, enteries }: any) => (\r\n                            <Select.OptGroup label={label}>\r\n                                {enteries.map((entry: any) => (\r\n                                    <Select.Option value={JSON.stringify(entry)}>\r\n                                        {entry.label}\r\n                                    </Select.Option>)\r\n                                )}\r\n                            </Select.OptGroup>))}\r\n                    </Select>\r\n                </div>\r\n\r\n                <div className=\"slide-up\" style={{ marginTop: '1em' }}>\r\n                    <Text textAlign=\"left\" bold>From</Text>\r\n                    <Grid {...gridProps} mobileLayout={false}>\r\n                        <DatePicker\r\n                            disabled={!custom}\r\n                            clearIcon={false}\r\n                            disabledDate={disabledDate}\r\n                            style={{ borderRadius: 8, width: '100%' }}\r\n                            onChange={(startTime) => actions.setInterval({ startTime })}\r\n                            value={moment(timeseries.interval.startTime)}\r\n                        />\r\n                        {!hideTimeSelection && <TimePicker\r\n                            disabled={!custom}\r\n                            clearIcon={false}\r\n                            disabledDate={disabledDate}\r\n                            use12Hours\r\n                            format={FORMAT_TIME}\r\n                            minuteStep={15}\r\n                            style={{ borderRadius: 8, width: '100%' }}\r\n                            onChange={(startTime) => actions.setInterval({ startTime })}\r\n                            value={moment(timeseries.interval.startTime)}\r\n                        />}\r\n                    </Grid>\r\n                </div>\r\n\r\n                <div className=\"slide-up\" style={{ marginTop: '1em' }}>\r\n                    <Text textAlign=\"left\" bold>\r\n                        To\r\n                     </Text>\r\n                    <Grid  {...gridProps} gridGap='0 1em' mobileLayout={false}>\r\n                        <DatePicker\r\n                            clearIcon={false}\r\n                            disabled={!custom}\r\n                            disabledDate={disabledDate}\r\n                            style={{ borderRadius: 8, width: '100%' }}\r\n                            onChange={(endTime) => actions.setInterval({ endTime })}\r\n                            value={moment(timeseries.interval.endTime)}\r\n                        />\r\n\r\n                        {!hideTimeSelection && <TimePicker\r\n                            disabledDate={disabledDate}\r\n                            use12Hours\r\n                            clearIcon={false}\r\n                            format={FORMAT_TIME}\r\n                            disabled={!custom}\r\n                            style={{ borderRadius: 8, width: '100%' }}\r\n                            onChange={(endTime) => actions.setInterval({ endTime })}\r\n                            value={moment(timeseries.interval.endTime)}\r\n                        />}\r\n                    </Grid>\r\n                </div>\r\n            </div>}\r\n            {metrics && <div className=\"slide-up\">\r\n                <Divider style={dividerStyle}>Metric</Divider>\r\n                <Text bold textAlign=\"left\">Select Measurement\r\n                <Label label={'Metric Type'} />\r\n                </Text>\r\n                <Select\r\n                    {...props}\r\n                    placeholder=\"Select\"\r\n                    value={timeseries.metricType}\r\n                    onChange={actions.setMetric}\r\n                >\r\n                    {metrics.map(({ label, value }: any) => (\r\n                        <Select.Option\r\n                            className='capitalize'\r\n                            value={value}\r\n                        >\r\n                            {label}\r\n                        </Select.Option>))\r\n                    }\r\n                </Select>\r\n            </div>}\r\n\r\n            {resources && <div className=\"slide-up\">\r\n                <Divider style={dividerStyle}>Resources</Divider>\r\n                <Text bold textAlign=\"left\">Select Garages</Text>\r\n                <Select\r\n                    {...props}\r\n                    mode=\"multiple\"\r\n                    placeholder=\"All Garages\"\r\n                    value={timeseries.resourceIds}\r\n                    onChange={actions.setGarages}\r\n                >\r\n                    {resources.map(({ name, id }: Garage) => <Select.Option value={id}>{name}</Select.Option>)}\r\n                </Select>\r\n            </div>}\r\n\r\n            {aggregations && <div className=\"slide-up\">\r\n                <Divider style={dividerStyle}>Aggregation</Divider>\r\n                <Text bold textAlign=\"left\">{aggregations.label}\r\n                    <Label label={'Time period for the data(Min/Max) to be aggregated'} />\r\n                </Text>\r\n                <Select\r\n                    onChange={(e: any) => {\r\n                        const parsedValue = JSON.parse(e);\r\n                        actions.setDayFilter(parsedValue.timeSelection ? undefined : null);\r\n                        actions.setAlignment(parsedValue.value)\r\n                    }}\r\n                    {...props}\r\n                    value={getAlignment(timeseries.alignment, timeseries.dayFilter)}\r\n                    defaultValue={\"None\"}\r\n                    dropdownAlign={reverse}\r\n                >\r\n                    {aggregations.values.map((props: any) => <Select.Option value={JSON.stringify(props)}>\r\n                        {props.label}\r\n                    </Select.Option>)}\r\n                </Select>\r\n            </div>}\r\n\r\n            {timeseries?.dayFilter &&\r\n                <div className=\"slide-up\">\r\n                    <Text bold textAlign=\"left\">{aggregations.label}\r\n                        <Label label={'Time period for the data(Min/Max) to be aggregated'} />\r\n                    </Text>\r\n                    <Grid  {...gridProps} gridGap='0 1em' mobileLayout={false}>\r\n                        <TimePicker\r\n                            use12Hours\r\n                            clearIcon={false}\r\n                            format={FORMAT_TIME}\r\n                            showMinute={false}\r\n                            style={{ borderRadius: 8, width: '100%' }}\r\n                            onChange={(e) => actions.setDayFilter({ hours: [e?.hour(), timeseries.dayFilter.hours[1]] })}\r\n                            value={moment()\r\n                                .set('hour', timeseries.dayFilter.hours[0])\r\n                                .set('minute', 0)}\r\n                            dropdownAlign={reverse}\r\n                        />\r\n\r\n                        <TimePicker\r\n                            use12Hours\r\n                            clearIcon={false}\r\n                            showMinute={false}\r\n                            format={FORMAT_TIME}\r\n                            style={{ borderRadius: 8, width: '100%' }}\r\n                            onChange={(e) => actions.setDayFilter({ hours: [timeseries.dayFilter.hours[0], e?.hour()] })}\r\n                            value={moment()\r\n                                .set('hour', timeseries.dayFilter.hours[1])\r\n                                .set('minute', 0)\r\n                            }\r\n                            dropdownAlign={reverse}\r\n                        />\r\n\r\n                        <Text\r\n                            bold\r\n                            textAlign=\"right\"\r\n                            style={{ gridColumn: '1/-1' }}\r\n                            width='100%'\r\n                        >\r\n                            {`${timeseries.dayFilter.hours[1] - timeseries.dayFilter.hours[0]} hours`}\r\n                        </Text>\r\n                    </Grid>\r\n                </div>}\r\n\r\n            <Grid cols={reset ? 2 : 1} placeItems='stretch' placeSelf='end stretch'>\r\n                <Button\r\n                    shadow\r\n                    onClick={submit}\r\n                    disabled={loadingTimeSeries}\r\n                >\r\n                    Submit\r\n                </Button>\r\n                {reset && <Button\r\n                    onClick={reset}\r\n                    disabled={loadingTimeSeries}\r\n                    noBorder\r\n                    invert\r\n                    shadow\r\n                >\r\n                    Reset\r\n                </Button>}\r\n            </Grid>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst getAlignment = (alignment: { alignmentReducer: string, alignmentPeriod: string } | null, dayFilter: TimeSeries.DayFilterQuery) => {\r\n    if (!alignment) return 'None';\r\n\r\n    const period = !dayFilter ? 'Daily' : 'Hourly';\r\n    const reducer = alignment.alignmentReducer === 'MIN' ? 'Min' : 'Max';\r\n    return `${period} ${reducer}`;\r\n}\r\n\r\nconst getDefaultTimeframe = (timeframes: any, interval: any) => {\r\n    if (!timeframes?.startTime || !interval?.startTime || interval?.endTime || !timeframes?.endTime) return;\r\n    const equals = (t1: any, t2: any) => t1.startTime === t2.startTime && t1.endTime === t2.endTime\r\n    const intoInterval = ({ startTime, endTime }: any) => ({\r\n        startTime: typeof startTime === 'string' ? startTime : startTime.toISOString(),\r\n        endTime: typeof endTime === 'string' ? endTime : endTime.toISOString()\r\n    })\r\n\r\n    for (let i = 0; i < timeframes.length; i++) {\r\n        const enteries = timeframes[i].enteries;\r\n        for (let j = 0; j < enteries.length; j++) {\r\n            const timeframe = enteries[j]\r\n            if (timeframe?.value && equals(intoInterval(timeframe.value), intoInterval(interval))) {\r\n                return timeframe.label\r\n            }\r\n        }\r\n    }\r\n    for (let i = 0; i < timeframes.length; i++) {\r\n        const enteries = timeframes[i].enteries;\r\n        for (let j = 0; j < enteries.length; j++) {\r\n            const timeframe = enteries[j]\r\n            if (timeframe.defaultValue)\r\n                return timeframe.label;\r\n        }\r\n    }\r\n    return 'None';\r\n}\r\n\r\nexport default Filter;","import { defaultInterval, yearToDate, getInterval } from \"../../../utils/time\";\r\n\r\nconst json = {\r\n   \"timeframes\": [\r\n      {\r\n         \"label\": \"Custom\",\r\n         \"enteries\": [\r\n            {\r\n               \"value\": null,\r\n               \"label\": \"Custom\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"label\": \"To-Date\",\r\n         \"enteries\": [\r\n            {\r\n               \"value\": defaultInterval(),\r\n               \"label\": \"Today\",\r\n               \"defaultValue\": true\r\n            },\r\n            {\r\n               \"value\": yearToDate(),\r\n               \"label\": \"Year To Date\"\r\n            },\r\n         ]\r\n      },\r\n      {\r\n         \"label\": \"Interval\",\r\n         \"enteries\": [\r\n            {\r\n               \"value\": getInterval(7),\r\n               \"label\": \"Last 1 Week\"\r\n            },\r\n            {\r\n               \"value\": getInterval(30),\r\n               \"label\": \"Last 1 Month\"\r\n            },\r\n            {\r\n               \"value\": getInterval(90),\r\n               \"label\": \"Last 3 Months\"\r\n            },\r\n            {\r\n               \"value\": getInterval(365),\r\n               \"label\": \"Last 1 Year\"\r\n            },\r\n         ]\r\n      }\r\n   ],\r\n   \"aggregations\":  {\r\n      \"label\": \"Max/Min Occupancy Selection\",\r\n      \"values\": [\r\n      {\r\n         \"value\": null,\r\n         \"label\": \"None\"\r\n      },\r\n      {\r\n         \"label\": \"Hourly Max\",\r\n         \"timeSelection\" : true,\r\n         \"value\": {\r\n            \"alignmentReducer\": \"MAX\",\r\n            \"alignmentPeriod\": \"1d\"\r\n         }\r\n      },\r\n      {\r\n         \"label\": \"Daily Max\",\r\n         \"timeSelection\" : false,  \r\n         \"value\": {\r\n            \"alignmentReducer\": \"MAX\",\r\n            \"alignmentPeriod\": \"1d\",\r\n         }\r\n      },\r\n      {\r\n         \"label\": \"Hourly Min\",\r\n         \"timeSelection\" : true,\r\n         \"value\": {\r\n            \"alignmentReducer\": \"MIN\",\r\n            \"alignmentPeriod\": \"1d\"\r\n         }\r\n      },\r\n      {\r\n         \"label\": \"Daily Min\",\r\n         \"timeSelection\" : false, \r\n         \"value\": {\r\n            \"alignmentReducer\": \"MIN\",\r\n            \"alignmentPeriod\": \"1d\"\r\n         }\r\n      }\r\n   ]}\r\n}\r\n\r\nexport default json;","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Button } from \"platyplex_ui\";\r\nimport Chart from '../../../components/chart';\r\nimport { useMetricData } from '../../../hooks/metrics';\r\nimport Filter from '../../../components/filter';\r\nimport { useSelector } from 'react-redux';\r\nimport useTimeseries from '../../../hooks/timeseries';\r\nimport options from './filter-options';\r\nimport useGarages from '../../../hooks/garage';\r\nimport chart from './chart.json';\r\nimport { defaultInterval } from '../../../utils/time';\r\nimport { TimeSeries } from '../../../model/domain/metrics';\r\n\r\nconst defaultTimeSeries = {\r\n  ...chart.timeSeriesQuery,\r\n  interval: defaultInterval()\r\n} as TimeSeries.Query;\r\n\r\nconst Analytics = () => {\r\n  const [open, setOpen] = useState(true);\r\n  const [toggle, setToggle] = useState(false);\r\n  const eId = useSelector(({ user }: any) => user.enterprise.id);\r\n  const { metricDataStatus, refresh, timeseries: currentTimeseries } = useMetricData({\r\n    timeseries: defaultTimeSeries,\r\n    eId\r\n  });\r\n\r\n  const { timeseries, actions } = useTimeseries(defaultTimeSeries);\r\n  const isPercent = timeseries?.metricType?.split('_')?.includes('percent') || false;\r\n  const { garages: resources } = useGarages({ eId });\r\n\r\n  const props = {\r\n    filterWidth: 350,\r\n    loading: metricDataStatus.loading,\r\n    submit: () => {\r\n      setTimeout(() => setOpen(false), 400);\r\n      refresh(timeseries)\r\n    },\r\n    reset: () => {\r\n      setTimeout(() => setOpen(false), 400);\r\n      actions.refresh(defaultTimeSeries)\r\n      refresh(defaultTimeSeries)\r\n    },\r\n    actions,\r\n    timeseries,\r\n    options: { ...options, resources }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (toggle) {\r\n      refresh(timeseries);\r\n      setToggle(false)\r\n    }\r\n  }, [timeseries]);\r\n\r\n  const chart_ = chart as any; //to mute ts error\r\n\r\n  return (\r\n    <Grid placeItems=\"start stretch\" padding=\"1em\" height=\"100%\">\r\n      <Grid cols=\"1\" gridGap=\"0 1em\">\r\n        <Chart\r\n          isPercent={isPercent}\r\n          className='slide-up'\r\n          metricDataStatus={metricDataStatus}\r\n          legend={{ label: 'Garages' }}\r\n          filter={\r\n            <span>\r\n              <Button\r\n                invert={timeseries.metricType !== 'garage_occupancy_count'}\r\n                noBorder={timeseries.metricType !== 'garage_occupancy_count'}\r\n                onClick={() => {\r\n                  actions.setMetric('garage_occupancy_count');\r\n                  setToggle(true)\r\n                }}\r\n                faIcon={'fas fa-sort-numeric-up'}\r\n                tooltip='Switch to count'\r\n                minWidth=\"3em\"\r\n                margin='0 0 0 1em'\r\n              />\r\n              <Button\r\n                invert={timeseries.metricType !== 'garage_occupancy_percent'}\r\n                noBorder={timeseries.metricType !== 'garage_occupancy_percent'}\r\n                minWidth=\"3em\"\r\n                onClick={() => {\r\n                  actions.setMetric('garage_occupancy_percent');\r\n                  setToggle(true)\r\n                }\r\n                }\r\n                faIcon={'fas fa-percentage'}\r\n                tooltip='Switch to percent'\r\n              />\r\n              {!open ?\r\n                <Button\r\n                  placeSelf=\"end\"\r\n                  rounded\r\n                  shadow\r\n                  minWidth=\"3em\"\r\n                  onClick={() => setOpen(!open)}\r\n                  faIcon={`fa fa-filter`}\r\n                /> : null}\r\n            </span>\r\n          }\r\n          {...chart_}\r\n          eId={eId}\r\n          queries={{timeSeriesQuery : timeseries}}\r\n        />\r\n        <Filter {...props} open={open} toggle={() => { setOpen(false); actions.refresh(currentTimeseries) }} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Analytics;","import {  InputNumber } from \"antd\";\r\nimport React from \"react\";\r\nimport { GarageOccupancyTableItem as Item } from \"../../../model/domain/garage\";\r\n\r\nconst days = [\r\n   {\r\n    title: \"Time\",\r\n    dataIndex: \"sun\",\r\n   },\r\n  {\r\n    title: \"Sunday\",\r\n    dataIndex: \"sun\",\r\n  },\r\n  {\r\n    title: \"Monday\",\r\n    dataIndex: \"mon\",\r\n  },\r\n  {\r\n    title: \"Tuesday\",\r\n    dataIndex: \"tue\",\r\n  },\r\n  {\r\n    title: \"Wednesday\",\r\n    dataIndex: \"wed\",\r\n  },\r\n  {\r\n    title: \"Thrusday\",\r\n    dataIndex: \"thur\",\r\n  },\r\n  {\r\n    title: \"Friday\",\r\n    dataIndex: \"fri\",\r\n  },\r\n  {\r\n    title: \"Saturday\",\r\n    dataIndex: \"sat\",\r\n  },\r\n];\r\n\r\ntype Interval = { startHour: [number, number], endHour: [number, number ] }\r\n\r\nconst getTime = (range : Interval)=>{\r\n    const [hour1, min1 ] = range.startHour;\r\n    const [hour2, min2 ] = range.endHour;\r\n    const period = hour1 >= 12? 'PM' : 'AM'\r\n    return `${format(hour1)}:${pad(min1)+ period} -\\n ${format(hour2)}:${pad(min2) + period}`\r\n}\r\n\r\nconst pad = (digit: number) => String(digit < 10? `0${digit}` : digit);\r\n\r\nconst to12hours = (hour : number) => Math.abs((hour - 12) !== 0? (hour - 12) : 12);\r\n\r\nconst format = (hour : number) => pad(to12hours(hour));\r\n\r\nconst columns = ( edit = false, index = 0, setFieldValue = (e : any,f: any, g: any)=>{}) => {\r\n    return days.map(({title, dataIndex})=>{\r\n        return {\r\n            title : title !== 'Time'? title : <div>{title} &nbsp;&nbsp; <i className=\"fa fa-clock\"></i></div>,\r\n            dataIndex,\r\n            key: dataIndex,\r\n            render: (item: Item, _: any, i: number) =>{\r\n                const handleChange = (e: any)=> setFieldValue(dataIndex, i, {...item, occupancy : Math.floor(e/100)})\r\n                const occupancy = Math.floor(item.occupancy * 100);\r\n                return (title !== 'Time'? \r\n                    edit? \r\n                        <InputNumber \r\n                            className={`${dataIndex} ${i}`}\r\n                            min={0}\r\n                            max={100}  \r\n                            style={{placeSelf: \"end\", width: \"60px\"}}\r\n                            defaultValue={occupancy}\r\n                            onChange={handleChange} \r\n                            precision={0}\r\n                            name={\"maxOccupancy\"} \r\n                        /> : \r\n                        `${occupancy}%` : \r\n                   <b>{getTime(item.interval)}</b>\r\n                   );\r\n          }\r\n        }\r\n    })\r\n}\r\n\r\nexport default columns;\r\n","export const defaultTable =\r\n{\r\n        \"title\": \"\",\r\n        \"table\": {\r\n            \"sun\": [\r\n                { \"interval\": { \"startHour\": [0, 0], \"endHour\": [0, 59] }, \"occupancy\":   0.20 },\r\n                { \"interval\": { \"startHour\": [1, 0], \"endHour\": [1, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [2, 0], \"endHour\": [2, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [3, 0], \"endHour\": [3, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [4, 0], \"endHour\": [4, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [5, 0], \"endHour\": [5, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [6, 0], \"endHour\": [6, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [7, 0], \"endHour\": [7, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [8, 0], \"endHour\": [8, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [9, 0], \"endHour\": [9, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [10, 0], \"endHour\": [10, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [11, 0], \"endHour\": [11, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [12, 0], \"endHour\": [12, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [13, 0], \"endHour\": [13, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [14, 0], \"endHour\": [14, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [15, 0], \"endHour\": [15, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [16, 0], \"endHour\": [16, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [17, 0], \"endHour\": [17, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [18, 0], \"endHour\": [18, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [19, 0], \"endHour\": [19, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [20, 0], \"endHour\": [20, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [21, 0], \"endHour\": [21, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [22, 0], \"endHour\": [22, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [23, 0], \"endHour\": [23, 59] }, \"occupancy\": 0.1 }\r\n            ],\r\n            \"mon\": [\r\n                { \"interval\": { \"startHour\": [0, 0], \"endHour\": [0, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [1, 0], \"endHour\": [1, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [2, 0], \"endHour\": [2, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [3, 0], \"endHour\": [3, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [4, 0], \"endHour\": [4, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [5, 0], \"endHour\": [5, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [6, 0], \"endHour\": [6, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [7, 0], \"endHour\": [7, 59] }, \"occupancy\":   0.5 },\r\n                { \"interval\": { \"startHour\": [8, 0], \"endHour\": [8, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [9, 0], \"endHour\": [9, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [10, 0], \"endHour\": [10, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [11, 0], \"endHour\": [11, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [12, 0], \"endHour\": [12, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [13, 0], \"endHour\": [13, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [14, 0], \"endHour\": [14, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [15, 0], \"endHour\": [15, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [16, 0], \"endHour\": [16, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [17, 0], \"endHour\": [17, 59] }, \"occupancy\": 0.5 },\r\n                { \"interval\": { \"startHour\": [18, 0], \"endHour\": [18, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [19, 0], \"endHour\": [19, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [20, 0], \"endHour\": [20, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [21, 0], \"endHour\": [21, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [22, 0], \"endHour\": [22, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [23, 0], \"endHour\": [23, 59] }, \"occupancy\": 0.1 }\r\n            ],\r\n            \"tue\": [\r\n                { \"interval\": { \"startHour\": [0, 0], \"endHour\": [0, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [1, 0], \"endHour\": [1, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [2, 0], \"endHour\": [2, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [3, 0], \"endHour\": [3, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [4, 0], \"endHour\": [4, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [5, 0], \"endHour\": [5, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [6, 0], \"endHour\": [6, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [7, 0], \"endHour\": [7, 59] }, \"occupancy\":   0.5 },\r\n                { \"interval\": { \"startHour\": [8, 0], \"endHour\": [8, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [9, 0], \"endHour\": [9, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [10, 0], \"endHour\": [10, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [11, 0], \"endHour\": [11, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [12, 0], \"endHour\": [12, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [13, 0], \"endHour\": [13, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [14, 0], \"endHour\": [14, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [15, 0], \"endHour\": [15, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [16, 0], \"endHour\": [16, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [17, 0], \"endHour\": [17, 59] }, \"occupancy\": 0.5 },\r\n                { \"interval\": { \"startHour\": [18, 0], \"endHour\": [18, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [19, 0], \"endHour\": [19, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [20, 0], \"endHour\": [20, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [21, 0], \"endHour\": [21, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [22, 0], \"endHour\": [22, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [23, 0], \"endHour\": [23, 59] }, \"occupancy\": 0.1 }\r\n            ],\r\n            \"wed\": [\r\n                { \"interval\": { \"startHour\": [0, 0], \"endHour\": [0, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [1, 0], \"endHour\": [1, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [2, 0], \"endHour\": [2, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [3, 0], \"endHour\": [3, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [4, 0], \"endHour\": [4, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [5, 0], \"endHour\": [5, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [6, 0], \"endHour\": [6, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [7, 0], \"endHour\": [7, 59] }, \"occupancy\":   0.5 },\r\n                { \"interval\": { \"startHour\": [8, 0], \"endHour\": [8, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [9, 0], \"endHour\": [9, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [10, 0], \"endHour\": [10, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [11, 0], \"endHour\": [11, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [12, 0], \"endHour\": [12, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [13, 0], \"endHour\": [13, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [14, 0], \"endHour\": [14, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [15, 0], \"endHour\": [15, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [16, 0], \"endHour\": [16, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [17, 0], \"endHour\": [17, 59] }, \"occupancy\": 0.5 },\r\n                { \"interval\": { \"startHour\": [18, 0], \"endHour\": [18, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [19, 0], \"endHour\": [19, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [20, 0], \"endHour\": [20, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [21, 0], \"endHour\": [21, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [22, 0], \"endHour\": [22, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [23, 0], \"endHour\": [23, 59] }, \"occupancy\": 0.1 }\r\n            ],\r\n            \"thur\": [\r\n                { \"interval\": { \"startHour\": [0, 0], \"endHour\": [0, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [1, 0], \"endHour\": [1, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [2, 0], \"endHour\": [2, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [3, 0], \"endHour\": [3, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [4, 0], \"endHour\": [4, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [5, 0], \"endHour\": [5, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [6, 0], \"endHour\": [6, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [7, 0], \"endHour\": [7, 59] }, \"occupancy\":   0.5 },\r\n                { \"interval\": { \"startHour\": [8, 0], \"endHour\": [8, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [9, 0], \"endHour\": [9, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [10, 0], \"endHour\": [10, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [11, 0], \"endHour\": [11, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [12, 0], \"endHour\": [12, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [13, 0], \"endHour\": [13, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [14, 0], \"endHour\": [14, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [15, 0], \"endHour\": [15, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [16, 0], \"endHour\": [16, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [17, 0], \"endHour\": [17, 59] }, \"occupancy\": 0.5 },\r\n                { \"interval\": { \"startHour\": [18, 0], \"endHour\": [18, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [19, 0], \"endHour\": [19, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [20, 0], \"endHour\": [20, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [21, 0], \"endHour\": [21, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [22, 0], \"endHour\": [22, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [23, 0], \"endHour\": [23, 59] }, \"occupancy\": 0.1 }\r\n            ],\r\n            \"fri\": [\r\n                { \"interval\": { \"startHour\": [0, 0], \"endHour\": [0, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [1, 0], \"endHour\": [1, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [2, 0], \"endHour\": [2, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [3, 0], \"endHour\": [3, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [4, 0], \"endHour\": [4, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [5, 0], \"endHour\": [5, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [6, 0], \"endHour\": [6, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [7, 0], \"endHour\": [7, 59] }, \"occupancy\":   0.5 },\r\n                { \"interval\": { \"startHour\": [8, 0], \"endHour\": [8, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [9, 0], \"endHour\": [9, 59] }, \"occupancy\":   0.9 },\r\n                { \"interval\": { \"startHour\": [10, 0], \"endHour\": [10, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [11, 0], \"endHour\": [11, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [12, 0], \"endHour\": [12, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [13, 0], \"endHour\": [13, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [14, 0], \"endHour\": [14, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [15, 0], \"endHour\": [15, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [16, 0], \"endHour\": [16, 59] }, \"occupancy\": 0.9 },\r\n                { \"interval\": { \"startHour\": [17, 0], \"endHour\": [17, 59] }, \"occupancy\": 0.5 },\r\n                { \"interval\": { \"startHour\": [18, 0], \"endHour\": [18, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [19, 0], \"endHour\": [19, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [20, 0], \"endHour\": [20, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [21, 0], \"endHour\": [21, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [22, 0], \"endHour\": [22, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [23, 0], \"endHour\": [23, 59] }, \"occupancy\": 0.1 }\r\n            ],\r\n            \"sat\": [\r\n                { \"interval\": { \"startHour\": [0, 0], \"endHour\": [0, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [1, 0], \"endHour\": [1, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [2, 0], \"endHour\": [2, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [3, 0], \"endHour\": [3, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [4, 0], \"endHour\": [4, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [5, 0], \"endHour\": [5, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [6, 0], \"endHour\": [6, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [7, 0], \"endHour\": [7, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [8, 0], \"endHour\": [8, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [9, 0], \"endHour\": [9, 59] }, \"occupancy\":   0.1 },\r\n                { \"interval\": { \"startHour\": [10, 0], \"endHour\": [10, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [11, 0], \"endHour\": [11, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [12, 0], \"endHour\": [12, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [13, 0], \"endHour\": [13, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [14, 0], \"endHour\": [14, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [15, 0], \"endHour\": [15, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [16, 0], \"endHour\": [16, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [17, 0], \"endHour\": [17, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [18, 0], \"endHour\": [18, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [19, 0], \"endHour\": [19, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [20, 0], \"endHour\": [20, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [21, 0], \"endHour\": [21, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [22, 0], \"endHour\": [22, 59] }, \"occupancy\": 0.1 },\r\n                { \"interval\": { \"startHour\": [23, 0], \"endHour\": [23, 59] }, \"occupancy\": 0.1 }\r\n            ]\r\n        }\r\n    };","import { GarageOccupancyTableItem as Item, GarageOccupancyTable } from '../../../model/domain/garage';\r\n\r\nexport const format = (aTable: GarageOccupancyTable) => {\r\n    if (!aTable?.table)\r\n        return [];\r\n\r\n    const temp = new Array(24);\r\n    Object.keys(aTable.table)\r\n        .map((key: string) => {\r\n            const items = aTable.table[key as 'sun'];\r\n            items.map((item: Item, i: number) => {\r\n                temp[i] = { ...temp[i], ...{ [key]: item } }\r\n            });;\r\n        })\r\n    return temp;\r\n}","import React, { useRef} from 'react';\r\nimport { Grid,  Button, Text } from \"platyplex_ui\";\r\nimport { primaryColor } from '../../../config';\r\nimport { GarageOccupancyTableItem as Item, GarageOccupancyTable } from '../../../model/domain/garage';\r\nimport { Table,  Input  } from 'antd';\r\nimport columns from './columns';\r\nimport { format } from './format';\r\n\r\ntype Days = 'sun' | 'mon' | 'tue' | 'wed' | 'thur' | 'fri' | 'sat';\r\n\r\nconst OccupancyForm = (props: any) => {\r\n    const { action, close } = props;\r\n    const initialValues: GarageOccupancyTable = props.initialValues;\r\n    const input = useRef<any>(null)\r\n    const days = Object.keys(initialValues.table) as Days[];\r\n\r\n    const submit = () => {\r\n        action({\r\n            title: getTitle(),\r\n            id: initialValues.id,\r\n            table: getTable(days)\r\n        });\r\n        close();\r\n    }\r\n\r\n    const getTitle = () => {\r\n        return input?.current?.state?.value || initialValues.title\r\n    }\r\n    const getTable = (days: Days[]) => (days\r\n        .reduce((table: any, day: Days) => {\r\n            const values = getOccupanciesByDay(day);\r\n            const intervals = initialValues.table[day];\r\n            const newIntervals = intervals.map(({ interval }: Item, i: number) => {\r\n                return { interval, occupancy: values[i] }\r\n            })\r\n\r\n            table[day] = newIntervals;\r\n            return table;\r\n        }, {})\r\n    )\r\n\r\n    const toArray = (elements: HTMLCollectionOf<Element>): Element[] => {\r\n        const items = []\r\n        for (let i = 0; i < elements.length; i++) {\r\n            items.push(elements[i])\r\n        }\r\n        return items;\r\n    }\r\n\r\n    const getOccupanciesByDay = (day: Days): Number[] => {\r\n        const items = toArray(document.getElementsByClassName(day));\r\n        items.sort((a: Element, b: Element) => Number(a.classList[1]) - Number(b.classList));\r\n        return items\r\n            .map((item: Element) => {\r\n                const secondChild = item?.children[1] as any;\r\n                const value = secondChild?.children[0]?.value || '0';\r\n                return Number(value) / 100\r\n            })\r\n    }\r\n    return (\r\n        <Grid placeItems=\"stretch\" width=\"100%\" height=\"100%\" gridGap=\"0\" background=\"white\" padding=\".5em .8em 1em .8em\" >\r\n            <div style={{ padding: \".5em\" }}>\r\n                <Text textAlign=\"left\" bold>Enter the Name of your Table</Text>\r\n                <Input\r\n                    placeholder={\"Ex: New Table 1\"}\r\n                    name={\"title\"}\r\n                    ref={input}\r\n                    defaultValue={initialValues.title}\r\n                />\r\n            </div>\r\n            <div style={{ overflowY: \"scroll\", maxHeight: \"60vh\" }}>\r\n                <Table\r\n                    className='min-height-table'\r\n                    bordered\r\n                    pagination={false}\r\n                    key={Math.random() * 1000}\r\n                    style={{ color: primaryColor, maxWidth: \"100%\" }}\r\n                    dataSource={format(initialValues)}\r\n                    columns={columns(true, 0)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button onClick={close}>Cancel</Button>\r\n                <Button onClick={() => { submit() }}>Submit</Button>\r\n            </div>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default OccupancyForm;","import React from 'react';\r\nimport { Grid, MenuItem } from \"platyplex_ui\";\r\nimport { List, Popconfirm } from 'antd';\r\nimport { Garage } from '../../../model/domain/garage';\r\nimport Label from '../../../components/label';\r\n\r\nconst TableItem = ({ active, select, table, remove, garages, open }: any) => {\r\n    const getGarages = (tableId: string) => garages.filter((g: Garage) => g.occupancy.tableId === tableId, []);\r\n    const associatedGarages = getGarages(table.id);\r\n    return (\r\n        <div style={{ placeSelf: \"start stretch\" }}>\r\n            <List.Item\r\n                className=\"pointer\"\r\n                onClick={select}\r\n            >\r\n                <MenuItem\r\n                    fullWidth\r\n                    active={active}\r\n                    style={{ margin: \"auto\" }}\r\n                >\r\n                    <Grid width=\"100%\" color={\"inherit\"} customCols=\"auto 1fr auto\">\r\n\r\n                        <i className=\"fa fa-table txt-lg\" style={{ padding: \".35em\" }}></i>\r\n                        <span>\r\n                            {table.title}\r\n                            <Label label={`This Occupancy is associated with: ${\r\n                            associatedGarages ?\r\n                                associatedGarages\r\n                                .map((g: Garage, i: number) => g.name + (i === associatedGarages.length - 1 ? '' : ', ')) : 'N/A'}`} />\r\n                        </span>\r\n                        <span>\r\n                            <Popconfirm\r\n                                style={{ padding: \".4em\", color: !active ? \"white\" : \"inherit\" }}\r\n                                title=\"Are you sure\"\r\n                                onConfirm={() => remove(table.id)}\r\n                            >\r\n                                <i className=\"fa fa-trash hoverr\" style={{ color: !active ? \"white\" : \"inherit\" }} ></i>\r\n                            </Popconfirm>\r\n                            &nbsp;   &nbsp;\r\n                <i className=\"fa fa-edit hoverr\" onClick={open} style={{ color: !active ? \"white\" : \"inherit\" }}></i>\r\n                        </span>\r\n                    </Grid>\r\n                </MenuItem>\r\n            </List.Item>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TableItem;","import React, { useEffect } from 'react';\r\nimport {  Header, Card, Button,  Modal } from 'platyplex_ui';\r\nimport { GarageOccupancyTableItem as Item, GarageOccupancyTable, Garage } from '../../../model/domain/garage';\r\nimport { List  } from 'antd';\r\nimport { defaultTable } from './default-table';\r\nimport OccupancyForm from './table-form';\r\nimport TableItem from './table-item';\r\nimport { useSelector } from 'react-redux';\r\nimport useGarages from '../../../hooks/garage';\r\n\r\nconst TableList = ({ add, remove, selected, select, edit, tables, loading, localeProps } : any) => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { garages, loading: garageLoading  } = useGarages({ eId });\r\n\r\n    const AddModal = Modal({\r\n        title: \"Add Your Occupancy Table\",\r\n        message: \r\n        <OccupancyForm\r\n            action={add}\r\n            close={() => AddModal.close()}\r\n            initialValues={defaultTable}\r\n        />,\r\n        hideCancel: true,\r\n    });\r\n\r\n    const open = (selected: GarageOccupancyTable) => {\r\n        const EditModal =  Modal({\r\n            title: \"Edit Your Occupancy Table\",\r\n            message: <OccupancyForm\r\n                action={edit}\r\n                initialValues={selected}\r\n                close={() => EditModal.close()}\r\n            />,\r\n            hideCancel: true,\r\n        });\r\n        EditModal.open();\r\n    }\r\n\r\n    return (\r\n        <Card shadow width=\"400px\" grid customRows=\"auto 1fr\" placeItems=\"stretch\">\r\n            <Header bold width=\"100%\" size={3}>\r\n                Occupancy Tables\r\n                <Button\r\n                    style={{ placeSelf: \"end\", fontSize: \".6em\", float: \"right\" }}\r\n                    rounded\r\n                    shadow\r\n                    onClick={AddModal.open}\r\n                    minWidth=\"4.5em\"\r\n                >\r\n                    <i className={`fa fa-${\"plus\"}`}></i> Add\r\n                </Button>\r\n            </Header>\r\n            <List\r\n                {...localeProps}\r\n                loading={loading || garageLoading}\r\n                bordered={!loading}\r\n                dataSource={tables}\r\n                renderItem={(table: GarageOccupancyTable, i: number) => (\r\n                    <TableItem\r\n                        select={() => select(i)}\r\n                        active={i === selected}\r\n                        garages={garages}\r\n                        table={table}\r\n                        remove={remove}\r\n                        open={() => open(tables[i])}\r\n                    />\r\n                )}\r\n            />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default TableList;","import React, { useState, useEffect } from 'react';\r\nimport { Grid,  Card, Empty, Loader } from \"platyplex_ui\";\r\nimport { primaryColor } from '../../../config';\r\nimport { useSelector } from 'react-redux';\r\nimport { Table } from 'antd';\r\nimport columns from './columns';\r\nimport { useOccupanyTable } from '../../../hooks/occupancy-table';\r\nimport TableList from './table-list';\r\nimport { format } from './format';\r\n\r\ntype Days = 'sun' | 'mon' | 'tue' | 'wed' | 'thur' | 'fri' | 'sat';\r\n\r\nconst OccupancyTable = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { tables, loading: loadingTables, addTable, editTable, removeTable } = useOccupanyTable({ eId })\r\n    const [ selected, setSelected ] = useState(0);\r\n    const localeProps = {\r\n        locale: {\r\n            emptyText: <Empty text=\"No Occupancy Table\" />,\r\n        },\r\n        loading :{\r\n            spinning: loadingTables,\r\n            indicator: <Grid><Loader.Spinner size={2} color={primaryColor} /></Grid>\r\n        }\r\n    }\r\n    useEffect(() => setSelected(0), [tables]);\r\n    return (\r\n        <Grid placeItems=\"start stretch\" padding=\"1em\" height=\"100%\">\r\n            <Grid customCols=\"auto 1fr\" height=\"100%\" placeItems=\"stretch\">\r\n                <TableList\r\n                    add={addTable}\r\n                    localeProps={localeProps}\r\n                    tables={tables}\r\n                    remove={removeTable}\r\n                    loading={loadingTables}\r\n                    edit={editTable}\r\n                    select={setSelected}\r\n                    selected={selected}\r\n                />\r\n                <Card shadow width=\"100%\" height=\"100%\">\r\n                    <Table\r\n                        className='min-height-table'\r\n                        bordered\r\n                        {...localeProps}\r\n                        pagination={false}\r\n                        key={Math.random() * 1000}\r\n                        style={{ color: primaryColor, maxWidth: \"90vw\" , minHeight: \"800px\"}}\r\n                        dataSource={format(tables[selected] || [])}\r\n                        columns={columns()}\r\n                    />\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default OccupancyTable;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, Header } from \"platyplex_ui\";\r\nimport CountUp from 'react-countup';\r\nimport { Progress, Tooltip } from 'antd';\r\nimport API from '../../api';\r\nimport { useSelector } from 'react-redux';\r\nimport { disabledTxtColor } from '../../config';\r\nimport logger from '../../utils/logger';\r\n\r\nexport const ScoreCard = ({ title, faIcon, span = 1, color = 'white', children, adjacentLabel, hoverLabel, borderRight }: any) => {\r\n  const borderStyle = borderRight ? { borderRight: '1px solid ' + disabledTxtColor, padding: '0 1em' } : {};\r\n  return (\r\n    <Grid\r\n      className={'noselect span-'+span}\r\n      style={{ ...borderStyle, minHeight: '10em' }}\r\n      placeSelf='stretch'\r\n      gridGap='.5em'\r\n      customRows='auto 1fr'\r\n    >\r\n      <Header size={3.5} color={color} placeSelf='start stretch' style={{ lineHeight: \".8em\", height: '1.5em' }}>\r\n        {title} &nbsp;\r\n          {faIcon &&\r\n          <Tooltip placement=\"topLeft\" title={hoverLabel}>\r\n            <i className={faIcon + ' pointer'}></i>\r\n          </Tooltip>}\r\n      </Header>\r\n      <div style={{ color, placeSelf: 'start center' }}>\r\n        <div style={{ height: \"6em\" }}>\r\n          {children}\r\n        </div>\r\n        <div style={{ lineHeight: '1em' }} dangerouslySetInnerHTML={{ __html: adjacentLabel }}></div>\r\n      </div>\r\n    </Grid>);\r\n}\r\n\r\nScoreCard.PercentBar = ({ percent, type, text, status = false, successPercent }: any) => {\r\n  const gradient = percent <= 50 ? '#F2BE72' :\r\n    `linear-gradient(to right, #F2BE72 ${50}%, #F76E49)`;\r\n  return (\r\n    <Progress\r\n      percent={percent}\r\n      strokeColor={status ? gradient : '#5578D6'}\r\n      successPercent={successPercent || 0}\r\n      type={type}\r\n      format={() => <div className='bold' style={{ color: 'white' }}>{text || (percent + '%')}</div>}\r\n    />);\r\n}\r\n\r\nconst intoHeadings = (str: string) => str.charAt(0).toUpperCase() + str.substring(1).replace(/ /g, ' ');\r\n\r\nconst FlatValue = ({ name, flatValueQuery, leftBorder, borderRight, refresh = true}: any) => {\r\n  const [res, setRes] = useState({\r\n    value: 0,\r\n    hoverLabel: undefined,\r\n    adjacentLabel: undefined,\r\n    isPercent: false,\r\n    unit: undefined,\r\n    applicableResource: ''\r\n  })\r\n  const { value, hoverLabel, adjacentLabel, isPercent, unit } = res;\r\n  const eId = useSelector((state: any) => state.user.enterprise.id);\r\n\r\n  const getValue = (value: number, unit?: string) => {\r\n    if (unit === '%' || unit === 'cents') \r\n      value /= 100;\r\n\r\n    value = Math.round(value * 100) / 100\r\n    return (value || 0);\r\n  }\r\n\r\n  const getIcon = (resource: string) => {\r\n      switch(resource){\r\n        case 'citation':\r\n        return 'fas fa-money-check-alt';\r\n\r\n        case 'announcement':\r\n        return 'fas fa-bullhorn';\r\n        \r\n        case 'enterpriseUser':\r\n        return 'fa fa-user';\r\n\r\n        default:\r\n        return 'fa fa-car'\r\n\r\n      }\r\n  }\r\n\r\n  const loadValue = async () => {\r\n    try {\r\n      const res = await Promise.all([API.getFlatValue(eId, flatValueQuery), API.getFlatValueMetricDes(eId, flatValueQuery.metricType)]);\r\n      const [flatValue, metricDescriptor] = res;\r\n\r\n      if (flatValue?.success && metricDescriptor?.success) {\r\n        let { flatValue: { value }, metricType, hoverLabel, adjacentLabel, unit } = flatValue.flatValueResult as any;\r\n        setRes({\r\n          isPercent: metricType?.split('_')?.includes('percent'),\r\n          hoverLabel,\r\n          unit,\r\n          adjacentLabel,\r\n          value: getValue(value, unit),\r\n          applicableResource: metricDescriptor.metricDescriptor.applicableResource\r\n        })\r\n      } else throw new Error(\"Failed\");\r\n    } catch (e) {\r\n      logger.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(() => { if(refresh) loadValue() }, [refresh]);\r\n  return (\r\n    <ScoreCard\r\n      borderRight={borderRight}\r\n      title={intoHeadings(name)}\r\n      hoverLabel={hoverLabel}\r\n      adjacentLabel={adjacentLabel}\r\n      faIcon={getIcon(res.applicableResource)}\r\n      unit={unit}\r\n      leftBorder={leftBorder}\r\n    >\r\n      {isPercent ?\r\n        <ScoreCard.PercentBar\r\n          type=\"circle\"\r\n          percent={Number(value)}\r\n        />\r\n        : <div className='txt-lgx'>\r\n          {unit === 'cents' && '$'}\r\n          {typeof value === \"number\" ?\r\n            <CountUp duration={2} start={0} end={value as number} /> : value}\r\n        </div>\r\n      }\r\n    </ScoreCard>\r\n  );\r\n};\r\n\r\nScoreCard.FlatValue = FlatValue;\r\nexport default ScoreCard;","import React from 'react';\r\nimport { Grid, Header as Text, List, Empty } from \"platyplex_ui\";\r\nimport useGarages from '../../hooks/garage';\r\nimport { useSelector } from 'react-redux';\r\nimport { Garage } from '../../model/domain/garage';\r\nimport { ScoreCard } from '../../components/score-card/score-card';\r\nimport { overflow } from '../../utils/text';\r\nimport { moment } from '../../utils/time';\r\nimport { invertedTxtColor, disabledTxtColor } from '../../config';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst Header = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { garages, loading } = useGarages({ eId });\r\n    const activeGarages = garages\r\n        .filter((garage: Garage) => garage.status === 'active')\r\n        .sort((a, b) => (a.occupancy.current!.count) - (b.occupancy.current!.count));\r\n\r\n    const totalOcc = activeGarages.reduce(((acc, garage) => acc + garage.occupancy.maxCount), 0);\r\n    const currentOcc = activeGarages.reduce(((acc, { occupancy }: Garage) => acc + (occupancy.current!.count || 0)), 0);\r\n\r\n    const percent = (curr: number, total: number) => (((curr / total) * 100) || 0).toFixed(2);\r\n    return (\r\n        <Grid\r\n            cols='5'\r\n            style={{ gridColumn: '1/-1' }}\r\n            width='100%'\r\n            padding='1.5em 1.5em 0 1.5em'\r\n        >  <Text\r\n            className='hide-mobile'\r\n            style={{ gridColumn: '1/-1', placeSelf: \"end\" }}\r\n            size={4.6}\r\n            color={invertedTxtColor}\r\n        >\r\n                Updated at: {moment().format('hh:mm A')}\r\n            </Text>\r\n            <ScoreCard title='Parked Vehicles' faIcon='fa fa-car' hoverLabel='Parked Vehicles' borderRight>\r\n                <span className='txt-lgx'>{currentOcc}</span>\r\n                <span className='txt-md'>/{totalOcc}</span>\r\n            </ScoreCard>\r\n\r\n            <ScoreCard title='Parked Vehicles (%)' faIcon='fa fa-car' hoverLabel='Parked Vehicles in Percentage' borderRight>\r\n                <ScoreCard.PercentBar\r\n                    type='dashboard'\r\n                    percent={percent(currentOcc, totalOcc)}\r\n                />\r\n            </ScoreCard>\r\n\r\n            <ScoreCard title='Active Garages' faIcon='fa fa-car' hoverLabel='All Active Garages' borderRight>\r\n                <ScoreCard.PercentBar\r\n                    type='dashboard'\r\n                    text={`${activeGarages.length}/${garages.length}`}\r\n                    percent={percent(activeGarages.length, garages.length)}\r\n                />\r\n            </ScoreCard>\r\n\r\n            <ScoreCard title='Garage Occupancies' faIcon='fa fa-car' hoverLabel='Occupancy Count' span={2}>\r\n                <Grid placeSelf='start' >\r\n                    <Grid\r\n                        customCols={loading ? '1fr' : '1fr  minmax(15em, auto)'}\r\n                        placeItems='stretch'\r\n                        width='100%'\r\n                        color='white'\r\n                        gridGap='.2em 1.5em'\r\n                    >\r\n                        <List\r\n                            loading={loading}\r\n                            empty={\r\n                                <div style={{ gridColumn: '1/-1' }}>\r\n                                    <Empty text={'No Garage Occupancy'} color=\"white\" style={{ width: '7em', margin: '0 auto' }} />\r\n                                </div>\r\n                            }\r\n                            pagination={{ items: 4 }}\r\n                            list={activeGarages}\r\n                            map={(({ name, occupancy, abnormality }: Garage) => {\r\n                                const count = occupancy.current!.count;\r\n                                const value = percent(count, occupancy.maxCount)\r\n                                return (\r\n                                    <>\r\n                                        <Text size={3.75} textAlign='left' color={'white'}>\r\n                                            <Tooltip title={`\r\n                                            Abnormality is: ${abnormality?.active ? `ON. It is triggered on ${abnormality.baselinePercent * 100}%` : 'OFF'}\r\n                                        `}>\r\n                                                <span className='txt-overflow'><i\r\n                                                    style={{ color: abnormality.active ? 'coral' : disabledTxtColor }}\r\n                                                    className='fa fa-bell'\r\n                                                ></i>&nbsp;&nbsp;{overflow(name, 23)}</span>\r\n                                            </Tooltip>\r\n\r\n\r\n                                        </Text>\r\n                                        <ScoreCard.PercentBar\r\n                                            status\r\n                                            percent={value}\r\n                                            text={count ? value + \"%\" : 'N/A'}\r\n                                        />\r\n                                    </>\r\n                                )\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </ScoreCard>\r\n\r\n        </Grid>);\r\n}\r\n\r\nexport default Header;","import { Space, Switch } from 'antd';\r\nimport { Text} from \"platyplex_ui\";\r\nimport React from 'react';\r\nimport { Popconfirm } from 'antd';\r\nimport { moment, FORMAT_DATETIME } from '../../../utils/time';\r\n\r\nconst columns = (activate: any, loadingAction = false, index = 0) => {\r\n    return [{\r\n        title: 'Garage',\r\n        dataIndex: 'garage',\r\n        key: 'garage',\r\n        render: (text: string) => <div className='txt-overflow'>{text}</div>\r\n    },\r\n    {\r\n        title: 'Detected On',\r\n        dataIndex: 'detected_on',\r\n        key: 'detected_on',\r\n        render: (t: string) => moment(t).format(FORMAT_DATETIME)\r\n    },\r\n    {\r\n        title: 'Abnormality Event',\r\n        dataIndex: 'abnormality_event',\r\n        key: 'abnormality_event',\r\n        render: (text: string) => <span dangerouslySetInnerHTML={{__html: text}}/>\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (_: any, record: any) => {\r\n            return (\r\n                <Space size=\"middle\">\r\n                    <Popconfirm\r\n                        okButtonProps={{ size: 'middle' }}     \r\n                        cancelButtonProps={{ size: 'middle' }}\r\n                        okText='Yes, switch back'\r\n                        cancelText='No, I need more time to check'\r\n                        title={\r\n                        <div style={{maxWidth: '400px'}}>\r\n                            <b>Are you sure you want to switch back to showing current Occupancy Values?</b>\r\n                            <br/> Please make sure to check if your hardware including any camera/sensors are working properly and all your servers are online before switching back.\r\n                        </div>}\r\n                        onConfirm={() => activate(record)}\r\n                    >\r\n                        <Text>\r\n                            <Switch\r\n                                disabled={loadingAction}\r\n                                defaultChecked\r\n                            />\r\n                        </Text>\r\n                    </Popconfirm>\r\n                </Space>\r\n            )\r\n        },\r\n    },\r\n    ]\r\n};\r\n\r\n\r\nexport default columns;","import React from \"react\";\r\nimport { Card, Empty, Grid} from \"platyplex_ui\";\r\nimport { Table } from \"antd\";\r\nimport { primaryColor, mobileWidth } from \"../../../config\";\r\nimport styled from \"styled-components\";\r\nimport columns from \"./columns\";\r\n\r\nlet locale = {\r\n  emptyText: <Empty text=\"No Abnormality\" />\r\n};\r\n\r\nexport default ({ abnormalities, toggler }: any) => {\r\n  const activate = (i : any)=>{}\r\n  return (\r\n    <Card shadow minWidth=\"60vw\" padding=\".5em\" width='100%'>\r\n      <Grid customCols=\"auto 1fr auto\">\r\n        <div></div>\r\n        {toggler}\r\n      </Grid>\r\n      <DIV>\r\n        <Table\r\n          className='min-height-table'\r\n          locale={locale}\r\n          key={Math.random() * 1000}\r\n          loading={false}\r\n          style={{ color: primaryColor}}\r\n          dataSource={abnormalities}\r\n          columns={columns(\r\n            (i: any) => activate(i), \r\n            false\r\n          )}\r\n        />\r\n      </DIV>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst DIV = styled.div`\r\n  @media (max-width: ${mobileWidth}) {\r\n    overflow-x: scroll;\r\n  }\r\n`;","import React, { useState } from 'react';\r\nimport { Switch } from \"platyplex_ui\";\r\nimport Layout from '../../layout';\r\nimport Listings from './listings';\r\nimport Analytics from './analytics';\r\nimport OccupancyTable from './occupancy-table';\r\nimport Header from \"./header\";\r\nimport Abnormality from './abnormality';\r\nimport { Badge } from 'antd';\r\n\r\nenum activePages {\r\n  \"ANALYTICS\" = \"ANALYTICS\",\r\n  \"LISTINGS\" = \"LISTINGS\",\r\n  \"OCCUPANCY_TABLE\" = \"OCCUPANCY_TABLE\",\r\n  \"ABNORMALITY\" = \"ABNORMALITY\"\r\n};\r\n\r\nconst Garage = () => {\r\n  const [activePage, setActivePage] = useState(activePages.ANALYTICS);\r\n  const items = [\r\n    ...Object.keys(activePages).splice(0, 3),\r\n    {\r\n      toString: () => 'ABNORMALITY',\r\n      el: <Badge  count={3}><span style={{fontSize: '1.25em'}}>Abnormality &nbsp; &nbsp;</span></Badge>\r\n    }\r\n  ]\r\n  return (\r\n    <Layout sidebar>\r\n      <Layout.Top>\r\n        <Switch.underlined\r\n          style={{ placeSelf: \"start\", gridColumn: '1/-1', gridGap: '.5em 1.5em' }}\r\n          items={items}\r\n          onClick={(active: activePages) => setActivePage(active)}\r\n          active={activePage}\r\n        />\r\n        <Header />\r\n      </Layout.Top>\r\n      <Layout.Bottom>\r\n        {activePage === activePages.LISTINGS ? <Listings /> :\r\n          activePage === activePages.OCCUPANCY_TABLE ? <OccupancyTable /> :\r\n            activePage === activePages.ABNORMALITY ? <Abnormality /> :\r\n              <Analytics />\r\n        }\r\n      </Layout.Bottom>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Garage;","import React, { useState } from \"react\";\r\nimport { Grid, Switch } from \"platyplex_ui\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Table from './table';\r\nimport { Abnormality as AB } from \"./type\";\r\n\r\nconst states = {\r\n    ACTIVE: \"ACTIVE\",\r\n    ALL: \"ALL\",\r\n    PAST: \"PAST\",\r\n    DEFAULT: \"ACTIVE\",\r\n    states: [\"ACTIVE\", \"PAST\", \"ALL\"],\r\n};\r\n\r\nconst Abnormality = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n\r\n    const abnormalities: AB[] = [{\r\n        id: '1',\r\n        garage: 'North 10th St Garage',\r\n        detected_on: '09/09/2020 @ 10:00 AM',\r\n        active: true,\r\n        abnormality_event: 'Occupancy detected to be 15% above than last three weeks moving average <br/>Occupancy detected: <span style=\"color:red\">98% </span><br/>Last 3 weeks moving average: <span style=\"color:green\">83%</span>'\r\n    },\r\n    {\r\n        id: '2',\r\n        garage: 'South 7th St Garage',\r\n        detected_on: '09/04/2020 2:00 PM',\r\n        active: true,\r\n        abnormality_event: 'Occupancy detected to be 15% below than last year data <br/>Occupancy detected: <span style=\"color:red\">72% </span><br/>Last year data as of Mon, Sep 2, 2020 at 2:00 PM: <span style=\"color:green\">87%</span>'\r\n    },\r\n    {\r\n        id: '3',\r\n        garage: 'South 7th St Garage',\r\n        detected_on: '8/20/2020 1:00 PM',\r\n        active: true,\r\n        abnormality_event: 'Occupancy detected to be 8% above than custom set date <br/>Occupancy detected: <span style=\"color:red\">99% </span><br/>Occupancy Data as of Tue, Oct 13, 2020 at 1:00 PM: <span style=\"color:green\">91%</span>'\r\n    }];\r\n\r\n    const [state, setState] = useState({ active: states.DEFAULT });\r\n    return (\r\n        <Grid placeItems=\"start stretch\" padding=\"1em\" height=\"100%\">\r\n            <Grid>\r\n                <Table\r\n                    abnormalities={abnormalities.filter((ab: AB) => state.active === states.ALL || (ab.active && state.active === states.ACTIVE) || ((!ab.active && state.active === states.PAST)))}\r\n                    toggler={\r\n                        <Switch\r\n                            style={{ margin: \"0 0 .5em 0\" }}\r\n                            active={state.active}\r\n                            items={states.states}\r\n                            onClick={(active: string) => setState({ ...state, active })}\r\n                        />\r\n                    }\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Abnormality;","import { Space } from 'antd';\r\nimport { Button, Badge } from  \"platyplex_ui\";\r\nimport React from 'react';\r\nimport { Popconfirm } from 'antd';\r\nimport { moment, NEW_FORMAT_DATETIME } from '../../utils/time';\r\nimport Label from '../../components/label';\r\n\r\nconst columns = (edit: any, remove: any, loadingAction = false, index = 0) => {\r\n    return [{\r\n        title: 'Title',\r\n        dataIndex: 'title',\r\n        key: 'title',\r\n        render: (text: string) => text,\r\n    },\r\n    {\r\n        title: 'Message',\r\n        dataIndex: 'body',\r\n        key: 'body',\r\n        render: (text: string)=><div style={{textOverflow: 'ellipsis', height: \"1.5em\", overflow:\"hidden\", whiteSpace: \"nowrap\"}}>{text}</div>\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        render: (text: string) => <Badge\r\n            className=\"shadow txt-center\"\r\n            style={{ background: text === 'expired' ? \"red\" : \"\" }}\r\n        >\r\n            {text}\r\n        </Badge>,\r\n    },\r\n    {\r\n        title: <span>Launch Date <Label label={'Date on which the message will appear in ParkStash App'}/></span>,\r\n        key: 'launchAt',\r\n        dataIndex: 'launchAt',\r\n        render: (t: string) => moment(t).format(NEW_FORMAT_DATETIME)\r\n    },\r\n    {\r\n        title: <span>Expiry Date <Label label={'Date on which the message will stop appearing in ParkStash App'}/></span>,\r\n        key: 'expiresAt',\r\n        dataIndex: 'expiresAt',\r\n        render: (t: string | null) => t? moment(t).format(NEW_FORMAT_DATETIME): 'n/a'\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (_: any, record: any) => {\r\n            return (\r\n                <Space size=\"middle\">\r\n                    <Button\r\n                        shadow\r\n                        disabled={loadingAction}\r\n                        loading={loadingAction}\r\n                        onClick={() => edit(record)}\r\n                    >\r\n                        <i className=\"fa fa-edit\"></i> &nbsp;Edit\r\n                    </Button>\r\n\r\n                    <Popconfirm\r\n                        okButtonProps={{size: 'middle'}}\r\n                        cancelButtonProps={{size: 'middle'}}\r\n                        title=\"Are you sure\"\r\n                        onConfirm={() => remove(record)}\r\n                    >\r\n                        <Button\r\n                            shadow\r\n                            bg=\"red\"\r\n                            disabled={loadingAction}\r\n                            loading={loadingAction}\r\n                        >\r\n                            <i className=\"fa fa-trash\"></i> &nbsp;Delete\r\n                        </Button>\r\n                    </Popconfirm>\r\n                </Space>\r\n            )\r\n        },\r\n    },\r\n    ]\r\n};\r\n\r\nexport default columns;","import React from \"react\";\r\nimport { Card, Empty, Button, Grid} from \"platyplex_ui\";\r\nimport { Table } from \"antd\";\r\nimport { primaryColor, mobileWidth } from \"../../config\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport columns from \"./columns\";\r\n\r\nlet locale = {\r\n  emptyText: <Empty text=\"No Annoucement\" />\r\n};\r\n\r\nexport default ({ announcements, edit, add, toggler, remove }: any) => {\r\n  const loadingAction = useSelector(\r\n    (state: any) => state.announcement.loadingAction\r\n  );\r\n  const loadingAnnouncements = useSelector(\r\n    (state: any) => state.announcement.loadingAnnouncements\r\n  );\r\n\r\n  return (\r\n    <Card shadow minWidth=\"60vw\" padding=\".5em\">\r\n      <Grid customCols=\"auto 1fr auto\">\r\n        <div></div>\r\n        {toggler}\r\n        <Button\r\n          rounded\r\n          invert\r\n          padding=\".2em\"\r\n          shadow\r\n          faIcon={`fa fa-${\"plus\"}`}\r\n          onClick={add}\r\n          minWidth=\"4.5em\"\r\n        > Add\r\n        </Button>\r\n\r\n      </Grid>\r\n      <DIV>\r\n        <Table\r\n          className='min-height-table'\r\n          locale={locale}\r\n          key={Math.random() * 1000}\r\n          loading={loadingAnnouncements}\r\n          style={{ color: primaryColor, maxWidth: \"90vw\" }}\r\n          dataSource={announcements}\r\n          columns={columns(\r\n            edit,\r\n            (i: any) => remove(i), \r\n            loadingAction\r\n          )}\r\n          summary={(pageData) => <Table.Summary.Row\r\n            key={Math.random() * 1000}\r\n            className=\"bold\"\r\n            style={{ color: primaryColor }}\r\n          >\r\n            <br />\r\n                Total Annoucements: {pageData.length}\r\n          </Table.Summary.Row>\r\n          }\r\n        />\r\n      </DIV>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst DIV = styled.div`\r\n  @media (max-width: ${mobileWidth}) {\r\n    overflow-x: scroll;\r\n  }\r\n`;","import { actions } from \"../reducer/announcement\";\r\nimport api from \"../../api\";\r\nimport { Notification } from 'platyplex_ui';\r\nimport logger from \"../../utils/logger\";\r\n\r\ntype APICall = () => Promise<any>;\r\nexport const asyncHandler = async (apiCall: APICall, showError = false) => {\r\n  try {\r\n    let payload = await apiCall();\r\n    if (!payload || !payload.success)\r\n      throw new Error(payload.message || \"Error\");\r\n    return await payload;\r\n  } catch (e) {\r\n    if (showError) {\r\n      logger.log(e)\r\n      Notification.error({\r\n        title: \"Error: Annoucement\",\r\n        message: String(e?.message || e),\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const addAnnouncement = (eid: string, props: any) => {\r\n  return async (dispatch: any) => {\r\n    const payload = await asyncHandler(\r\n      () => api.addAnnoucement(eid, props),\r\n      true\r\n    );\r\n    if (payload && payload.success) {\r\n      dispatch({\r\n        type: actions.ADD_ANNOUNCEMENT_SUCCESS,\r\n        payload: { announcement: {...props, id: payload.announcementId} },\r\n      });\r\n\r\n      Notification.success({\r\n        title: \"Success\",\r\n        message: 'Your Announcement was added',\r\n      });\r\n    } else dispatch({ type: actions.ACTION_ANNOUNCEMENT_ERROR });\r\n  };\r\n};\r\n\r\nexport const editAnnouncement = (eid: string, props: any) => {\r\n  return async (dispatch: any) => {\r\n    dispatch({ type: actions.ACTION_ANNOUNCEMENT_PENDING });\r\n    const payload = await asyncHandler(\r\n      () => api.editAnnoucement(eid, props.id, props),\r\n      true\r\n    );\r\n\r\n    if (payload && payload.success) {\r\n      dispatch({\r\n        type: actions.EDIT_ANNOUNCEMENT_SUCCESS,\r\n        payload: {\r\n          announcement: props,\r\n        },\r\n      });\r\n\r\n      \r\n      Notification.success({\r\n        title: \"Success\",\r\n        message: 'Your Announcement was Edited',\r\n      });\r\n    } else dispatch({ type: actions.ACTION_ANNOUNCEMENT_ERROR });\r\n  };\r\n};\r\n\r\nexport const deleteAnnouncement = (eid: string, props: any) => {\r\n  return async (dispatch: any) => {\r\n    dispatch({ type: actions.ACTION_ANNOUNCEMENT_PENDING });\r\n    const payload = await asyncHandler(\r\n      () => api.deleteAnnoucement(eid, props.id),\r\n      true\r\n    );\r\n\r\n    if (payload && payload.success) {\r\n      dispatch({\r\n        type: actions.DELETE_ANNOUNCEMENT_SUCCESS,\r\n        payload: { announcement: props },\r\n      });\r\n\r\n      Notification.success({\r\n        title: \"Success\",\r\n        message: 'Your Announcement was deleted',\r\n      });\r\n    } else dispatch({ type: actions.ACTION_ANNOUNCEMENT_ERROR });\r\n  };\r\n};\r\n\r\nexport const getAnnouncements = (eid: string) => {\r\n  return async (dispatch: any) => {\r\n    dispatch({ type: actions.GET_ANNOUNCEMENTS_PENDING });\r\n    const payload = await asyncHandler(() => api.getAnnoucements(eid), true);\r\n    if (payload && payload.success) {\r\n      dispatch({\r\n        type: actions.GET_ANNOUNCEMENTS_SUCCESS,\r\n        payload: { announcements: payload?.announcements },\r\n      });\r\n    } else dispatch({ type: actions.GET_ANNOUNCEMENTS_ERROR });\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Grid, Button, Text } from \"platyplex_ui\";\r\nimport { Input, DatePicker } from 'antd';\r\nimport { useFormik } from 'formik';\r\nimport { moment, FORMAT_DATETIME, Moment } from '../../utils/time';\r\nimport Label from '../../components/label';\r\nimport logger from '../../utils/logger';\r\n\r\nconst nowISO = moment().toISOString();\r\n\r\nconst defaultValues = { title: \"\", body: \"\", status: \"active\", launchAt: nowISO, expiresAt: null };\r\n\r\nconst format = FORMAT_DATETIME;\r\nconst Form = ({ add, close, initialValues = defaultValues }: any) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const { handleSubmit, handleChange, values, setFieldValue  } = useFormik({\r\n        initialValues,\r\n        onSubmit(values) {\r\n            submit(values)\r\n        }\r\n    })\r\n    const submit = async (values: any) => {\r\n        try {\r\n            setLoading(true)\r\n            await add(values);\r\n            close();\r\n        } catch (e) {\r\n            logger.log(e)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const error = !values.launchAt || !values.body || !values.title\r\n    const style = {\r\n        padding: \".5em 1em\", height: \"100%\", width: \"100%\",\r\n        placeItems: \"center stretch\", gridGap: \".4em\", background: \"white\"\r\n    }\r\n\r\n    return (<form onSubmit={handleSubmit} className=\"grid\" style={{...style, gridGap: '1em'}}>\r\n        <div>\r\n            <Text textAlign=\"left\" bold>Annoucement Title <span className='red'>*</span></Text>\r\n            <Input\r\n                name={\"title\"}\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                placeholder=\"Example: SJSU Graduation Ceramony\"\r\n            />\r\n        </div>\r\n\r\n        <div>\r\n            <Text textAlign=\"left\" bold>Annoucement Message <span className='red'>*</span></Text>\r\n            <Input.TextArea  name={\"body\"} value={values.body} rows={5}\r\n                onChange={handleChange}\r\n                placeholder=\"Example: Information on the Event\" />\r\n        </div>\r\n\r\n        <div className=\"grid\" style={{placeItems: \"end\" }}>\r\n            <Text textAlign=\"left\" placeSelf=\"stretch\" bold>\r\n                Message Launch Date \r\n                <Label label={'Date on which the message will appear in ParkStash App'}/>\r\n            </Text>\r\n            <DatePicker\r\n                use12Hours\r\n                showTime={{format: 'hh:mm a'}}\r\n                format={format}\r\n                minuteStep={15}\r\n                style={{width: \"100%\"}}\r\n                value={moment(values.launchAt)}\r\n                onChange={(e: Moment | null) => { \r\n                  if (!e) return;\r\n                  setFieldValue(\"launchAt\", e.toISOString());\r\n                }} />\r\n        </div>\r\n\r\n        <div className=\"grid\" style={{placeItems: \"end\" }}>\r\n            <Text textAlign=\"left\" placeSelf=\"stretch\" bold>Message Expiry Date\r\n            <Label label={'Date on which the message will stop appearing in ParkStash App'}/>\r\n            </Text>\r\n            <DatePicker\r\n                use12Hours\r\n                style={{width: \"100%\"}}\r\n                showTime={{format: 'hh:mm a'}}\r\n                format={format}\r\n                minuteStep={15}\r\n                value={values.expiresAt? moment(values.expiresAt): null}\r\n                onChange={(e: Moment | null) => setFieldValue(\"expiresAt\", e?.toISOString() || null)} />\r\n        </div>\r\n\r\n        <Grid cols=\"2\" size=\"0.7em\" placeItems={\"stretch\"}>\r\n            <Button.Normal\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                onClick={() => close()}\r\n            >\r\n                Cancel\r\n                </Button.Normal>\r\n            {loading ? \r\n            <Button loading disabled>Loading</Button> :\r\n                <Button.Normal\r\n                    type=\"submit\"\r\n                    disabled={error}\r\n                    onSubmit={(e: any) => handleSubmit(e)}>\r\n                    Confirm\r\n            </Button.Normal>\r\n            }\r\n        </Grid>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import { useState, useEffect } from \"react\";\r\nimport API from \"../api\";\r\nimport { asyncHandler } from \"../utils\";\r\nimport { XyChart, ScoreCard } from \"../model/domain/dashboard\";\r\n\r\ninterface State {\r\n  charts?: XyChart[] | any;\r\n  dId?: string;\r\n  scoreCardOptions?: any;\r\n  scoreCards?: ScoreCard[] | any;\r\n  loading?: boolean,\r\n  error?: boolean,\r\n}\r\n\r\nexport const useWidgets = ({  eId, screen, resource = \"\" }:  any) => {\r\n  const [state, setter] = useState({\r\n    charts: [],\r\n    scoreCards: [],\r\n    scoreCardOptions: [],\r\n    dId: \"\",\r\n    loading: false,\r\n    error: false,\r\n  });\r\n\r\n  const setState = (obj: State) => setter({ ...state, ...obj });\r\n\r\n  const getWidgets = async (eId : string) => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () => API.getWidgets(eId),\r\n      errorMessage: \"Failed: Loading Charts\",\r\n    });\r\n\r\n    const res2 = await asyncHandler({\r\n      apiCall: () => API.getScoreCardOptions(eId, resource),\r\n      errorMessage: \"Failed: Loading Score Cards\",\r\n    });\r\n \r\n    const dashboards = res?.dashboards?.filter((dashboard: any)=> dashboard?.screen === screen) || [];\r\n    const { scoreCards, charts, id: dId } = dashboards[0] || { scoreCards : [], charts : [], id: '' };\r\n\r\n    setState({\r\n      loading: false,\r\n      error: !(res?.success || true),\r\n      scoreCards,\r\n      scoreCardOptions: res2?.metricDescriptors || [],\r\n      dId,\r\n      charts\r\n    });\r\n  };\r\n\r\n  const saveWidgets = async (props : any) => {\r\n    let { scoreCards = state.scoreCards, charts = state.charts } = props;\r\n   await asyncHandler({\r\n      apiCall: () => API.editWidgets(eId, state.dId, \r\n        {charts, scoreCards }),\r\n      errorMessage: \"Could not Edit Widgets\",\r\n      successMessage: \"Widget was Edited\",\r\n    });\r\n  };\r\n\r\n  const addWidget = (chart: XyChart) => {\r\n    const charts = [...state.charts, chart];\r\n    setState({ charts });\r\n    saveWidgets({...{ charts }});\r\n  }\r\n\r\n  const editScoreCards = (scoreCards: ScoreCard []) => {\r\n   if(scoreCards !== state.scoreCards){\r\n    setState({ scoreCards });\r\n    saveWidgets({ scoreCards });\r\n   }\r\n  }\r\n\r\n  const removeScoreCard = (index: number) => {\r\n    const scoreCards = state.scoreCards.filter((_: ScoreCard, i: number) => i !== index)\r\n    setState({ scoreCards });\r\n    saveWidgets({ scoreCards });\r\n  }\r\n\r\n  const removeChart = (index: number) => {\r\n    const charts = state.charts.filter((_: XyChart, i: number) => i !== index)\r\n    setState({ charts });\r\n    saveWidgets({...{charts }});\r\n  }\r\n\r\n  useEffect(() => {\r\n      getWidgets(eId);\r\n  }, [eId]);\r\n\r\n  return {\r\n    ...state,\r\n    getWidgets,\r\n    removeChart,\r\n    removeScoreCard,\r\n    addWidget,\r\n    editScoreCards,\r\n    saveWidgets\r\n  };\r\n};\r\n\r\nexport default {\r\n  useWidgets,\r\n};\r\n","import React from 'react'\r\nimport { Grid, List, Text } from 'platyplex_ui';\r\nimport { ScoreCard } from './score-card';\r\nimport { invertedTxtColor } from '../../config';\r\nimport { moment } from '../../utils/time';\r\n\r\nexport default ({ style, scoreCards, loading, refresh }: any) => {\r\n  return (\r\n    <div className=\"slide-up\"\r\n      style={{ width: \"100%\", gridColumn: \"1/-1\", padding: \".9em .5em\", ...style }}>\r\n      {!loading && <Text\r\n        style={{ gridColumn: '1/-1', fontSize: '.8em' }}\r\n        textAlign='right'\r\n        color={invertedTxtColor}\r\n      >\r\n       &nbsp; Updated at: {moment().format('hh:mm A')}\r\n      </Text>}\r\n      <Grid cols={loading ? 1 : 5} mobileCols='1fr 1fr' placeItems={loading ? 'center' : 'stretch'} style={{ minHeight: \"9em\" }}>\r\n        <List\r\n          list={scoreCards}\r\n          loading={loading}\r\n          map={(item: any, index: number) => (\r\n            <ScoreCard.FlatValue\r\n              refresh={refresh}\r\n              borderRight={index < scoreCards.length - 1}\r\n              name={item.title}\r\n              flatValueQuery={item.flatValueQuery}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n\r\n    </div>);\r\n}","import { useState, useEffect  } from \"react\";\r\n  \r\nexport const useRefresh = ()=> {  \r\n    const [ refresh, setRefresh ] = useState(true);\r\n\r\n    useEffect(()=>{if(!refresh)setRefresh(true)}, [ refresh])\r\n\r\n    return {\r\n        needsRefresh: refresh,\r\n        refresh: ()=>{console.log(\"refreshing\"); setRefresh(true)}\r\n    };\r\n\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport { Grid, Modal, Switch } from \"platyplex_ui\";\r\nimport Table from \"./table\";\r\nimport { primaryColor} from \"../../config\";\r\nimport img from \"../../assets/announ.svg\";\r\nimport { Announcement } from \"../../model/domain/announcements\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAnnouncements, addAnnouncement, deleteAnnouncement, editAnnouncement } from \"../../store/actions/announcement\";\r\nimport Form from \"./form\";\r\nimport { useWidgets } from \"../../hooks/widget\";\r\nimport ScoreCards from \"../../components/score-card/score-cards\";\r\nimport { useRefresh } from \"../../hooks/refresh\";\r\n\r\nconst states = {\r\n  ACTIVE: \"ACTIVE\",\r\n  ALL: \"ALL\",\r\n  EXPIRED: \"EXPIRED\",\r\n  DEFAULT: \"ACTIVE\",\r\n  states: [\"ACTIVE\", \"ALL\", \"EXPIRED\"],\r\n};\r\n\r\nconst AnnoucementEl = () => {\r\n  const eId = useSelector((state: any) => state.user.enterprise.id);\r\n  const screen = \"announcement\";\r\n  const resource = \"announcement\";\r\n\r\n  const { loading, scoreCards} = useWidgets({ eId, screen, resource });\r\n\r\n  const { needsRefresh, refresh } = useRefresh();\r\n  const announcements = useSelector(\r\n    (state: any) => state.announcement.announcements\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({ active: states.DEFAULT });\r\n\r\n  const add = (item: Announcement) => {\r\n    dispatch(addAnnouncement(eId, item));\r\n    refresh();\r\n  };\r\n\r\n  const edit = (item: Announcement) => dispatch(editAnnouncement(eId, item));\r\n  const remove = (i: number) => {\r\n    dispatch(deleteAnnouncement(eId, i));\r\n    refresh();\r\n  };\r\n\r\n  const AddModal = Modal({\r\n    title: \"Add Announcement\",\r\n    message: <Adder add={add} close={() => AddModal.close()} />,\r\n    hideCancel: true,\r\n  });\r\n\r\n  const open = (selected: Announcement) => {\r\n    const EditModal = Modal({\r\n      title: \"Edit Announcement\",\r\n      message: <Adder\r\n        add={edit}\r\n        initialValues={selected}\r\n        close={() => EditModal.close()}\r\n      />,\r\n      hideCancel: true,\r\n    });\r\n    EditModal.open();\r\n  }\r\n\r\n  const currentAnnouncements = announcements.filter(\r\n    ({ status }: any) =>\r\n      status.toUpperCase() === state.active || state.active === states.ALL\r\n  );\r\n\r\n\r\n  useEffect(() => {\r\n    if (eId) dispatch(getAnnouncements(eId));\r\n  }, [eId]);\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Layout.Top style={{paddingTop: '3em'}}>\r\n        <ScoreCards\r\n          refresh={refresh}\r\n          loading={loading}\r\n          scoreCards={scoreCards}\r\n        />\r\n        </Layout.Top>\r\n      <Layout.Bottom>\r\n      <Table \r\n       className='min-height-table'\r\n        edit={open} \r\n        add={AddModal.open}\r\n        remove={remove}\r\n        toggler={\r\n          <Switch\r\n            style={{margin: \"0 0 .5em 0\"}}\r\n            active={state.active}\r\n            items={states.states}\r\n            onClick={(active: string) => setState({ ...state, active })}\r\n          />\r\n        }\r\n        announcements={currentAnnouncements}\r\n      />\r\n      </Layout.Bottom>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst Adder = (props: any) => {\r\n  return (\r\n    <Grid customCols=\"3fr 2fr\" width=\"100%\" height=\"100%\" gridGap=\"0\">\r\n      <div style={{ background: primaryColor, height: \"100%\", padding: \"1em\", width: \"100%\" }}>\r\n        <img src={img} style={{ maxWidth: \"300px\" }} />\r\n      </div>\r\n      <Form {...props} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AnnoucementEl;","import {  yearToDate, getInterval,  currentMonth } from \"../../utils/time\";\r\n\r\nconst json = {\r\n   \"timeframes\": [\r\n      {\r\n         \"label\": \"Custom\",\r\n         \"enteries\": [\r\n            {\r\n               \"value\": null,\r\n               \"label\": \"Custom\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"label\": \"To-Date\",\r\n         \"enteries\": [\r\n            {\r\n               \"value\": currentMonth(),\r\n               \"label\": \"Current Month\",\r\n               defaultValue: true\r\n            },\r\n            {\r\n               \"value\": currentMonth(-1),\r\n               \"label\": \"Last Month\"\r\n            },\r\n            {\r\n               \"value\": yearToDate(),\r\n               \"label\": \"Year To Date\"\r\n            },\r\n         ]\r\n      },\r\n      {\r\n         \"label\": \"Interval\",\r\n         \"enteries\": [\r\n            {\r\n               \"value\": getInterval(30),\r\n               \"label\": \"Last 30 Days\"\r\n            },\r\n            {\r\n               \"value\": getInterval(90),\r\n               \"label\": \"Last 90 Days\"\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"aggregations\": {\r\n      \"label\": \"Aggregations\",\r\n      \"values\": [\r\n       \r\n         {\r\n            \"label\": \"Daily\",\r\n            \"value\": {\r\n               \"alignmentReducer\": \"SUM\",\r\n               \"alignmentPeriod\": \"1d\"\r\n            }\r\n         },\r\n         {\r\n            \"label\": \"Weekly\",\r\n            \"value\": {\r\n               \"alignmentReducer\": \"SUM\",\r\n               \"alignmentPeriod\": \"1w\"\r\n            }\r\n         },\r\n         {\r\n            \"label\": \"Monthly\",\r\n            \"value\": {\r\n               \"alignmentReducer\": \"SUM\",\r\n               \"alignmentPeriod\": \"1m\"\r\n            }\r\n         }\r\n      ]}\r\n}\r\n\r\nexport default json;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid, Button } from 'platyplex_ui';\r\nimport Filter from '../../components/filter';\r\nimport { useMetricData } from '../../hooks/metrics';\r\nimport useTimeseries from '../../hooks/timeseries';\r\nimport options from './filter-options';\r\nimport chart from './chart.json';\r\nimport Chart from '../../components/chart';\r\nimport { currentMonth } from '../../utils/time';\r\nimport { Select } from 'antd';\r\n\r\nconst revenueTimeSeries = {...chart.revenueTimeSeriesQuery, interval: currentMonth()};\r\nconst countTimeSeries = { ...chart.transactionCountTimeSeriesQuery, interval: currentMonth() };\r\n\r\nconst Analytics = () => {\r\n    const filterWidth = 375;\r\n    const [ open, setOpen ] = useState(true);\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const [toggle, setToggle] = useState(false);\r\n    const revenueMetric = useMetricData({\r\n        timeseries: revenueTimeSeries,\r\n        interval: currentMonth(),\r\n        eId\r\n    });\r\n\r\n    const countMetric = useMetricData({\r\n        timeseries: countTimeSeries,\r\n        interval: currentMonth(),\r\n        eId\r\n    });\r\n\r\n    const { timeseries, actions } = useTimeseries(revenueTimeSeries as any);\r\n\r\n    const filterProps = {\r\n        defaultValue: timeseries,\r\n        metricDataStatus: revenueMetric.metricDataStatus,\r\n        filterWidth,\r\n        loading: revenueMetric.metricDataStatus.loading || countMetric.metricDataStatus.loading,\r\n        submit: () => {\r\n            setTimeout(()=>setOpen(false), 400);\r\n            revenueMetric.refresh(timeseries);\r\n            countMetric.refresh({ ...timeseries, metricType: \"citation_transaction_count\" })\r\n        },\r\n        actions,\r\n        hideTimeSelection: true,\r\n        timeseries,\r\n        options: { ...options, aggregations: undefined }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (toggle) {\r\n            revenueMetric.refresh(timeseries);\r\n            countMetric.refresh({ ...timeseries, metricType: \"citation_transaction_count\" })\r\n            setToggle(false)\r\n        }\r\n    }, [timeseries]);\r\n\r\n\r\n    const selectProps = {\r\n        style: { width: '100px', marginRight: \"1em\" },\r\n        disabled: revenueMetric.metricDataStatus.loading || countMetric.metricDataStatus.loading\r\n    };\r\n    return (\r\n        <Grid placeItems=\"start stretch\" padding=\"1em\" height=\"100%\">\r\n            <Grid cols=\"1\" gridGap=\"0 1em\">\r\n                <Chart.Multi\r\n                    className='slide-up'\r\n                    filterWidth={filterWidth}\r\n                    metricDataStatuses={[revenueMetric.metricDataStatus, countMetric.metricDataStatus]}\r\n                    {...chart as any}\r\n                    eId={eId}\r\n                    queries={{transactionTimeSeriesQuery : { ...timeseries, metricType: \"citation_transaction_count\" }, revenueTimeSeriesQuery: timeseries}}\r\n                    legend={{ label: 'Citations' }}\r\n                    filter={\r\n                        <AdditionalFilter\r\n                            actions={actions}\r\n                            open={open}\r\n                            selectProps={selectProps}\r\n                            setToggle={setToggle}\r\n                            setOpen={setOpen}\r\n                        />}\r\n                />\r\n                <Filter {...filterProps} open={open} toggle={()=>{setOpen(false); actions.refresh(revenueTimeSeries)}} />\r\n            </Grid>\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nconst AdditionalFilter = ({ actions, open, selectProps, setToggle, setOpen }: any) => (\r\n    <div>\r\n        <Select\r\n            onChange={(e: any) => {\r\n                actions.setAlignment(JSON.parse(e));\r\n                setToggle(true);\r\n            }}\r\n            defaultValue={\"Daily\"}\r\n            {...selectProps}\r\n        >\r\n            {options.aggregations.values.map(({ value, label }: any) => <Select.Option value={JSON.stringify(value)}>\r\n                {label}\r\n            </Select.Option>)}\r\n        </Select>\r\n        {!open ?\r\n            <Button\r\n                placeSelf=\"end\"\r\n                rounded\r\n                shadow\r\n                minWidth=\"3em\"\r\n                onClick={() => setOpen(!open)}\r\n                faIcon={`fa fa-filter`}\r\n            /> : null}</div>\r\n)\r\n\r\nexport default Analytics;","import React from 'react';\r\nimport Layout from '../../layout';\r\nimport ScoreCards from '../../components/score-card/score-cards';\r\nimport { useWidgets } from '../../hooks/widget';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid } from \"platyplex_ui\";\r\nimport Analytics from './analytics';\r\n\r\nconst Citations = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { loading, scoreCards } = useWidgets({ eId, screen: \"citation\" });\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Grid customCols=\"1fr auto\" width=\"100%\" gridGap=\"0\" placeItems=\"start\" style={{ height: \"100%\" }}>\r\n                <div style={{ width: \"100%\", placeSelf: 'start end' }}>\r\n                    <Layout.Top >\r\n                        <div></div>\r\n                        <ScoreCards\r\n                            loading={loading}\r\n                            eId={eId}\r\n                            scoreCards={scoreCards}\r\n                        />\r\n                    </Layout.Top>\r\n                    <Layout.Bottom >\r\n                        <Analytics />\r\n                    </Layout.Bottom>\r\n                </div>\r\n            </Grid>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Citations;","import { Button, Grid } from \"platyplex_ui\";\r\nimport React, { useState } from 'react';\r\nimport { Popconfirm } from 'antd';\r\nimport { moment, FORMAT_DATETIME, NEW_FORMAT_DATETIME } from '../../../utils/time';\r\nimport Label from '../../../components/label';\r\nimport { Event } from '../type';\r\n  \r\nconst columns = (edit: any, remove: any, loadingAction = false, index = 0) => {\r\n    return [{\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        render: (text: string) => <div className='txt-overflow'>{text}</div>\r\n    },\r\n    {\r\n        title: 'Location',\r\n        dataIndex: 'location',\r\n        key: 'location',\r\n        render: (text: string) => <div className='txt-overflow'>{text}</div>\r\n    },\r\n    {\r\n        title: 'Start Time',\r\n        dataIndex: 'startTime',\r\n        key: 'startTime',\r\n        render: (t: string) => moment(t).format(FORMAT_DATETIME)\r\n    },\r\n    {\r\n        title: 'End Time',\r\n        dataIndex: 'endTime',\r\n        key: 'endTime',\r\n        render: (t: string) => moment(t).format(FORMAT_DATETIME)\r\n    },\r\n    {\r\n        title: <span>Launch Date <Label label={'Date on which the message will appear in ParkStash App'} /></span>,\r\n        key: 'launchAt',\r\n        dataIndex: 'launchAt',\r\n        render: (t: string) => moment(t).format(NEW_FORMAT_DATETIME)\r\n    },\r\n    {\r\n        title: <span>Dynamic Dates<Label label={'Date on which price was changed'} /></span>,\r\n        key: 'endTime',\r\n        dataIndex: 'endTime',\r\n        render: (t: string) => <>\r\n                    {`${moment(t).set('day', -4).hour(9).minutes(32).format(FORMAT_DATETIME)} to `}<br/>\r\n                    {`${moment(t).format(FORMAT_DATETIME)}`}\r\n                    </>\r\n    },\r\n\r\n    {\r\n        title: <span>Garages <Label label={'Date on which the message will appear in ParkStash App'} /></span>,\r\n        key: 'garages',\r\n        dataIndex: 'garages',\r\n        render: GaragesList\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (_: any, record: any) => {\r\n            return (\r\n                <Grid>\r\n                    <Button\r\n                        shadow\r\n                        disabled={loadingAction}\r\n                        loading={loadingAction}\r\n                        onClick={() => edit(record)}\r\n                    >\r\n                        <i className=\"fa fa-edit\"></i> &nbsp;Edit\r\n                    </Button>\r\n\r\n                    <Popconfirm\r\n                        okButtonProps={{ size: 'middle' }}\r\n                        cancelButtonProps={{ size: 'middle' }}\r\n                        title=\"Are you sure\"\r\n                        onConfirm={() => remove(record)}\r\n                    >\r\n                        <Button\r\n                            shadow\r\n                            bg=\"red\"\r\n                            disabled={loadingAction}\r\n                            loading={loadingAction}\r\n                        >\r\n                            <i className=\"fa fa-trash\"></i> &nbsp;Delete\r\n                        </Button>\r\n                    </Popconfirm>\r\n                </Grid>\r\n            )\r\n        },\r\n    },\r\n    ]\r\n};\r\n\r\nconst garages = [ 'North 10th St Garage','South 7th St Garage','West 4th St Garage']\r\nconst GaragesList = (g: Event.Garage[]) => {\r\n    const [show, setShow] =  useState(false)\r\n    return <>\r\n    {g.map((garage, i) => {\r\n        if (i > 1 && !show) return null;\r\n        if (i === 1 && !show) \r\n        return (\r\n            <span className='bold pointer' style={{ float: 'right' }} onClick={()=>setShow(!show)}> \r\n                Show More&nbsp;<i className='fa fa-chevron-down'></i>\r\n            </span>);\r\n\r\n        return (\r\n            <div className='badge inverted' style={{ marginBottom: \".5em\" }}>\r\n                <b>{garages[i % garages.length]}: </b> <b className='right'>${garage.price}</b>\r\n                <br />\r\n                Estimated Staff: &nbsp;&nbsp; {garage.staffExpected} <br/>Actual Staff Assigned: {garage.staffOccupancy} \r\n                <br/>\r\n                Spaces Assigned: {garage.maxOccupancy} \r\n            </div>\r\n        )\r\n    })}\r\n    {show &&\r\n      <span className='bold pointer' style={{ float: 'right' }} onClick={()=>setShow(!show)}> \r\n                See Less&nbsp;<i className='fa fa-chevron-up'></i>\r\n     </span>}\r\n    </>\r\n}\r\nexport default columns;","import React from \"react\";\r\nimport { Card, Empty, Button, Grid} from \"platyplex_ui\";\r\nimport { Table } from \"antd\";\r\nimport { primaryColor, mobileWidth } from \"../../../config\";\r\nimport styled from \"styled-components\";\r\nimport columns from \"./columns\";\r\n\r\nlet locale = {\r\n  emptyText: <Empty text=\"No Event\" />\r\n};\r\n\r\nexport default ({ events, edit, add, toggler, remove, loading }: any) => {\r\n\r\n  return (\r\n    <Card shadow minWidth=\"60vw\" padding=\".5em\">\r\n      <Grid customCols=\"auto 1fr auto\">\r\n        <div></div>\r\n        {toggler}\r\n        <Button\r\n          rounded\r\n          invert\r\n          padding=\".2em\"\r\n          shadow\r\n          faIcon={`fa fa-${\"plus\"}`}\r\n          onClick={add}\r\n          minWidth=\"4.5em\"\r\n        > Add\r\n        </Button>\r\n\r\n      </Grid>\r\n      <DIV>\r\n        <Table\r\n          className='min-height-table'\r\n          locale={locale}\r\n          key={Math.random() * 1000}\r\n          loading={loading}\r\n          style={{ color: primaryColor, maxWidth: \"90vw\" }}\r\n          dataSource={events}\r\n          columns={columns(\r\n            edit,\r\n            (i: any) => remove(i), \r\n            false\r\n          )}\r\n        />\r\n      </DIV>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst DIV = styled.div`\r\n  @media (max-width: ${mobileWidth}) {\r\n    overflow-x: scroll;\r\n  }\r\n`;","import React from 'react';\r\nimport { Grid, Header as Text } from \"platyplex_ui\";\r\nimport useGarages from '../../../hooks/garage';\r\nimport { useSelector } from 'react-redux';\r\nimport { ScoreCard } from '../../../components/score-card/score-card';\r\nimport { moment } from '../../../utils/time';\r\nimport { invertedTxtColor } from '../../../config';\r\n\r\nconst Header = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n\r\n    return (\r\n        <Grid\r\n            cols='5'\r\n            style={{ gridColumn: '1/-1' }}\r\n            width='100%'\r\n            padding='1.5em 1.5em 0 1.5em'\r\n        >  \r\n            <Text\r\n                className='hide-mobile'\r\n                style={{ gridColumn: '1/-1', placeSelf: \"end\" }}\r\n                size={4.6}\r\n                color={invertedTxtColor}\r\n            >\r\n                Updated at: {moment().format('hh:mm A')}\r\n            </Text>\r\n\r\n            <ScoreCard title='Active Events' faIcon='fa fa-event' hoverLabel='Active Events' borderRight>\r\n                <span className='txt-lgx'>2</span>\r\n                <span className='txt-md'>/2</span>\r\n            </ScoreCard>\r\n\r\n            <ScoreCard title='Past Events' faIcon='fa fa-event' hoverLabel='Past Events' borderRight>\r\n                <span className='txt-lgx'>0</span>\r\n            </ScoreCard>\r\n\r\n        </Grid>);\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport { Grid, Button, Text, Header } from \"platyplex_ui\";\r\nimport { Input, DatePicker, Switch, InputNumber, Select } from 'antd';\r\nimport { useFormik } from 'formik';\r\nimport { moment, FORMAT_DATETIME, Moment } from '../../../utils/time';\r\nimport Label from '../../../components/label';\r\nimport logger from '../../../utils/logger';\r\nimport { Event } from '../type';\r\nimport { Garage } from '../../../model/domain/garage';\r\nimport useGarages from '../../../hooks/garage';\r\n\r\nconst nowISO = moment().toISOString();\r\n\r\nconst defaultValues = () : Event.Event=> ({\r\n    id: String(Math.random() * 10000),\r\n    name: \"\",\r\n    status: 'active',\r\n    location: \"\",\r\n    type: \"paid\",\r\n    startTime: new Date().toISOString(),\r\n    endTime: new Date().toISOString(),\r\n    launchAt: nowISO,\r\n    garages: [defaultGarage],\r\n});\r\n\r\nconst defaultGarage : Event.Garage = {\r\n    id: '',\r\n    price: 0,\r\n    staffExpected: 0,\r\n    staffOccupancy: 0,\r\n    maxOccupancy: 0\r\n}\r\nconst format = FORMAT_DATETIME;\r\nconst Form = ({ add, close, initialValues = defaultValues(), eId }: any) => {\r\n    const { garages } = useGarages({ eId });\r\n    const [loading, setLoading] = useState(false);\r\n    const { handleSubmit, handleChange, values, setFieldValue } = useFormik({\r\n        initialValues,\r\n        onSubmit(values) {\r\n            submit(values)\r\n        }\r\n    })\r\n    const submit = async (values: any) => {\r\n        try {\r\n            setLoading(true)\r\n            await add(values);\r\n            close();\r\n        } catch (e) {\r\n            logger.log(e)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const error = !values.name || !values.location\r\n    const style = {\r\n        padding: \".5em 1em\", height: \"100%\", width: \"100%\",\r\n        placeItems: \"start stretch\", gridGap: \".4em\", background: \"white\"\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Header bold textAlign='left'>Event Information</Header>\r\n    <form onSubmit={handleSubmit} className=\"grid\" style={{ \r\n    ...style, gridGap: '1em', maxWidth: '500px',\r\n     overflowY: 'auto' }}>\r\n     \r\n        <div>\r\n            <Text textAlign=\"left\" bold>Name<span className='red'>*</span></Text>\r\n            <Input\r\n                name={\"name\"}\r\n                value={values.name}\r\n                onChange={handleChange}\r\n                placeholder=\"Example: SJSU Graduation Ceramony\"\r\n            />\r\n        </div>\r\n\r\n        <div>\r\n            <Text textAlign=\"left\" bold>Location <span className='red'>*</span></Text>\r\n            <Input\r\n                name={\"location\"}\r\n                value={values.location}\r\n                onChange={handleChange}\r\n                placeholder=\"Example: 3300 Madison St\"\r\n            />\r\n        </div>\r\n\r\n        <div className=\"grid\" style={{ placeItems: \"end\" }}>\r\n            <Text textAlign=\"left\" placeSelf=\"stretch\" bold>\r\n                Start Time\r\n                <Label label={'Date on which the event will start'} />\r\n            </Text>\r\n            <DatePicker\r\n                use12Hours\r\n                showTime={{ format: 'hh:mm a' }}\r\n                format={format}\r\n                minuteStep={15}\r\n                style={{ width: \"100%\" }}\r\n                value={moment(values.startTime)}\r\n                onChange={(e: Moment | null) => {\r\n                    if (!e) return;\r\n                    setFieldValue(\"startTime\", e.toISOString());\r\n                }} />\r\n        </div>\r\n\r\n        <div className=\"grid\" style={{ placeItems: \"end\" }}>\r\n            <Text textAlign=\"left\" placeSelf=\"stretch\" bold>\r\n                End Time\r\n                <Label label={'Date on which the event will end'} />\r\n            </Text>\r\n            <DatePicker\r\n                use12Hours\r\n                showTime={{ format: 'hh:mm a' }}\r\n                format={format}\r\n                minuteStep={15}\r\n                style={{ width: \"100%\" }}\r\n                value={moment(values.endTime)}\r\n                onChange={(e: Moment | null) => {\r\n                    if (!e) return;\r\n                    setFieldValue(\"endTime\", e.toISOString());\r\n                }} />\r\n        </div>\r\n\r\n        <div className=\"grid\" style={{ placeItems: \"end\" }}>\r\n            <Text textAlign=\"left\" placeSelf=\"stretch\" bold>\r\n                Launch Date\r\n                <Label label={'Date on which the message will appear in ParkStash App'} />\r\n            </Text>\r\n            <DatePicker\r\n                use12Hours\r\n                showTime={{ format: 'hh:mm a' }}\r\n                format={format}\r\n                minuteStep={15}\r\n                style={{ width: \"100%\" }}\r\n                value={moment(values.launchAt)}\r\n                onChange={(e: Moment | null) => {\r\n                    if (!e) return;\r\n                    setFieldValue(\"launchAt\", e.toISOString());\r\n                }} />\r\n        </div>\r\n\r\n        <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                <Text textAlign=\"left\" placeSelf=\"end start\" bold>\r\n                    Paid Event \r\n                </Text>\r\n                <Switch\r\n                    checked={values.type === 'paid'}\r\n                    style={{ placeSelf: \"end\" }}\r\n                    onChange={(checked: boolean) => \r\n                        setFieldValue(\"type\", checked? 'paid': 'free')\r\n                    }\r\n                />\r\n        </Grid>\r\n        <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\"  customCols='1fr auto'>\r\n                <Text textAlign=\"left\" placeSelf=\"end start\">\r\n                <span className='bold'>Add a Garages:</span> Garages ({values.garages.length})\r\n                </Text>\r\n                <i className='fa fa-plus pointer' onClick={()=>setFieldValue(\"garages\", [...values.garages, defaultGarage])}></i>\r\n                {values.garages.map(({}: Event.Garage, i: number)=>(\r\n                <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" customCols='auto 1fr' style={{gridColumn: '1/-1'}}>\r\n              \r\n                    <Text style={{gridRow: 'span 5'}}>{i + 1}.</Text> \r\n\r\n                    <Select\r\n                    style={{width: \"100%\"}}\r\n                   // value={values.garages[i].id}\r\n                //    onChange={(e) =>setFieldValue('garages', e)}\r\n                >\r\n                {garages.map(({ name, id }: Garage) => <Select.Option value={id}>{name}</Select.Option>)}\r\n                </Select>\r\n                    {values.type === 'paid' && \r\n                    <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                      <Text textAlign=\"left\" placeSelf=\"end start\" bold>Price ($)</Text>\r\n                           <InputNumber\r\n                               min={0}\r\n                               step={0.25}\r\n                               style={{ placeSelf: \"end\" }}\r\n                           //    value={values.garages[i].price}\r\n                        //       onChange={(e) => setFieldValue(\"price\", e)}\r\n                               name={\"price\"}\r\n                           />\r\n                   </Grid>}\r\n\r\n                   <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                       <Text textAlign=\"left\" placeSelf=\"end start\" bold>Max Occupancy: </Text>\r\n                           <InputNumber\r\n                               min={0}\r\n                               style={{ placeSelf: \"end\" }}\r\n                           //    value={values.garages[i].maxOccupancy}\r\n                         //      onChange={(e) => setFieldValue(\"maxOccupancy\", e)}\r\n                               name={\"maxOccupancy\"}\r\n                           />\r\n                   </Grid>\r\n                   <Grid margin=\".6em 0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                       <Text textAlign=\"left\" placeSelf=\"end start\" bold>Staffs: </Text>\r\n                           <InputNumber\r\n                               min={0}\r\n                               style={{ placeSelf: \"end\" }}\r\n                             //  value={values.garages[i].staffOccupancy}\r\n                           //    onChange={(e) => setFieldValue(\"staffOccupancy\", e)}\r\n                               name={\"staffOccupancy\"}\r\n                           />\r\n                   </Grid>\r\n                   <Text \r\n                   textAlign='right' \r\n                   className='pointer' \r\n                   margin='0 0 2em 0'\r\n                   bold\r\n                   onClick={()=>setFieldValue('garages', values.garages.filter((_: any, index: number)=> index !== i))}\r\n                   >\r\n                       Remove this Garage\r\n                   </Text>\r\n                </Grid>))}\r\n        </Grid>\r\n \r\n        <Grid cols=\"2\" size=\"0.7em\" placeItems={\"stretch\"} style={{marginBottom: '5em'}}>\r\n            <Button.Normal\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                onClick={() => close()}\r\n            >\r\n                Cancel\r\n                </Button.Normal>\r\n            {loading ?\r\n                <Button loading disabled>Loading</Button> :\r\n                <Button.Normal\r\n                    type=\"submit\"\r\n                    disabled={error}\r\n                    onSubmit={(e: any) => handleSubmit(e)}>\r\n                    Finish\r\n            </Button.Normal>\r\n            }\r\n        </Grid>\r\n    </form>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import { useState, useEffect } from \"react\";\r\nimport API from \"../api\";\r\nimport { asyncHandler } from \"../utils\";\r\nimport { Event } from \"../pages/events/type\";\r\nimport { moment} from '../utils/time'\r\n\r\nconst event = (event, location) => ({ \r\n  id: String(Math.random() * 10000),\r\n  name: event, \r\n  location,\r\n  type: \"free\",\r\n  status: \"active\",\r\n  startTime: moment().hour(8).minute(0).second(0).toISOString(),\r\n  endTime: moment().hour(18).minute(0).second(0).toISOString(),\r\n  launchAt: moment().set('days', -7).toISOString(), \r\n  garages : [\r\n      {\r\n          maxOccupancy: 1300,\r\n          staffOccupancy: 2,\r\n          staffExpected: 4,\r\n          price: 8,\r\n          id: '4444'\r\n      },\r\n      {\r\n        maxOccupancy: 1300,\r\n        staffOccupancy: 3,\r\n        staffExpected: 3,\r\n        price: 8,\r\n        id: '4444'\r\n    },\r\n      {\r\n        maxOccupancy: 1300,\r\n        staffOccupancy: 2,\r\n        staffExpected: 3,\r\n        price: 8,\r\n        id: '4444'\r\n    }\r\n  ],\r\n})\r\n\r\nconst events = [event(\"Taylor Swift Concert\", \"SJSU Event Center\"), event(\"Jay-Z Concert\", \"CEFCU Stadium\")];\r\nexport const useEvents = ({ eId , refresh = ()=>{}}: any) => {\r\n  const [state, setter ] = useState({\r\n    events: [] as Event.Event[],\r\n    loading: false,\r\n    error: false\r\n  });\r\n\r\n  const setState = (obj: any) => setter({ ...state, ...obj });\r\n\r\n  const getEvents = async () => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () => API.getEnterpriseUsers(eId),\r\n      notify: false,\r\n    });\r\n    setState({\r\n      loading: false,\r\n      error: res?.success || true,\r\n      events: events,\r\n    });\r\n  };\r\n\r\n  const removeEvent = async (event: Event.Event) => {\r\n    setState({ loading: true, error: false });\r\n    // const res = await asyncHandler({\r\n    //   apiCall: () => API.removeEnterpriseUser(eId, event.id),\r\n    //   successMessage: \"User was Rejected\",\r\n    //   errorMessage: \"User was not Rejected\",\r\n    //   refresh\r\n    // });\r\n\r\n    const newEvents = state.events.filter((e: Event.Event)=> e.id !== event.id)\r\n    setState({ loading: false, error: false, events: newEvents });\r\n\r\n  };\r\n\r\n  const addEvent = async (event: Event.Event) => {\r\n    console.log('here')\r\n    setState({ loading: true, error: false });\r\n    // const res = await asyncHandler({\r\n    //   apiCall: () => API.removeEnterpriseUser(eId, event),\r\n    //   successMessage: \"User was Rejected\",\r\n    //   errorMessage: \"User was not Rejected\",\r\n    //   refresh\r\n    // });\r\n\r\n    setState({ loading: false, error: false, events: [...state.events, event] });\r\n  };\r\n  \r\n  const editEvent = async (event: Event.Event) => {\r\n    setState({ loading: true, error: false });\r\n\r\n\r\n    setState({ loading: false, error: false });\r\n  };\r\n\r\n\r\n  useEffect(() => {getEvents();}, [eId]);\r\n  return {\r\n    ...state,\r\n    actions: {\r\n      removeEvent,\r\n      refreshEvent: getEvents,\r\n      addEvent,\r\n      editEvent\r\n    }\r\n  };\r\n};\r\n\r\nexport default {\r\n  useEvents,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from '../../../layout';\r\nimport img from '../../../assets/eventss.svg';\r\nimport { Grid, Modal, Switch, Text } from \"platyplex_ui\";\r\nimport Table from \"./table\";\r\nimport Header from \"./header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Form from \"./form\";\r\nimport { useRefresh } from \"../../../hooks/refresh\";\r\nimport { useEvents } from \"../../../hooks/events\";\r\nimport { Event } from \"../type\";\r\nimport { Overlay } from 'platyplex_ui';\r\nimport { disabledTxtColor } from \"../../../config\";\r\n\r\nconst states = {\r\n    ACTIVE: \"ACTIVE\",\r\n    ALL: \"ALL\",\r\n    EXPIRED: \"EXPIRED\",\r\n    DEFAULT: \"ACTIVE\",\r\n    states: [\"ACTIVE\", \"ALL\", \"EXPIRED\"],\r\n};\r\n\r\nconst Listings = ({ switches }: { switches: JSX.Element }) => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const [state, setState] = useState({ active: states.DEFAULT });\r\n    const { needsRefresh, refresh } = useRefresh();\r\n    const { events, actions, loading} = useEvents({ eId, refresh })\r\n    const AddModal = Modal({\r\n        title: \"Add Event\",\r\n        className: 'hide',\r\n        modal: <Adder add={actions.addEvent} close={() => AddModal.close()} eId={eId}/>,\r\n        hideCancel: true,\r\n    });\r\n\r\n    const open = (selected:Event.Event) => {\r\n        const EditModal = Modal({\r\n            title: \"Edit Event\",\r\n            modal: <Adder\r\n                eId={eId}\r\n                add={actions.editEvent}\r\n                initialValues={selected}\r\n                close={() => EditModal.close()}\r\n            />,\r\n            hideCancel: true,\r\n        });\r\n        EditModal.open();\r\n    }\r\n\r\n    const currentEvents = events.filter(\r\n        ({ status }: Event.Event) =>\r\n            status.toUpperCase() === state.active || state.active === states.ALL\r\n    );\r\n\r\n    useEffect(() => {\r\n        //  if (eId) dispatch(getAnnouncements(eId));\r\n    }, [eId]);\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Layout.Top >\r\n                {switches}\r\n                <Header />\r\n            </Layout.Top>\r\n            <Layout.Bottom>\r\n                <Table\r\n                    className='min-height-table'\r\n                    edit={open}\r\n                    add={AddModal.open}\r\n                    remove={actions.removeEvent}\r\n                    loading={loading}\r\n                    toggler={\r\n                        <Switch\r\n                            style={{ margin: \"0 0 .5em 0\" }}\r\n                            active={state.active}\r\n                            items={states.states}\r\n                            onClick={(active: string) => setState({ ...state, active })}\r\n                        />\r\n                    }\r\n                    events={currentEvents}\r\n                />\r\n            </Layout.Bottom>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nconst Adder = (props: any) => {\r\n    return (\r\n        <Overlay image={img} className='opacity'>\r\n            <Text\r\n                color={disabledTxtColor}\r\n                margin='.5em'\r\n                placeSelf='start'\r\n                bold\r\n                textAlign='left'\r\n                onClick={props.close}\r\n                className='pointer'\r\n            >\r\n                <i className='fa fa-chevron-left'></i> Back\r\n            </Text>\r\n\r\n            <Grid  height='100%' customRows='auto auto 1fr'>\r\n            <Form {...props} />\r\n            </Grid>\r\n        </Overlay>\r\n    );\r\n};\r\n\r\nexport default Listings;","import React, { useState } from \"react\";\r\nimport Pie from \"@vx/shape/lib/shapes/Pie\";\r\nimport { Group } from \"@vx/group\";\r\nimport { getColor } from \"../../utils/color\";\r\nimport { Tooltip } from \"antd\";\r\n\r\nconst defaultMargin = { top: 0, right: 0, bottom: 0, left: 0 };\r\n\r\nexport type PieProps = {\r\n    width: number;\r\n    height: number;\r\n    data: any[];\r\n    text: any;\r\n    margin?: typeof defaultMargin;\r\n};\r\n\r\nexport default function PieChart({\r\n    width,\r\n    height,\r\n    text,\r\n    data,\r\n    margin = defaultMargin,\r\n}: PieProps) {\r\n\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n    const radius = Math.min(innerWidth, innerHeight) / 2;\r\n    const centerY = innerHeight / 2;\r\n    const centerX = innerWidth / 2;\r\n    const donutThickness = 10;\r\n    const [selected, setSelected] = useState(-1);\r\n    const event = (i = -1) => ({\r\n        onTouchStart: () => setSelected(i),\r\n        onTouchMove: () => setSelected(i),\r\n        onMouseMove: () => setSelected(i),\r\n        onMouseLeave: () => setSelected(-1)\r\n    })\r\n\r\n    return (\r\n        <svg width={width} height={height}>\r\n            <rect\r\n                rx={14}\r\n                width={width}\r\n                height={height}\r\n                fill=\"transparent\"\r\n            />\r\n            <g>\r\n                <text\r\n                    fill=\"white\"\r\n                    x={centerX}\r\n                    fontWeight='bold'\r\n                    textAnchor=\"middle\"\r\n                    dy='8px'\r\n                    y={centerY}\r\n                    fontSize={24}\r\n                >  {text}\r\n                </text>\r\n            </g>\r\n            <Group top={centerY + margin.top} left={centerX + margin.left}>\r\n                <Pie\r\n                    data={data}\r\n                    fill='#5578D6'\r\n                    pieValue={(d: any) => d.value}\r\n                    outerRadius={radius}\r\n                    innerRadius={radius - donutThickness}\r\n                    cornerRadius={3}\r\n                    padAngle={0.005}\r\n                    children={(pie: any) => (\r\n                        pie.arcs.map((item: any, i: number) => (\r\n                            <g key={0}>\r\n                                {item.data.label ?\r\n                                    <Tooltip title={item.data.label}>\r\n                                        <path\r\n                                            d={pie.path(item)}\r\n                                            fill={getColor(i) + (selected === -1 ? 'FF' : selected === i ? 'BB' : '50')}\r\n                                            {...event(i)}\r\n                                        />\r\n                                    </Tooltip> :\r\n\r\n                                    <path d={pie.path(item)} fill={getColor(i)} />}\r\n                            </g>\r\n                        ))\r\n                    )}\r\n                />\r\n            </Group>\r\n        </svg>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport { useMetricData } from '../../hooks/metrics';\r\nimport { defaultInterval } from '../../utils/time';\r\nimport API from \"../../api\";\r\nimport { TimeSeries } from '../../model/domain/metrics';\r\n\r\nfunction getAnalyticsCharts() {\r\n  const me: EnterpriseEvent = this;\r\n\r\n  const chart = (title: string, metricType: string, chartType: string) => ({\r\n    title,\r\n    timeSeriesQuery: {\r\n      metricType,\r\n      resourceIds: [me.id],\r\n      crossSeriesReducer: 'NONE',\r\n      alignment: {\r\n        alignmentPeriod: '1d',\r\n        alignmentReducer: 'SUM'\r\n      },\r\n      interval: {\r\n        startTime: me.analyticsQueryInterval.startTime,\r\n        endTime: me.analyticsQueryInterval.endTime,\r\n      }\r\n    },\r\n    backgroundColor: '#FFFFFF',\r\n    xAxisLabel: 'T',\r\n    yAxisLabel: 'Occupancy',\r\n    chartTypes: [chartType]\r\n  });\r\n\r\n  return {\r\n    revenue: chart('Revenue by Type', 'event_revenue', 'stackedBar'),\r\n    transactions: chart('Number of Transactions', 'event_transaction_count', 'multiLine'),\r\n    reservations: chart('Reservations Per Garage', 'event_reservation_occupancy', 'stackedBar')\r\n  };\r\n};\r\n\r\nfunction getLiveCharts() {\r\n  const me: EnterpriseEvent = this;\r\n  const interval ={...me.liveQueryInterval };\r\n\r\n  const revenueAndTransactions = {\r\n    \"title\": \"Revenue & Transactions\",\r\n    \"revenueTimeSeriesQuery\": {\r\n      \"metricType\": \"event_revenue\",\r\n      \"resourceIds\": [],\r\n      \"crossSeriesReducer\": \"SUM\",\r\n      \"alignment\": {\r\n        \"alignmentPeriod\": \"1h\",\r\n        \"alignmentReducer\": \"SUM\"\r\n      },\r\n      interval\r\n    },\r\n    \"transactionTimeSeriesQuery\": {\r\n      \"metricType\": \"event_transaction_count\",\r\n      \"resourceIds\": [],\r\n      \"crossSeriesReducer\": \"SUM\",\r\n      \"alignment\": {\r\n        \"alignmentPeriod\": \"1h\",\r\n        \"alignmentReducer\": \"SUM\"\r\n      },\r\n      interval\r\n    },\r\n    \"backgroundColor\": \"#FFFFFF\",\r\n    \"xAxisLabel\": \"T\",\r\n    \"yAxisLabel\": \"Occupancy\",\r\n    \"chartTypes\" : [\"combined\"]\r\n  };\r\n\r\n  const reservations = {\r\n    \"title\": \"Total Cars Parked\",\r\n    \"timeSeriesQuery\": {\r\n      \"metricType\": \"event_reservation_occupancy\",\r\n      \"resourceIds\": [],\r\n      \"crossSeriesReducer\": \"NONE\",\r\n      interval\r\n    },\r\n    \"backgroundColor\": \"#FFFFFF\",\r\n    \"xAxisLabel\": \"T\",\r\n    \"yAxisLabel\": \"Occupancy\",\r\n    \"chartTypes\" : [ \"stackedBar\"]\r\n  };\r\n\r\n  return {\r\n    reservations,\r\n    revenueAndTransactions\r\n  };\r\n};\r\n\r\nconst [getAnalyticsStats, getLiveStats] = (() => {\r\n  function sumPoints(points) {\r\n    return points.reduce((sum, point) => point.isMissing? sum: sum + point.value, 0)\r\n  }\r\n\r\n  function getStats(epId: string, type: 'analytics' | 'live'): Promise<Stats> {\r\n    const me = this as EnterpriseEvent;\r\n    const interval = type === 'analytics'\r\n      ? me.analyticsQueryInterval\r\n      : me.liveQueryInterval;\r\n\r\n    const alignmentPeriod = type === 'analytics'? '1d': '1h';\r\n\r\n    const revenueQuery = {\r\n      metricType: 'event_revenue',\r\n      resourceIds: [me.id],\r\n      crossSeriesReducer: 'NONE',\r\n      alignment: {\r\n        alignmentPeriod,\r\n        alignmentReducer: 'SUM'\r\n      },\r\n      interval\r\n    };\r\n  \r\n    const transactionQuery = {...revenueQuery, metricType: 'event_transaction_count', crossSeriesReducer: 'SUM' };\r\n\r\n    console.log(JSON.stringify(revenueQuery, null, 2));\r\n    console.log(JSON.stringify(transactionQuery, null, 2));\r\n  \r\n    return Promise.all([\r\n      API.getTimeSeries(epId, transactionQuery),\r\n      API.getTimeSeries(epId, revenueQuery)\r\n    ]).then( ([ r1, r2 ]) => {\r\n\r\n      if (!r1.timeSeriesResult || !r2.timeSeriesResult) throw new Error('Should not be null');\r\n\r\n      //revenue\r\n      const ts1 = r2.timeSeriesResult as TimeSeries.Result;\r\n      const normal = sumPoints(ts1.timeSeries[0].points);\r\n      const dynamic = sumPoints(ts1.timeSeries[1].points);\r\n      const total = normal + dynamic;\r\n      \r\n      //transactions\r\n      const ts2 = r1.timeSeriesResult as TimeSeries.Result;\r\n      const transactions = sumPoints(ts2.timeSeries[0].points);\r\n      return { revenue: { normal, dynamic, total }, transactions };\r\n    })\r\n  }\r\n\r\n  function getAnalyticsStats(epId: string): Promise<Stats> {\r\n    const me = this as EnterpriseEvent;\r\n    return getStats.call(me, epId, 'analytics');\r\n  }\r\n\r\n  function getLiveStats(epId: string): Promise<Stats> {\r\n    const me = this as EnterpriseEvent;\r\n    return getStats.call(me, epId, 'live');\r\n  }\r\n\r\n  return [getAnalyticsStats, getLiveStats];\r\n})();\r\n\r\nexport interface Stats {\r\n  revenue: { normal: number; dynamic: number; total: number; }\r\n  transactions: number;\r\n}\r\n\r\nexport interface EnterpriseEvent {\r\n  id: string;\r\n  name: string;\r\n  start: Date;\r\n  end: Date;\r\n  getAnalyticsCharts: { (): { revenue: any; transactions: any; reservations: any } };\r\n  getLiveCharts: { (): { revenueAndTransactions: any, reservations: any }  };\r\n  getAnalyticsStats: { (epId: string): Promise<Stats> };\r\n  getLiveStats: { (epId: string): Promise<Stats> };\r\n  analyticsQueryInterval: { startTime: string; endTime: string; }\r\n  liveQueryInterval: { startTime: string; endTime: string; }\r\n  reservationOccupancy: {\r\n    garageName: string;\r\n    occupancy: number;\r\n    staffs: number;\r\n  }[]\r\n}\r\n\r\nexport function getEnterpriseEvent(eventId: string) {\r\n  return getEnterpriseEvents().find(e => e.id === eventId);\r\n}\r\n\r\nexport function getEnterpriseEvents(): EnterpriseEvent[] {\r\n  const start = new Date(Date.UTC(2020, 9, 30)).toISOString();\r\n  const end = new Date(Date.UTC(2020, 10, 6)).toISOString();\r\n\r\n  const e1: any = {\r\n    id: '5b345cb3ea260d03b87438dd',\r\n    name: 'Jay-Z Concert',\r\n    start,\r\n    end,\r\n    analyticsQueryInterval: { startTime: start, endTime: end },\r\n    liveQueryInterval: defaultInterval(),\r\n    reservationOccupancy:[\r\n      {\r\n        garageName: 'North 10th St Garage',\r\n        occupancy: .25,\r\n        staffs: 4,\r\n        expStaffs: 2\r\n      },\r\n      {\r\n        garageName: 'South 7th St Garage',\r\n        occupancy: .25,\r\n        staffs: 3,\r\n        expStaffs: 3\r\n      },\r\n      {\r\n        garageName: 'West 4th St Garage',\r\n        occupancy: .5,\r\n        staffs: 2,\r\n        expStaffs: 3\r\n      }\r\n    ]\r\n\r\n  };\r\n\r\n  const bindFunctions = (e: EnterpriseEvent) => {\r\n    e.getAnalyticsCharts = getAnalyticsCharts.bind(e); \r\n    e.getLiveCharts = getLiveCharts.bind(e); \r\n    e.getAnalyticsStats = getAnalyticsStats.bind(e);\r\n    e.getLiveStats = getLiveStats.bind(e);\r\n  }\r\n  bindFunctions(e1);\r\n\r\n  const e2: any = {\r\n    id: '5b345cb3ea260d03b87438de',\r\n    name: 'Taylor Swift Concert',\r\n    start,\r\n    end,\r\n    analyticsQueryInterval: { startTime: start, endTime: end },\r\n    liveQueryInterval: defaultInterval(),\r\n    reservationOccupancy: [\r\n      {\r\n        garageName:  'North 10th St Garage',\r\n        occupancy: .35,\r\n        staffs: 23\r\n      },\r\n      {\r\n        garageName: 'South 7th St Garage:',\r\n        occupancy: .5,\r\n        staffs: 19\r\n      },\r\n      {\r\n        garageName:'West 4th St Garage',\r\n        occupancy: .15,\r\n        staffs: 10\r\n      } \r\n    ]\r\n  };\r\n  bindFunctions(e2);\r\n\r\n  return [e1, e2];\r\n}\r\n\r\nconst selectedEnterpriseEventManager = (() => {\r\n  let selectedEnterpriseEvent = getEnterpriseEvents()[0];\r\n\r\n  let listeners : any[] = [];\r\n\r\n  return {\r\n    get selectedEnterpriseEvent() {\r\n      return selectedEnterpriseEvent;\r\n    },\r\n\r\n    addSelectedEnterpriseChangeListener(fn: any) {\r\n      const exists = !!listeners.find(l => l === fn);\r\n      if (!exists) {\r\n        listeners.push(fn);\r\n      }    \r\n    },\r\n\r\n    removeSelectedEnterpriseChangeListener(listener: any) {\r\n      listeners = listeners.filter(l => l === listener);\r\n    },\r\n\r\n    selectEnterpriseEvent(eventId: string) {\r\n      if (selectedEnterpriseEvent.id === eventId) return;\r\n      const event = getEnterpriseEvents().find(e => e.id === eventId);\r\n      if (!event) return;\r\n      selectedEnterpriseEvent = event;\r\n      listeners.forEach(l => l(event));\r\n    }\r\n  }\r\n})()\r\n\r\nexport function useSelectEnterpriseEvent() {\r\n  const [E, setE] = useState(selectedEnterpriseEventManager.selectedEnterpriseEvent);\r\n\r\n  useEffect(() => {\r\n    const listener = (event: EnterpriseEvent) => {\r\n      setE(event);\r\n    }\r\n\r\n    selectedEnterpriseEventManager.addSelectedEnterpriseChangeListener(listener);\r\n\r\n    return () => selectedEnterpriseEventManager.removeSelectedEnterpriseChangeListener(listener);\r\n  },[]);\r\n\r\n  return {\r\n    enterpriseEvent: E, \r\n    selectEnterpriseEvent: (eventId: string) => {\r\n      selectedEnterpriseEventManager.selectEnterpriseEvent(eventId);\r\n    }\r\n  }\r\n}\r\n","export const formatPercent = (n: number) => {\r\n  return (n * 100).toFixed(2) + ' %';\r\n}\r\n\r\nexport const formatCentsToDollars = (n: number) => {\r\n  return '$' + Math.round((n / 100));\r\n}","import { useState, useEffect } from 'react';\r\n\r\nexport default function usePromise<T>(promise: Promise<T>): { data: T | null, error: Error | null, loading: boolean; } {\r\n  const [state, setState] = useState({\r\n    data: null,\r\n    error: null,\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    promise\r\n      .then(result => {\r\n        setState({\r\n          data: result,\r\n          error: null,\r\n          loading: false\r\n        })\r\n      })\r\n      .catch(error => {\r\n        setState({\r\n          data: null,\r\n          error: error,\r\n          loading: true\r\n        })\r\n      });\r\n  }, [promise])\r\n\r\n   return state;\r\n}","import React, { useMemo } from 'react';\r\nimport { Grid, Header as Text, List, Empty , Loader} from 'platyplex_ui';\r\nimport useGarages from '../../../hooks/garage';\r\nimport { useSelector } from 'react-redux';\r\nimport { Garage } from '../../../model/domain/garage';\r\nimport { ScoreCard } from '../../../components/score-card/score-card';\r\nimport { overflow } from '../../../utils/text';\r\nimport { moment } from '../../../utils/time';\r\nimport { invertedTxtColor } from '../../../config';\r\nimport PieChart from '../../../components/chart/components/graph/pie-chart'\r\nimport { getEnterpriseEvents, useSelectEnterpriseEvent, Stats } from '../model';\r\nimport * as formatter from '../../../utils/pretty_format';\r\nimport { Select } from 'antd';\r\nimport usePromise from '../../../hooks/promise_hook';\r\n\r\n\r\nconst enterpriseEvents = getEnterpriseEvents();\r\n\r\nconst Header = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { enterpriseEvent, selectEnterpriseEvent } = useSelectEnterpriseEvent();\r\n    const garages = enterpriseEvent.reservationOccupancy;\r\n    const { data, loading } = usePromise<Stats>(useMemo(() => enterpriseEvent.getAnalyticsStats(eId),\r\n        [enterpriseEvent.id]));\r\n\r\n    return (\r\n        <Grid\r\n            cols='4'\r\n            style={{ gridColumn: '1/-1', marginBottom: '1em' }}\r\n            width='100%'\r\n            padding='1.5em 1.5em 0 1.5em'\r\n        >\r\n            <div\r\n                id='header'\r\n                className='grid'\r\n                style={{\r\n                    width: '100%',\r\n                    margin: '0 0 .75em 0',\r\n                    gridColumn: '1/-1',\r\n                    gridTemplateColumns: '1fr auto'\r\n                }}>\r\n                <Select\r\n                    style={{ width: '300px', placeSelf: 'start', color: 'white' }}\r\n                    disabled={loading}\r\n                    placeholder=\"Select\"\r\n                    onChange={eventIds => selectEnterpriseEvent(eventIds)}\r\n                    value={enterpriseEvent.id}>\r\n                    {enterpriseEvents.map(e => (\r\n                        <Select.Option\r\n                            key={e.id}\r\n                            className='capitalize'\r\n                            value={e.id}>\r\n                            {e.name}\r\n                        </Select.Option>))}\r\n                </Select>\r\n                <Text size={4.6} color={invertedTxtColor} className='hide-mobile'>  Updated at: {moment().format('hh:mm A')}</Text>\r\n            </div>\r\n\r\n\r\n            <ScoreCard title='Total Revenue' faIcon='fa fa-money' hoverLabel='Total Revenue' borderRight>\r\n                {loading\r\n                    ? <Loader.Spinner color='inherit' />\r\n                    : <PieChart\r\n                        height={130}\r\n                        width={130}\r\n                        text={data ? formatter.formatCentsToDollars(data.revenue.total) : 'N/A'}\r\n                        data={data ? [\r\n                            { label: `Normal Pricing (${formatter.formatCentsToDollars(data.revenue.normal)} total)`, value: data.revenue.normal },\r\n                            { label: `Dynamic Pricing (${formatter.formatCentsToDollars(data.revenue.dynamic)} total)`, value: data.revenue.dynamic }\r\n                        ] : [{ label: 'N/A', value: 'N/A' }]} />\r\n                }\r\n\r\n            </ScoreCard>\r\n\r\n            <ScoreCard title='Transactions' faIcon='fas fa-money-check-alt' hoverLabel='Revenue' borderRight>\r\n                {loading\r\n                    ? <Loader.Spinner color='inherit' />\r\n                    : <span className='txt-lgx'>{data ? data.transactions : 'N/A'}</span>\r\n                }\r\n            </ScoreCard>\r\n            <ScoreCard title='Reservation Occupancy' faIcon='fa fa-car' hoverLabel='Occupancy Count' span={2}>\r\n                <Grid placeSelf='start' >\r\n                    <Grid\r\n                        customCols={loading ? '1fr' : '1fr  minmax(15em, auto)'}\r\n                        placeItems='stretch'\r\n                        width='100%'\r\n                        color='white'\r\n                        gridGap='.2em 1.5em'\r\n                    >\r\n                        <List\r\n                            loading={loading}\r\n                            empty={\r\n                                <div style={{ gridColumn: '1/-1' }}>\r\n                                    <Empty text={'No Garage Occupancy'} color=\"white\" style={{ width: '7em', margin: '0 auto' }} />\r\n                                </div>\r\n                            }\r\n                            pagination={{ items: 2 }}\r\n                            list={enterpriseEvent.reservationOccupancy}\r\n                            map={(({ garageName, occupancy, staffs, expStaffs }: any) => {\r\n                                return (\r\n                                    <>\r\n                                        <span className='txt-overflow'>{overflow(garageName, 23)}</span>\r\n                                        <ScoreCard.PercentBar\r\n                                            status\r\n                                            percent={occupancy * 100}\r\n                                            text={`${occupancy * 100 * 13} / ${1300}`}\r\n                                        />\r\n                                        <Grid\r\n                                            mobileLayout={false}\r\n                                            customCols='auto auto'\r\n                                            style={{ gridColumn: '1/-1', marginBottom: '1em' }}\r\n                                            width='100%'\r\n                                            placeItems='stretch' >\r\n                                            <span className='txt-left bold'>\r\n                                                Estimated Staff: {staffs}\r\n                                            </span>\r\n\r\n                                            <span className='txt-right bold'>\r\n                                                Actual Staff Assigned: {expStaffs}\r\n                                            </span>\r\n\r\n                                        </Grid>\r\n                                    </>\r\n                                )\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </ScoreCard>\r\n        </Grid>);\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport Listings from './listings';\r\nimport { Switch } from \"platyplex_ui\";\r\nimport Analytics from \"./analytics\";\r\nimport Live from \"./live\";\r\n\r\nenum Pages {\r\n    \"ANALYTICS\" = \"ANALYTICS\",\r\n    \"LISTINGS\" = \"LISTINGS\",\r\n    \"LIVE\" = \"LIVE\"\r\n};\r\n\r\nconst Events = () => {\r\n    const [activePage, setActivePage] = useState<Pages>(Pages.ANALYTICS);\r\n    const switches = <Switch.underlined\r\n        style={{ placeSelf: \"start\", gridColumn: '1/-1' }}\r\n        items={Object.keys(Pages)}\r\n        onClick={(active: Pages) => setActivePage(active)}\r\n        active={activePage}\r\n    />\r\n    return activePage === Pages.LISTINGS ?\r\n        <Listings switches={switches} /> :\r\n        activePage === Pages.ANALYTICS? \r\n        <Analytics switches={switches} /> :\r\n        <Live switches={switches} />\r\n};\r\n\r\nexport default Events;","import React, { useMemo } from \"react\";\r\nimport Layout from '../../../layout';\r\nimport { Grid } from \"platyplex_ui\";\r\nimport Header from \"./header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Chart from '../../../components/chart';\r\nimport { useMetricData } from '../../../hooks/metrics';\r\nimport { useSelectEnterpriseEvent } from '../model';\r\n\r\nconst Analytics = ({ switches }: { switches: JSX.Element }) => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { enterpriseEvent: activeEvent } = useSelectEnterpriseEvent();\r\n    const downloads = ['event-revenue', 'event-transactions', 'event-reservations']\r\n    const metricDataParam = (charts, i: number) => ({ timeseries: charts[i].timeSeriesQuery, interval: charts[i].timeSeriesQuery.interval, eId });\r\n\r\n    const charts = (() => {\r\n        const charts = activeEvent.getAnalyticsCharts();\r\n        return [charts.revenue, charts.transactions, charts.reservations];\r\n    })();\r\n\r\n    const metricDataStatuses = [\r\n        useMetricData(metricDataParam(charts, 0)),\r\n        useMetricData(metricDataParam(charts, 1)),\r\n        useMetricData(metricDataParam(charts, 2)),\r\n    ];\r\n\r\n    useMemo(() => {\r\n        const refreshMetricsData = (i: number) => {\r\n            metricDataStatuses[i].refresh(charts[i].timeSeriesQuery);\r\n        }\r\n        [0, 1, 2].forEach(refreshMetricsData);\r\n    }, [activeEvent.id]);\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Layout.Top >\r\n                {switches}\r\n                <Header />\r\n            </Layout.Top>\r\n            <Layout.Bottom>\r\n                <Grid placeItems=\"start stretch\" padding=\"1em\" height=\"100%\">\r\n                    <Grid cols=\"3\" gridGap=\"0 1em\">\r\n                        {charts.map((chart: any, i) => <Chart\r\n                            isPercent={false}\r\n                            className='slide-up'\r\n                            inChartLegend\r\n                            metricDataStatus={metricDataStatuses[i].metricDataStatus}\r\n                            {...chart}\r\n                            download={downloads[i]}\r\n                            eId={eId}\r\n                            queries={{ timeSeriesQuery: charts[i].timeSeriesQuery }}\r\n                        />)}\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout.Bottom>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Analytics;","import React, { useMemo } from 'react';\r\nimport { Grid, Header as Text, List, Empty, Loader } from \"platyplex_ui\";\r\nimport { useSelector } from 'react-redux';\r\nimport { ScoreCard } from '../../../components/score-card/score-card';\r\nimport { overflow } from '../../../utils/text';\r\nimport { moment } from '../../../utils/time';\r\nimport { invertedTxtColor } from '../../../config';\r\nimport PieChart from '../../../components/chart/components/graph/pie-chart'\r\nimport { getEnterpriseEvents, useSelectEnterpriseEvent, Stats } from '../model';\r\nimport * as formatter from '../../../utils/pretty_format';\r\nimport { Select } from 'antd';\r\nimport usePromise from '../../../hooks/promise_hook';\r\n\r\nconst enterpriseEvents = getEnterpriseEvents();\r\n\r\nconst Header = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { enterpriseEvent, selectEnterpriseEvent } = useSelectEnterpriseEvent();\r\n    const garages = enterpriseEvent.reservationOccupancy;\r\n    const { data, loading } = usePromise<Stats>(useMemo(() => enterpriseEvent.getLiveStats(eId), \r\n      [enterpriseEvent.id]));\r\n\r\n    return (\r\n        <Grid\r\n            cols='5'\r\n            style={{ gridColumn: '1/-1', marginBottom: '1em' }}\r\n            width='100%'\r\n            padding='1.5em 1.5em 0 1.5em'\r\n        >\r\n            <div\r\n              id='header'\r\n              className='grid'\r\n              style={{\r\n                width: '100%',\r\n                margin: '0 0 .75em 0',\r\n                gridColumn: '1/-1',\r\n                gridTemplateColumns: '1fr auto'\r\n              }}>\r\n              <Select\r\n                style={{ width: '300px', placeSelf: 'start', color: 'white'}}\r\n                disabled={loading}\r\n                placeholder=\"Select\"\r\n                onChange={eventId => selectEnterpriseEvent(eventId)}\r\n                value={enterpriseEvent.id}>\r\n                {enterpriseEvents.map(e => (\r\n                  <Select.Option\r\n                    key={e.id}\r\n                    className='capitalize'\r\n                    value={e.id}>\r\n                      {e.name}\r\n                  </Select.Option>))}\r\n              </Select>\r\n\r\n                <Text size={4.6} color={invertedTxtColor} className='hide-mobile'>  Updated at: {moment().format('hh:mm A')}</Text>\r\n            </div>\r\n\r\n            <ScoreCard title='Total Revenue' faIcon='fa fa-money' hoverLabel='Total Revenue' borderRight>\r\n                  {loading\r\n                    ? <Loader.Spinner color='inherit' />\r\n                    : <PieChart\r\n                       height={130}\r\n                       width={130}\r\n                       text={data? formatter.formatCentsToDollars(data.revenue.total): 'N/A'}\r\n                       data={data? [\r\n                           { label: `Normal Pricing (${formatter.formatCentsToDollars(data.revenue.normal)} total)`, value: data.revenue.normal },\r\n                           { label: `Dynamic Pricing (${formatter.formatCentsToDollars(data.revenue.dynamic)} total)`, value: data.revenue.dynamic }\r\n                       ]: [ { label: 'N/A', value: 'N/A'}]} />\r\n                  }\r\n               \r\n            </ScoreCard>\r\n\r\n            <ScoreCard title='Transactions' faIcon='fas fa-money-check-alt' hoverLabel='Revenue' borderRight>\r\n              {loading\r\n                ? <Loader.Spinner color='inherit' />\r\n                : <span className='txt-lgx'>{data? data.transactions: 'N/A'}</span>\r\n              }\r\n            </ScoreCard>\r\n\r\n            <ScoreCard title='Reservation Occupancy' faIcon='fa fa-car' hoverLabel='Occupancy Count' span={2}>\r\n                <Grid placeSelf='start' >\r\n                    <Grid\r\n                        customCols={loading ? '1fr' : '1fr  minmax(15em, auto)'}\r\n                        placeItems='stretch'\r\n                        width='100%'\r\n                        color='white'\r\n                        gridGap='.2em 1.5em'\r\n                    >\r\n                        <List\r\n                            loading={loading}\r\n                            empty={\r\n                                <div style={{ gridColumn: '1/-1' }}>\r\n                                    <Empty text={'No Garage Occupancy'} color=\"white\" style={{ width: '7em', margin: '0 auto' }} />\r\n                                </div>\r\n                            }\r\n                            pagination={{ items: 2 }}\r\n                            list={garages}\r\n                            map={(({ garageName, occupancy, staffs,  expStaffs }: any) => {\r\n                              return (\r\n                                <>\r\n                                <span className='txt-overflow'>{overflow(garageName, 23)}</span>\r\n                                <ScoreCard.PercentBar\r\n                                    status\r\n                                    percent={occupancy * 100}\r\n                                    text={ `${occupancy * 100 * 13} / ${1300}`}\r\n                                />\r\n                                <Grid\r\n                                    customCols='auto auto'\r\n                                    style={{ gridColumn: '1/-1', marginBottom: '1em' }}\r\n                                    width='100%'\r\n                                    mobileLayout={false}\r\n                                    placeItems='stretch' \r\n                                >\r\n                                    <span className='txt-left bold'>\r\n                                      Estimated Staff: {staffs}\r\n                                    </span>\r\n\r\n                                    <span className='txt-right bold'>\r\n                                    Actual Staff Assigned: {expStaffs}\r\n                                      </span>\r\n\r\n                                </Grid>\r\n                              </>\r\n                              )\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </ScoreCard>\r\n\r\n        </Grid>);\r\n}\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\nimport { Grid, Button, Text } from \"platyplex_ui\";\r\nimport { primaryColor } from \"../../../config\";\r\nimport img from \"../../../assets/announ.svg\";\r\nimport { InputNumber, Switch } from 'antd';\r\nimport { useFormik } from 'formik';\r\nimport logger from '../../../utils/logger';\r\n\r\nexport const Editor = (props: any) => {\r\n    return (\r\n        <Grid customCols=\"3fr 2fr\" width=\"100%\" height=\"100%\" gridGap=\"0\">\r\n            <div style={{ background: primaryColor, height: \"100%\", padding: \"1em\", width: \"100%\" }}>\r\n                <img src={img} style={{ maxWidth: \"300px\" }} />\r\n            </div>\r\n            <Form {...props} />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst defaultValues = {\r\n    garages: [\r\n        {\r\n            id: '11',\r\n            name: 'North 10th St Garage',\r\n            dynamicPricing: false,\r\n            price: 10\r\n        },\r\n        {\r\n            id: '2',\r\n            name: 'South 7th St Garage',\r\n            dynamicPricing: false,\r\n            price: 15\r\n        },\r\n        {\r\n            id: '2',\r\n            name: 'West 4th St Garage',\r\n            dynamicPricing: false,\r\n            price: 15\r\n        }\r\n    ]\r\n};\r\n\r\nconst Form = ({ add, close, initialValues = defaultValues }: any) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const { handleSubmit, handleChange, values, setFieldValue } = useFormik({\r\n        initialValues,\r\n        onSubmit(values) {\r\n            submit(values)\r\n        }\r\n    })\r\n    const submit = async (values: any) => {\r\n        try {\r\n            setLoading(true)\r\n            await add(values);\r\n            close();\r\n        } catch (e) {\r\n            logger.log(e)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const error = false\r\n    const style = {\r\n        padding: \".5em 1em\", height: \"100%\", width: \"100%\", maxHeight: '500px',\r\n        placeItems: \"center stretch\", gridGap: \".4em\", background: \"white\"\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"grid\" style={{ ...style, gridGap: '1em', overflowY: 'auto' }}>\r\n            {\r\n                values.garages.map(({ name }: any, i: number) => (\r\n                    <Grid placeItems=\"stretch\" customCols='auto 1fr' gridGap='0.4em' style={{fontSize: '0.8em'}}>\r\n                        <Text style={{ gridRow: 'span 3', fontSize: '1.2em'}}>{i + 1}.</Text>\r\n                        <Text textAlign=\"left\" placeSelf=\"start\" bold style={{fontSize: '1.2em'}}>{name}</Text>\r\n                        <Grid margin=\"0\" placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                            <Text textAlign=\"left\" placeSelf=\"start\" >Dynamic Pricing</Text>\r\n                            <Switch\r\n                                style={{ placeSelf: \"end\" }}\r\n                                defaultChecked\r\n                                onChange={(checked: boolean) => { }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid placeSelf=\"stretch\" placeItems=\"stretch\" gridGap=\"0\" customCols=\"1fr auto\">\r\n                            <Text textAlign=\"left\" placeSelf=\"start\">Price ($)</Text>\r\n                            <InputNumber\r\n                                min={0}\r\n                                defaultValue={15}\r\n                                step={0.25}\r\n                                style={{ placeSelf: \"start end\" }}\r\n                                name={\"price\"}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                ))\r\n            }\r\n\r\n            <Grid cols=\"2\" size=\"0.7em\" placeItems={\"end stretch\"} height='100%' margin='0 0 2em 0'>\r\n                <Button.Normal\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                    onClick={() => close()}\r\n                >\r\n                    Cancel\r\n                </Button.Normal>\r\n                {loading ?\r\n                    <Button loading disabled>Loading</Button> :\r\n                    <Button.Normal\r\n                        type=\"submit\"\r\n                        disabled={error}\r\n                        onSubmit={(e: React.FormEvent<any>) => handleSubmit(e)}>\r\n                        Confirm\r\n            </Button.Normal>\r\n                }\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import React, { useMemo } from \"react\";\r\nimport Layout from '../../../layout';\r\nimport { Grid, Button } from \"platyplex_ui\";\r\nimport Header from \"./header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Chart from '../../../components/chart';\r\nimport { useMetricData } from '../../../hooks/metrics';\r\nimport { defaultInterval } from '../../../utils/time';\r\nimport { Modal } from \"platyplex_ui\";\r\nimport { Editor } from \"./editor\";\r\nimport { TimeSeries } from '../../../model/domain/metrics';\r\nimport {  useSelectEnterpriseEvent } from '../model';\r\nimport chart from './chart.json';\r\n\r\nconst ts = (timeSeriesQuery: TimeSeries.PartialQuery | any) => ({\r\n    ...timeSeriesQuery,\r\n    interval: defaultInterval()\r\n})\r\n\r\nconst Analytics = ({ switches }: { switches: JSX.Element }) => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const { enterpriseEvent: activeEvent } = useSelectEnterpriseEvent();\r\n\r\n    const { revenueAndTransactions: chart1, reservations: chart2 } = activeEvent.getLiveCharts();\r\n\r\n    const ms11 = useMetricData({\r\n      timeseries: ts(chart1.revenueTimeSeriesQuery),\r\n      eId\r\n    });\r\n    \r\n    const ms12 = useMetricData({\r\n      timeseries: ts(chart1.transactionTimeSeriesQuery),\r\n      eId\r\n    });\r\n\r\n    const ms21 = useMetricData({\r\n      timeseries: ts(chart[1].timeSeriesQuery),\r\n      eId\r\n    });\r\n\r\n  useMemo(() => {\r\n    ms11.refresh(chart1.revenueTimeSeriesQuery);\r\n    ms12.refresh(chart1.transactionTimeSeriesQuery);\r\n    ms21.refresh(chart[1].timeSeriesQuery)\r\n  }, [activeEvent.id]);\r\n \r\n  const EditModal = Modal({\r\n    title: \"Dynamic Pricing\",\r\n    message: <Editor add={()=>{}} close={() => EditModal.close()} />,\r\n    hideCancel: true,\r\n  });\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Layout.Top >\r\n                {switches}\r\n                <Header />\r\n            </Layout.Top>\r\n            <Layout.Bottom>\r\n                <Grid placeItems=\"start stretch\" padding=\"1em\" height=\"100%\">\r\n                    <Grid cols=\"2\" gridGap=\"0 1em\">\r\n                        <Button\r\n                            placeSelf=\"end\"\r\n                            rounded\r\n                            invert\r\n                            shadow\r\n                            onClick={EditModal.open}\r\n                            style={{ gridColumn: '1/-1' }}\r\n                            faIcon={`fa fa-edit`}\r\n                        > Dynamic Pricings</Button>\r\n                            <Chart.Multi\r\n                                className='slide-up'\r\n                                inChartLegend\r\n                                fixedAlignment={'5m'}\r\n                                metricDataStatuses={[ms11.metricDataStatus, ms12.metricDataStatus]}\r\n                                eId={eId}\r\n                                download={'event-revenue-transaction'}\r\n                                queries={{revenueTimeSeriesQuery : ms11.timeseries, transactionTimeSeriesQuery: ms12.timeseries}}\r\n                                {...chart1 as any} \r\n                            />\r\n\r\n                            <Chart\r\n                                inChartLegend\r\n                                isPercent={false}\r\n                                className='slide-up'\r\n                                metricDataStatus={ms21.metricDataStatus}\r\n                                {...chart2 as any}\r\n                                eId={eId} \r\n                                queries={{ timeSeriesQuery : ms21.timeseries}}\r\n                                download='garage-occupancy'\r\n                            />\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout.Bottom>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Analytics;","import React, { useState, useRef } from 'react';\r\nimport { Grid, Button } from 'platyplex_ui';\r\nimport img from '../../../assets/login.svg'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\n\r\n\r\nconst FacebookBtn = ({ login, className, ref }: any) => {\r\n  const [user, setUser] = useState({});\r\n  const response = (res: any) => {\r\n  }\r\n\r\n  let adapter = (profile: any) => {\r\n    let { givenName: name, familyName: lname, email, imageUrl: photo, googleId } = profile;\r\n    return { googleId, email, name };\r\n  }\r\n  return (\r\n    <div className={className}>\r\n      <FacebookLogin\r\n        render={(renderProps: any) => <Button\r\n          invert\r\n          onClick={renderProps.onClick}>\r\n          <i className=\"fab fa-facebook-square\"></i>&nbsp;\r\n        Signup With Facebook</Button>}\r\n        appId=\"1088597931155576\"\r\n        fields=\"name,email,picture\"\r\n        onClick={response}\r\n        callback={response} />\r\n    </div>);\r\n};\r\n\r\nconst GoogleBtn = ({ login, className }: any) => {\r\n  const [user, setUser] = useState({});\r\n\r\n  const response = (res: any) => {\r\n  }\r\n\r\n  let adapter = (profile: any) => {\r\n    let { givenName: name, familyName: lname, email, imageUrl: photo, googleId } = profile;\r\n    return { googleId, email, name };\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      <GoogleLogin\r\n        render={renderProps => <Button\r\n          invert onClick={renderProps.onClick}>\r\n          <i className=\"fab fa-google\"></i>&nbsp;\r\n         Signup With Google\r\n     </Button>}\r\n        clientId=\"432904370571-10sna4o5st6k2aee0q3p09bt05qjgbng.apps.googleusercontent.com\"\r\n        buttonText=\"Login with Google\"\r\n        onSuccess={response}\r\n        onFailure={console.log}\r\n        cookiePolicy={'single_host_origin'}\r\n      /></div>);\r\n};\r\n\r\n\r\nconst AuthBox = () => (\r\n  <Grid\r\n    height=\"100%\"\r\n    padding=\"3em\"\r\n    background=\"linear-gradient(to right top, #0bc062, #00b78b, #00aba7, #009cb4, #0d8cb0);\">\r\n    <img src={img} style={{ width: \"500px\", maxWidth: \"40vw\" }} />\r\n    <Grid cols=\"2\" height='50px'>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default AuthBox;","import React from 'react';\r\nimport { Input } from 'antd';\r\nimport { Button, Text } from 'platyplex_ui';\r\nimport { useFormik } from 'formik';\r\nimport { login } from '../../../store/actions/user'\r\nimport * as  Yup from 'yup';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst loginFields = [\r\n    {\r\n        id: \"email\",\r\n        label: \"Your email\",\r\n        placeholder: \"Example: John.Doe@parkstash.com\",\r\n        hide: false\r\n    },\r\n    {\r\n        id: \"authSecret\",\r\n        label: \"Your Password\",\r\n        placeholder: \"Example: ●●●●●●●\",\r\n        hide: true\r\n    }]\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string().required(\"Required!\").email(\"Must be a Valid Email\"),\r\n    authSecret: Yup.string().required(\"Required!\").min(6, \"Password must contain at least 6 characters\")\r\n});\r\n\r\ntype Values = 'authSecret' | 'email'\r\n\r\nconst Login = ({ passwordForgotToggler, loading, }: any) => {\r\n    const dispatch = useDispatch();\r\n    const { handleSubmit, handleChange, values, errors, touched, handleBlur } = useFormik({\r\n        initialValues: { email: \"\", authSecret: \"\", authType: \"password\" },\r\n        onSubmit(values) {\r\n           dispatch(login(values));\r\n        },\r\n        validationSchema\r\n    })\r\n\r\n    const error = loginFields.reduce((acc: boolean, { id }: any) => acc || Boolean(errors[id as Values]), false);\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n            className=\"shake\"\r\n            style={{ display: \"grid\", paddingTop: \"2em\", width: \"100%\", placeItems: \"center stretch\", gridGap: \".4em\" }}>\r\n            {loginFields.map(({ id, placeholder, label, hide }: any) => {\r\n                const error = errors[id as Values]\r\n            return (\r\n                <div style={{ paddingTop: \".5em\" }} key={id}>\r\n                     <Text textAlign=\"left\" bold>{label} <span className=\"red\">*</span></Text>\r\n                    <Input\r\n                        disabled={loading}\r\n                        type={hide ? 'password' : 'text'}\r\n                        name={id}\r\n                        onBlur={handleBlur}\r\n                        suffix={\r\n                            touched[id as Values] && <Tooltip title={error}>\r\n                                <i className={`fa fa-${error ? 'times-circle red' : 'check green'}`} style={{ position: \"relative\" }}></i>\r\n                            </Tooltip>\r\n                        }\r\n                        value={values[id as Values]}\r\n                        onChange={handleChange}\r\n                        placeholder={placeholder} \r\n                    />\r\n                </div>\r\n            )})}\r\n\r\n            {loading ? <Button loading disabled>Loading</Button> :\r\n                <Button.Normal\r\n                    name='submit'\r\n                    type=\"submit\"\r\n                    disabled={error}\r\n                    onSubmit={(e: any) => handleSubmit(e)}>\r\n                    Confirm\r\n                </Button.Normal>\r\n            }\r\n\r\n            <div><span className=\"pointer hover-bold\" onClick={passwordForgotToggler}>Forgot Password?</span></div>\r\n        </form>)\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    const { garages } = state\r\n    return { garages }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(Login);\r\n","import React from 'react';\r\nimport { Input, Tooltip } from 'antd';\r\nimport { Button, Text  } from 'platyplex_ui';\r\nimport { useFormik } from 'formik';\r\nimport { signup } from '../../../store/actions/user';\r\nimport * as  Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\n\r\nconst signupFields = [\r\n    {\r\n        id: \"name\",\r\n        label: \"Your Name\",\r\n        placeholder: \"Example: John Doe\",\r\n        hide: false\r\n    },\r\n    {\r\n        id: \"email\",\r\n        label: \"Your email\",\r\n        placeholder: \"Example: John Doe\",\r\n        hide: false\r\n    },\r\n    {\r\n        id: \"authSecret\",\r\n        label: \"Your Password\",\r\n        placeholder: \"Example: ●●●●●●●\",\r\n        hide: true\r\n    },\r\n    {\r\n        id: \"confirmPassword\",\r\n        label: \"Confirm Password\",\r\n        placeholder: \"Example: ●●●●●●●\",\r\n        hide: true\r\n    }\r\n]\r\ntype Values = 'name' | 'email' | 'authSecret' | 'confirmPassword'\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string().required(\"Required!\").email(\"Must be a Valid Email\"),\r\n    authSecret: Yup.string().required(\"Required!\").min(6, \"Password must contain at least 6 characters\"),\r\n    confirmPassword: Yup.string()\r\n        .required(\"Required!\")\r\n        .min(6, \"Password must contain at least 6 characters\")\r\n        .oneOf([Yup.ref('authSecret')], 'Passwords must match'),\r\n    name: Yup.string().required(\"Required!\")\r\n});\r\nconst Sigup = ({ loading, signup }: any) => {\r\n    const { handleSubmit, handleChange, errors, values, touched, handleBlur } = useFormik({\r\n        initialValues: { name: \"\", email: \"\", authSecret: \"\", confirmPassword: \"\", authType: \"password\" },\r\n        validationSchema,\r\n        onSubmit(values) {\r\n            signup(values)\r\n        }\r\n    });\r\n\r\n    const error = signupFields.reduce((acc: boolean, { id }: any) => acc || Boolean(errors[id as Values]), false);\r\n    return (\r\n        <form\r\n            className=\"shake grid\"\r\n            onSubmit={handleSubmit}\r\n            style={{background: \"white\", paddingTop: \"1em\", width: \"100%\", placeItems: \"center stretch\", gridGap: \".4em\" }}>\r\n            {signupFields.map(({ hide, id, placeholder, label }: any) => {\r\n                const error = errors[id as Values]\r\n                return (\r\n                    <div style={{ paddingTop: \".5em\" }} key={id}>\r\n                        <Text textAlign=\"left\" bold>{label} <span className=\"red\"> *</span></Text>\r\n                        <Input\r\n                            type={hide ? 'password' : 'text'}\r\n                            name={id}\r\n                            onBlur={handleBlur}\r\n                            suffix={\r\n                                touched[id as Values] && <Tooltip title={error}>\r\n                                    <i className={`fa fa-${error ? 'times-circle red' : 'check green'}`} style={{ position: \"relative\" }}></i>\r\n                                </Tooltip>\r\n                            }\r\n                            value={values[id as Values]}\r\n                            onChange={handleChange}\r\n                            placeholder={placeholder} />\r\n                    </div>)\r\n            })}\r\n\r\n            {loading ? <Button loading disabled>Loading</Button> :\r\n                <Button.Normal\r\n                    name='submit'\r\n                    type=\"submit\"\r\n                    disabled={error}\r\n                    onSubmit={(e: any) => handleSubmit(e)}>\r\n                    Confirm\r\n                </Button.Normal>\r\n            }\r\n        </form>)\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: (I: any) => (any)) {\r\n    return {\r\n        signup: (values: any) => dispatch(signup(values))\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(Sigup);","import React, { useState } from \"react\";\r\nimport {  Button, Text, Notification } from \"platyplex_ui\";\r\nimport img from \"../../../assets/email.svg\";\r\nimport { Input } from \"antd\";\r\nimport { primaryColor } from \"../../../config\";\r\nimport otpImg from '../../../assets/otp.svg';\r\nimport logger from \"../../../utils/logger\";\r\n\r\nconst ConfirmEmail = ({ back, confirmEmail, loading }: any) => {\r\n  const [otp, setOtp] = useState(\"\");\r\n  return (\r\n    <Wrapper \r\n    image={otpImg}\r\n    back={back}\r\n     action={() => confirmEmail(otp)} \r\n     loading={loading}>\r\n    \r\n      <Text textAlign=\"left\" bold>\r\n        Enter your Code\r\n      </Text>\r\n      <Input value={otp} onChange={(e) => setOtp(e.target.value.trim())} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Reset = ({ back, resetPassword, loading }: any) => {\r\n  const [secret, setSecret] = useState({\r\n    user_password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  const submit = () => {\r\n    try {\r\n      if (secret.user_password.length < 5) {\r\n        throw new Error(\"Password Length Should be at least 6 characters\");\r\n      }\r\n      if (secret.user_password !== secret.confirm_password) {\r\n        throw new Error(\"Passwords do not Match\");\r\n      }\r\n      resetPassword(secret.user_password);\r\n    } catch (e) {\r\n      logger.log(e)\r\n      Notification.error({ title: \"Error\", message: e.message });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper \r\n    back={back} \r\n    action={submit} \r\n    loading={loading}>\r\n  \r\n      <Text textAlign=\"left\" bold>\r\n        Enter your Password\r\n        </Text>\r\n      <Input\r\n        name=\"password\"\r\n        type=\"password\"\r\n        onChange={({ target: { value: user_password } }) =>\r\n          setSecret({ ...secret, user_password })\r\n        }\r\n      />\r\n      <br />\r\n\r\n      <Text textAlign=\"left\" bold>\r\n        Confirm your Password\r\n        </Text>\r\n      <Input\r\n        name=\"confirm-password\"\r\n        type=\"password\"\r\n        onChange={({ target: { value: confirm_password } }) =>\r\n          setSecret({ ...secret, confirm_password })\r\n        }\r\n      />\r\n    </Wrapper >\r\n  );\r\n};\r\n\r\nconst SelectEmail = ({ selectEmail, back, loading }: any) => {\r\n  const [user_email, setEmail] = useState(\"\");\r\n\r\n  return (\r\n    <Wrapper\r\n      back={back}\r\n      loading={loading}\r\n      action={() => selectEmail(user_email)}>\r\n  \r\n      <Text textAlign=\"left\" bold>\r\n        Enter Your Email <span className=\"red\">*</span>\r\n        </Text>\r\n      <div style={{ width: \"100%\" }}>\r\n        <Input\r\n          name=\"email\"\r\n          value={user_email}\r\n          onChange={(e) => setEmail(e.target.value.trim())}\r\n        />\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = ({ children, back, loading, action, image = img }: any) => {\r\n  return (\r\n    <div style={{ padding: \"1em 2em\" }} className=\"shake\">\r\n      <div\r\n        className=\"bold pointer txt-left\"\r\n        onClick={back}\r\n        style={{ color: primaryColor, width: \"100%\", padding: 0 }}\r\n      >\r\n       <i className=\"fa fa-chevron-left\"></i> &nbsp;Back\r\n      </div>\r\n      <img\r\n        src={image}\r\n        alt=\"Select Email\"\r\n        style={{ height: \"50%\", maxWidth: \"40vw\", width: \"300px\" }}\r\n      />\r\n      <form onSubmit={(e) => e.preventDefault()} style={{marginTop: \"3em\"}}>\r\n        {children}\r\n        <Button\r\n          padding={\".3em\"}\r\n          loading={loading}\r\n          disabled={loading}\r\n          margin=\".8rem 0\"\r\n          width=\"100%\"\r\n          onClick={action}>\r\n          Confirm\r\n       </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default {\r\n  SelectEmail,\r\n  Reset,\r\n  ConfirmEmail,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Text, Header, Notification } from \"platyplex_ui\";\r\nimport { disabledTxtColor as disabled, primaryColor as color } from \"../../../config\";\r\nimport Login from \"./login\";\r\nimport Sigup from \"./signup\";\r\nimport ForgotPassword from \"./forgot-password\";\r\nimport api from \"../../../api\";\r\nimport { useSelector } from \"react-redux\";\r\nimport logger from \"../../../utils/logger\";\r\n\r\nconst states = {\r\n  SIGNUP: \"SIGNUP\",\r\n  LOGIN: \"LOGIN\",\r\n  PASSWORD_SELECT_EMAIL: \"PASSWORD_SELECT_EMAIL\",\r\n  PASSWORD_CONFIRM_EMAIL: \"PASSWORD_CONFIRM_EMAIL\",\r\n  PASSWORD_RESET: \"PASSWORD_RESET\",\r\n};\r\n\r\nconst UserSelectBox = () => {\r\n  const [state, setState] = useState(states.LOGIN);\r\n  const [passwordLoading, setLoading] = useState(false);\r\n  const loading = useSelector((state: any) => state.user.loading);\r\n\r\n  const [reset, setResetFields] = useState({\r\n    user_email: \"\",\r\n    authtoken: \"\",\r\n  });\r\n\r\n  const toggler = () =>\r\n    setState(state === states.LOGIN ? states.SIGNUP : states.LOGIN);\r\n\r\n  \r\n  const error = (e : any) => {\r\n    logger.log(e)\r\n    Notification.error({ title: \"Error\", message: String(e) })\r\n  }\r\n  const notify = (e : string) => ()=>Notification.success({ title: \"Success\", message: String(e) })\r\n  const finished = () =>  setLoading(false)\r\n  const changeState = (s: string) =>setState(s)\r\n\r\n  const selectEmail = (user_email: string) => {\r\n    setLoading(true);\r\n    api\r\n      .forgotPassword({ user_email })\r\n      .then((res: any) => {\r\n        if (res.success) {\r\n          changeState(states.PASSWORD_CONFIRM_EMAIL);\r\n          notify(\"4 Digit Code was sent to your email\")\r\n          setResetFields({ ...reset, user_email });\r\n        } else throw new Error(res.message);\r\n      })\r\n      .catch(error)\r\n      .finally(finished);\r\n  };\r\n\r\n  const confirmEmail = (otp: string) => {\r\n    const { user_email } = reset;\r\n    setLoading(true);\r\n    api\r\n      .confirmEmail({ user_email, otp })\r\n      .then((res: any) => {\r\n        if (res.success) {\r\n          setResetFields({ ...reset, authtoken: res.token });\r\n          changeState(states.PASSWORD_RESET);\r\n        } else throw new Error(res.message);\r\n      })\r\n      .catch(error)\r\n      .finally(finished);\r\n  };\r\n\r\n  const resetPassword = (user_password: string) => {\r\n    setLoading(true);\r\n    const { authtoken } = reset;\r\n    api\r\n      .resetPassword({ authtoken }, { user_password })\r\n      .then((res: any) => {\r\n        if (res.success) {\r\n          changeState(states.LOGIN);\r\n          notify(\"Your password was Reset\")\r\n        } else throw new Error(res.message);\r\n      })\r\n      .catch(error)\r\n      .finally(finished);\r\n  };\r\n\r\n  const passwordForgotToggler = () => setState(states.PASSWORD_SELECT_EMAIL);\r\n\r\n  const back = () => setState(states.LOGIN);\r\n\r\n  switch (state) {\r\n    case states.PASSWORD_SELECT_EMAIL:\r\n      return (\r\n        <ForgotPassword.SelectEmail\r\n          back={back}\r\n          selectEmail={selectEmail}\r\n          loading={passwordLoading}\r\n        />\r\n      );\r\n\r\n    case states.PASSWORD_RESET:\r\n      return (\r\n        <ForgotPassword.Reset\r\n          back={back}\r\n          resetPassword={resetPassword}\r\n          loading={passwordLoading}\r\n        />\r\n      );\r\n\r\n    case states.PASSWORD_CONFIRM_EMAIL:\r\n      return (\r\n        <ForgotPassword.ConfirmEmail\r\n          back={back}\r\n          confirmEmail={confirmEmail}\r\n          loading={passwordLoading}\r\n        />\r\n      );\r\n\r\n    case states.SIGNUP:\r\n      return (\r\n        <Wrapper state={state} toggler={toggler}>\r\n          <Sigup loading={loading} />\r\n        </Wrapper>\r\n      );\r\n\r\n    default:\r\n      return (\r\n        <Wrapper state={state} toggler={toggler}>\r\n          <Login\r\n            passwordForgotToggler={passwordForgotToggler}\r\n            loading={loading}\r\n          />\r\n        </Wrapper>\r\n      );\r\n  }\r\n};\r\n\r\nconst Wrapper = ({ children, state, toggler }: any) => {\r\n  const isActive = (s: string) => state === s;\r\n  return (\r\n    <div className=\"noselect\" style={{ width: \"100%\", padding: \"1.5em\" }}>\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <span\r\n          className={\"bold pointer \"}\r\n          onClick={!isActive(states.LOGIN) ? toggler : () => {}}\r\n          style={{ color: !isActive(states.LOGIN) ? disabled : color, fontSize: \"1.16em\", padding: '.3em .4em' }}\r\n        >\r\n          Login\r\n        </span>{\" \"}\r\n        &nbsp;\r\n        <span\r\n          className=\"bold pointer\"\r\n          onClick={!isActive(states.SIGNUP) ? toggler : () => {}}\r\n          style={{ color: !isActive(states.SIGNUP) ? disabled : color, fontSize: \"1.16em\" }}\r\n        >\r\n          Signup\r\n        </span>\r\n      </div>\r\n\r\n      <Header bold textAlign=\"left\" size={2}>\r\n        {state}\r\n      </Header>\r\n      <Text color={disabled} textAlign=\"left\">\r\n        {state} to continue to ParkStash Dasboard\r\n      </Text>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSelectBox;\r\n","import { useState, useEffect } from \"react\";\r\nimport API from \"../api\";\r\nimport logger from \"../utils/logger\";\r\n\r\nexport const useEnterprises = (userId = null) => {\r\n  const [state, setState] = useState({\r\n    enterprises: [],\r\n    loading: false,\r\n    error: false\r\n  });\r\n\r\n  const getEnterpises = async () => {\r\n    setState({ ...state, loading: true, error: false });\r\n    try {\r\n      const res = await API.getEnterprises();\r\n      setState({ ...state, loading: false, error: false, enterprises: res.enterprises })\r\n    } catch (e) {\r\n      logger.log(e)\r\n      error(e);\r\n    }\r\n  }\r\n\r\n  const error = (e: any) => setState({ ...state, loading: false, error: true, enterprises: [] })\r\n\r\n  useEffect(() => { getEnterpises();}, [userId]);\r\n  return {\r\n    ...state,\r\n    getEnterpises,\r\n    refresh: getEnterpises\r\n  };\r\n};\r\n\r\nexport default {\r\n  useEnterprises\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Button, Text } from \"platyplex_ui\";\r\nimport img from \"../../../assets/university.svg\";\r\nimport wait from \"../../../assets/wait.svg\";\r\nimport { Select as Sel } from \"antd\";\r\nimport { primaryColor } from \"../../../config\";\r\nimport { useEnterprises } from \"../../../hooks/enterprises\";\r\nimport { Enterprise } from \"../../../model/domain/enterprise\";\r\nimport { addEnterprise, logout } from \"../../../store/actions/user\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst Pending = () => {\r\n  return (\r\n    <Wrapper>\r\n      <img\r\n        src={wait}\r\n        style={{ height: \"50%\", maxWidth: \"40vw\", width: \"300px\" }}\r\n      />\r\n      <Text textAlign=\"left\" bold>\r\n        Please wait till you get approved.\r\n      </Text>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Select = () => {\r\n  const userId = useSelector((state: any) => state.user.user.id);\r\n  const loading = useSelector((state: any) => state.user.loading);\r\n  const dispatch = useDispatch();\r\n  const { enterprises } = useEnterprises() as any;\r\n\r\n  const [ selected, setSelected ] = useState<any>(\"\");\r\n  return (  \r\n    <Wrapper>\r\n      <img\r\n        src={img}\r\n        style={{  maxWidth: \"40vw\", width: \"200px\" }}\r\n      />\r\n      <Text textAlign=\"left\" bold>\r\n        {\"Select your Organization\"}\r\n      </Text>\r\n      <div style={{ width: \"100%\" }}>\r\n        <Sel \r\n            placeholder=\"Select\" \r\n            style={{ width: \"95%\" }} \r\n            value={selected}\r\n            onChange={(e: any)=> setSelected(e)}\r\n        >\r\n          {enterprises?.map(({ id, title, imageUrl }: Enterprise) => (\r\n            <Sel.Option key={id} value={id}>{title}</Sel.Option>\r\n          ))}\r\n        </Sel>\r\n        <Grid cols=\"1\" margin=\"2em 0\">\r\n          <Button\r\n            loading={loading}\r\n            disabled={loading}\r\n            invert\r\n            width=\"95%\"\r\n            onClick={() => dispatch(addEnterprise(selected, userId))}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </Grid>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = ({ children }: any) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Grid\r\n      customRows=\"auto 1fr auto\"\r\n      style={{ padding: \"2em\" }}\r\n      className=\"shake\"\r\n    >\r\n      <div\r\n        className=\"bold pointer txt-right \"\r\n        onClick={()=>dispatch(logout())}\r\n        style={{ color: primaryColor, width: \"100%\"}}\r\n      >\r\n        Logout\r\n      </div>\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default {\r\n  Select,\r\n  Pending,\r\n};\r\n","import React from 'react';\r\nimport UserSelect from './user-select';\r\nimport userStates from '../../json/user-state.json'\r\nimport Enterpise from './enterprise-select/enterprise';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst UserHandleBox = ()=>{\r\n const state = useSelector((state: any) => state.user.userState)\r\n\r\n   switch(state){    \r\n        case userStates.ENTERPISE_SELECT:\r\n        return <Enterpise.Select/>\r\n\r\n        case userStates.ENTERPISE_PENDING:\r\n        return <Enterpise.Pending />\r\n         \r\n        default:\r\n        return <UserSelect />;\r\n    }\r\n};\r\n\r\nexport default UserHandleBox;","import React from 'react';\r\nimport { Card , Grid } from 'platyplex_ui';\r\nimport Layout from '../../layout';\r\nimport AuthBox from './user-select/auth';\r\nimport UserHandleBox from './user-handle';\r\nimport bg from '../../assets/email.svg';\r\n\r\nconst Login = ()=>{\r\n    return<Layout background={bg} style={{\r\n        backgroundPosition: 'bottom left', \r\n        backgroundSize: '50%', \r\n    }}>\r\n        <Grid height='100%'>   \r\n            <Card   \r\n                padding=\"0\"\r\n                grid \r\n                shadow\r\n                placeItems={\"stretch\"}\r\n                customCols={\"3fr 2fr\"}\r\n            > \r\n            <AuthBox />\r\n            <UserHandleBox/>\r\n            </Card>\r\n        </Grid>\r\n    </Layout>\r\n}\r\n\r\nexport default Login","import { useState, useEffect } from \"react\";\r\nimport API from \"../api\";\r\nimport { User } from \"../model/domain/user\";\r\nimport { asyncHandler } from \"../utils\";\r\n\r\nexport const useControl = ({ eId = \"\", refresh = ()=>{}}) => {\r\n  const [state, setter] = useState({\r\n    enterpriseUsers: [],\r\n    loading: false,\r\n    error: false,\r\n  }) as any;\r\n\r\n  const setState = (obj: any) => setter({ ...state, ...obj });\r\n\r\n  const getEnterpriseUsers = async (eId: string) => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () => API.getEnterpriseUsers(eId),\r\n      notify: false,\r\n    });\r\n    setState({\r\n      loading: false,\r\n      error: res?.success || true,\r\n      enterpriseUsers: res?.enterpriseUsers || [],\r\n    });\r\n  };\r\n\r\n  const rejectEnterpriseUser = async (user: User) => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () => API.rejectEnterpriseUser(eId, user.id),\r\n      successMessage: \"User was Rejected\",\r\n      errorMessage: \"User was not Rejected\",\r\n      refresh\r\n    });\r\n    setState({ loading: false, error: res?.success || true });\r\n    getEnterpriseUsers(eId)\r\n  };\r\n\r\n  const removeEnterpriseUser = async (user: User) => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () => API.removeEnterpriseUser(eId, user.id),\r\n      successMessage: \"User was Rejected\",\r\n      errorMessage: \"User was not Rejected\",\r\n      refresh\r\n    });\r\n    setState({ loading: false, error: res?.success || true });\r\n    getEnterpriseUsers(eId)\r\n  };\r\n\r\n  const acceptEnterpriseUser = async (user: User) => {\r\n    setState({ loading: true, error: false });\r\n    const res = await asyncHandler({\r\n      apiCall: () => API.acceptEnterpriseUser(eId, user.id),\r\n      successMessage: \"User was Accepted\",\r\n      errorMessage: \"User was not Accepted\",\r\n      refresh\r\n    });\r\n    setState({ loading: false, error: res?.success || true });\r\n    getEnterpriseUsers(eId)\r\n  };\r\n\r\n  useEffect(() => {getEnterpriseUsers(eId);}, [eId]);\r\n\r\n  return {\r\n    ...state,\r\n    removeEnterpriseUser,\r\n    rejectEnterpriseUser,\r\n    acceptEnterpriseUser,\r\n  };\r\n};\r\n\r\nexport default {\r\n  useControl,\r\n};\r\n","import { Space, Popconfirm } from 'antd';\r\nimport { Button, Badge } from \"platyplex_ui\";\r\nimport React from 'react';\r\nimport { User } from '../../model/domain/user';\r\n\r\nconst columns = (accept:  any, reject: any, remove: any, loadingAction = false) => {\r\n    return [{\r\n        title: 'Name',\r\n        dataIndex: 'user',\r\n        key: 'user',\r\n        render: (user: User) => user.name\r\n    },\r\n    {\r\n        title: 'Email',\r\n        dataIndex: 'user',\r\n        key: 'user',\r\n        render: (user: User) =>user.email\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'role',\r\n        key: 'role',\r\n        render: (_: string, record: any) => {\r\n            const approved = record?.user?.apps?.enterpriseApp === 'enabled'\r\n\r\n            return (\r\n                <i className={`fas fa-${approved ? 'check' : 'times'}-circle ${!approved && 'red'}`}></i>);\r\n        }\r\n    },\r\n    {\r\n        title: 'Role',\r\n        dataIndex: 'role',\r\n        key: 'role',\r\n        render: (text: string) => <Badge inverted className=\"shadow txt-center\">{text}</Badge>,\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (_: any, record: any) => {\r\n            const approved = record?.user?.apps?.enterpriseApp === 'enabled';\r\n            return (\r\n                <Space size=\"middle\">\r\n                    <Button\r\n                        shadow={!loadingAction && !approved}\r\n                        disabled={loadingAction || approved}\r\n                        onClick={() => accept(record.user)}\r\n\r\n                    >\r\n                        <i className=\"fa fa-check\"></i>&nbsp;Accept\r\n                    </Button>\r\n                    <Popconfirm\r\n                        okButtonProps={{size: 'middle'}}\r\n                        cancelButtonProps={{size: 'middle'}}\r\n                        title=\"Are you sure\"\r\n                        onConfirm={() => approved ? remove(record.user) : reject(record.user)}\r\n                    >\r\n                    <Button\r\n                        bg=\"red\"\r\n                        shadow={!loadingAction}\r\n                        disabled={loadingAction}\r\n                    >\r\n                        <i className={`fa fa-${approved ? 'trash' : 'times'}`}></i> &nbsp;{approved ? \"Remove\" : \"Reject\"}\r\n                    </Button>\r\n                    </Popconfirm>\r\n                </Space>\r\n            )\r\n        },\r\n    },\r\n    ]\r\n};\r\n\r\nexport default columns;","import React, { useState } from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport { Card, Switch, Empty } from \"platyplex_ui\";\r\nimport { Table } from \"antd\";\r\nimport { primaryColor, mobileWidth} from \"../../config\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useControl } from \"../../hooks/control\";\r\nimport columns from \"./columns\";\r\nimport { useWidgets } from \"../../hooks/widget\";\r\nimport ScoreCards from \"../../components/score-card/score-cards\";\r\nimport { useRefresh } from \"../../hooks/refresh\";\r\n\r\nconst states = {\r\n  ACCEPTED: \"Enabled\",\r\n  ALL: \"ALL\",\r\n  DEFAULT: \"ALL\",\r\n  PENDING: \"Onboarding\",\r\n  states: [\"Enabled\", \"ALL\", \"Onboarding\"],\r\n};\r\n\r\nlet locale = {emptyText: <Empty text=\"No Users\" />};\r\n\r\nconst Controls = () => {\r\n  const eId = useSelector(({ user }: any) => user.enterprise.id);\r\n  const screen = \"adminControl\";\r\n  const resource = \"enterpriseUser\";\r\n\r\n  const { loading, scoreCards } = useWidgets({ eId, screen, resource });\r\n  const { needsRefresh, refresh} = useRefresh();\r\n  const {\r\n    enterpriseUsers,\r\n    loading: loadingUsers,\r\n    acceptEnterpriseUser,\r\n    removeEnterpriseUser,\r\n    rejectEnterpriseUser,\r\n  } = useControl({ eId, refresh });\r\n \r\n\r\n  const [state, setState] = useState({\r\n    active: states.DEFAULT,\r\n  });\r\n\r\n  const current = enterpriseUsers.filter(\r\n    ({\r\n      user: {\r\n        apps: { enterpriseApp },\r\n      },\r\n    }: any) =>\r\n      enterpriseApp === state.active.toLowerCase() ||\r\n      state.active === states.ALL\r\n  );\r\n\r\n  return (\r\n    <Layout sidebar >\r\n       <Layout.Top style={{paddingTop: '3em'}}>\r\n        <ScoreCards\r\n          loading={loading}\r\n          refresh={refresh}\r\n          scoreCards={scoreCards}\r\n        />\r\n        </Layout.Top>\r\n\r\n        <Layout.Bottom>\r\n          <Card shadow minWidth=\"60vw\" padding=\".5em\">\r\n          <Switch\r\n            active={state.active}\r\n            style={{margin: \"0 0 .5em 0\"}}\r\n            items={states.states}\r\n            onClick={(active: string) => setState({ ...state, active })}\r\n          />\r\n            <DIV>\r\n              <Table\r\n                 className='min-height-table'\r\n                locale={locale}\r\n                rowKey={(record) => record.user.id}\r\n                loading={loadingUsers}\r\n                style={{ color: primaryColor, maxWidth: \"90vw\" }}\r\n                dataSource={current}\r\n                columns={columns(\r\n                  acceptEnterpriseUser,\r\n                  rejectEnterpriseUser,\r\n                  removeEnterpriseUser,\r\n                  loading\r\n                )}\r\n              />\r\n            </DIV>\r\n          </Card>\r\n      </Layout.Bottom>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst DIV = styled.div`\r\n  @media (max-width: ${mobileWidth}) {\r\n    overflow-x: scroll;\r\n  }\r\n`;\r\n\r\nexport default Controls;\r\n","import React, { useEffect } from 'react';\r\nimport Layout from '../../layout';\r\nimport { Grid, Placeholder, Header, List} from 'platyplex_ui';\r\n\r\nimport { XyChart } from '../../model/domain/dashboard';\r\nimport { useSelector } from 'react-redux';\r\nimport ScoreCards from '../../components/score-card/score-cards';\r\nimport { useWidgets } from '../../hooks/widget';\r\nimport { Link } from 'react-router-dom';\r\nimport Chart from '../../components/chart';\r\nimport useTimeseries from '../../hooks/timeseries';\r\nimport { useMetricData } from '../../hooks/metrics';\r\nimport { gradient } from '../../config';\r\nimport chart from './chart.json';\r\nimport { defaultInterval } from '../../utils/time';\r\nimport { AdditionalChartProps } from '../../components/chart/types';\r\nimport { TimeSeries } from '../../model/domain/metrics';\r\nimport { Button } from '../../style';\r\n\r\nconst defaultTimeSeries: TimeSeries.Query = { \r\n    ...chart.timeSeriesQuery,\r\n    interval: defaultInterval()\r\n } as any;\r\n\r\nconst Overview = () => {\r\n    const eId = useSelector((state: any) => state.user.enterprise.id);\r\n    const name = useSelector((state: any) => state.user.user.shortName);\r\n    const { charts, loading, scoreCards, scoreCardOptions, editScoreCards, removeScoreCard } = useWidgets({ eId, screen: \"overview\" });\r\n    const hideOnLoading = loading ? 'hide' : '';\r\n    const { timeseries, actions } =  useTimeseries(defaultTimeSeries);\r\n    const isPercent = timeseries?.metricType?.split('_')?.includes('percent') || false;\r\n    const { metricDataStatus, refresh } = useMetricData({ timeseries: timeseries, eId});\r\n    \r\n    const props: AdditionalChartProps = {\r\n      metricDataStatus,\r\n      filter: <span> \r\n        <Button\r\n            invert={timeseries.metricType !== 'garage_occupancy_count'}\r\n            noBorder={timeseries.metricType !== 'garage_occupancy_count'}\r\n            onClick={() => actions.setMetric('garage_occupancy_count')}\r\n            faIcon={'fas fa-sort-numeric-up'}\r\n            tooltip='Switch to count'\r\n            minWidth=\"3em\"\r\n            margin='0 0 0 1em'\r\n        />  \r\n        <Button\r\n           invert={timeseries.metricType !== 'garage_occupancy_percent'}\r\n           noBorder={timeseries.metricType !== 'garage_occupancy_percent'}\r\n            minWidth=\"3em\"\r\n            onClick={() => actions.setMetric('garage_occupancy_percent')}\r\n            faIcon={'fas fa-percentage'}\r\n            tooltip='Switch to percent'\r\n        />\r\n        </span>\r\n,\r\n      chartTypes: chart.chartTypes\r\n    }\r\n\r\n    useEffect(()=>refresh(timeseries), [ timeseries])\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Layout.Top>\r\n                <Header\r\n                    color=\"white\"\r\n                    margin=\"1em 0 0 0\"\r\n                    className=\"capitalize\"\r\n                    width=\"100%\"\r\n                    bold\r\n                    textAlign=\"left\"\r\n                >\r\n                    &nbsp; Welcome, {name}\r\n                </Header>\r\n                <div></div>\r\n                <ScoreCards\r\n                    loading={loading}\r\n                    eId={eId}\r\n                    removeScoreCard={removeScoreCard}\r\n                    editScoreCards={editScoreCards}\r\n                    scoreCards={scoreCards}\r\n                    scoreCardOptions={scoreCardOptions}\r\n                />\r\n            </Layout.Top>\r\n            <Layout.Bottom>\r\n                <Grid  margin='2em 0 0 0' gridGap='0.3em'>\r\n                    <Header\r\n                        className={hideOnLoading}\r\n                        color=\"white\"\r\n                        bold\r\n                        width=\"100%\"\r\n                        textAlign=\"left\"\r\n                    >\r\n                     &nbsp; Today's Garage Occupancy Overview\r\n                    </Header>\r\n\r\n                    <List    \r\n                        list={charts}\r\n                        loader={<Placeholder\r\n                            lines={7}\r\n                            number={1}\r\n                            style={{ minHeight: \"400px\", minWidth: \"100%\"}}\r\n                        />}\r\n                        loading={loading}\r\n                        map={((item: XyChart) => <Chart \r\n                            {...props} \r\n                            inChartLegend\r\n                            eId={eId}\r\n                            download={chart.download}\r\n                            isPercent={isPercent}\r\n                            {...item.lineChart as any}\r\n                            queries={{timeSeriesQuery : timeseries}}\r\n                        />)}\r\n                    />\r\n                    <Link\r\n                        to=\"/garages\"\r\n                        className={hideOnLoading}\r\n                        style={{ gridColumn: \"1/-1\", placeSelf: \"start\" }}\r\n                    >\r\n                        <Button\r\n                            rounded\r\n                            bold\r\n                            padding=\".5em\"\r\n                            shadow\r\n                            noHover\r\n                            bg={gradient}\r\n                        >\r\n                            See Details &nbsp; <i className=\"fa fa-chevron-right\"></i>\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Layout.Bottom>\r\n        </Layout>\r\n    );\r\n}\r\nexport default Overview;","import React, { Suspense, lazy, useEffect, useState } from 'react';\r\nimport { Garage } from './pages';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport ErrorBoundary from 'antd/lib/alert/ErrorBoundary';\r\nimport Announcement from './pages/announcement';\r\nimport Citations from './pages/citations';\r\nimport Events from './pages/events';\r\nimport Login from './pages/login';\r\nimport { Loader } from 'platyplex_ui';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport userStates from \"./json/user-state.json\";\r\nimport { auth } from './store/actions/user';\r\nimport Controls from './pages/controls';\r\nimport Overview from './pages/overview';\r\nimport logo from './assets/parkstash_logo.png';\r\n\r\nfunction App() {\r\n  const userState = useSelector((state: any) => state.user.userState);\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({ loading: true });\r\n\r\n  useEffect(() => {\r\n    dispatch(auth());\r\n    setTimeout(() => setState({ ...state, loading: false }), 2000)\r\n  }, [])\r\n  return (\r\n    !state.loading ? <ErrorBoundary>\r\n      {userState === userStates.APPROVED ?\r\n        <Switch>\r\n          <Route path=\"/announcements\" render={() => <Announcement />} />\r\n          <Route path=\"/events\" render={() => <Events />} />\r\n          <Route path=\"/citations\" render={() => <Citations />} />\r\n          <Route path=\"/controls\" render={() => <Controls />} />\r\n          <Route path=\"/garages\" render={() => <Garage />} />\r\n          <Route path=\"/\" render={() => <Overview />} />\r\n        </Switch> :\r\n        <Route path=\"/\" render={() => <Login />} />}\r\n    </ErrorBoundary> : <Loader.Custom logo={logo} />\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","  \r\nimport React, { createContext } from 'react';\r\n\r\nexport const ComponentsContext = createContext({\r\n  editMode: false,\r\n  toggleEditMode: ()=>{}\r\n});\r\n\r\nexport class ComponentProvider extends React.Component {\r\n\r\n  toggleEditMode = ()=> this.setState({ editMode : !this.state.editMode});\r\n  \r\n  state = {\r\n    editMode : false,\r\n    toggleEditMode: this.toggleEditMode\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ComponentsContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </ComponentsContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const ComponentConsumer =ComponentsContext.Consumer;","  \r\nimport React, { createContext } from 'react';\r\n\r\nconst initialState = {\r\n  sidebar: false,\r\n  toggleSidebar: ()=>{},\r\n  collapsed: true,\r\n  toggleCollapsed : (b = false)=>{}\r\n}\r\nexport const NavContext = createContext(initialState);\r\n\r\nexport class NavProvider extends React.Component {\r\n\r\n  toggleSidebar = ()=> {this.setState({ sidebar : !this.state.sidebar})};\r\n  \r\n  toggleCollapsed = (collapsed = false)=> this.setState({ collapsed });\r\n  state = {\r\n    ...initialState,\r\n    toggleSidebar : this.toggleSidebar,\r\n    toggleCollapsed: this.toggleCollapsed\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <NavContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </NavContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const NavConsumer = NavContext.Consumer;","import React from 'react';\r\nimport { ComponentProvider } from './context/components';\r\nimport { NavProvider } from './context/nav-context';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store'\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { primaryColor } from './config';\r\nimport 'platyplex_ui/styles/main.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html,body{\r\n    font-size: 15px;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  .ant-btn-primary, .ant-btn{\r\n    border-radius: .3em;\r\n    box-shadow: 0 .1em .1em rgba(0,0,0,.2);\r\n  }\r\n  .ant-btn-primary {\r\n    border-color: ${primaryColor};\r\n    background: ${primaryColor};\r\n  }\r\n  .ant-pagination-item, .ant-pagination-item-active a, .ant-select-selector:hover{\r\n    border-radius: .3em;\r\n    color: black !important;\r\n    border-color: ${primaryColor} !important;\r\n  }\r\n  .ant-select-selector{\r\n    border-radius: .4em !important;\r\n  }\r\n  .ant-picker {\r\n    border-color: #d9d9d9;\r\n  }\r\n  .ant-select-show-search.ant-select-multiple .ant-select-selector{\r\n    height: 40px;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  input:focus, textarea:focus, .ant-picker-focused, input:hover, textarea:hover, .ant-picker:hover{\r\n    border-color: ${primaryColor} !important;\r\n  }\r\n  .ant-btn-primary:hover, .ant-btn-primary:focus, .ant-btn-primary:active, .ant-btn:hover, .ant-btn:focus, .ant-btn:active {\r\n    color: ${primaryColor} !important;\r\n    border-color: ${primaryColor};\r\n    background: white;\r\n    transition: 200ms ease;\r\n    box-shadow: 0 0 0;\r\n  }\r\n  \r\n  .ant-table-cell{\r\n    max-width: 300px;\r\n    font-size: 15px;\r\n  }`;\r\n\r\nconst Main = ({ children }: { children: JSX.Element | JSX.Element[]}) => (\r\n  <NavProvider>\r\n    <ComponentProvider>\r\n      <Provider store={store}>\r\n        <GlobalStyle />\r\n        {children}\r\n      </Provider>\r\n    </ComponentProvider>\r\n  </NavProvider>\r\n);\r\n\r\nexport default Main;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as Sentry from '@sentry/browser';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Providers from './providers';\r\nimport { sentryAPI } from './config';\r\n\r\nSentry.init({ dsn: sentryAPI });\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}